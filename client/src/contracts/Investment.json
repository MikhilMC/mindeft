{
  "contractName": "Investment",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "liquidityContractAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "mindpayContractAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "reserveContractAddress",
      "outputs": [
        {
          "internalType": "address payable",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "stakingContractAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "totalMindapayTokenAmount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "investAmount",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function",
      "payable": true
    },
    {
      "inputs": [],
      "name": "cancelInvestment",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "stakeInvestment",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getReserveContractBalance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "getLiquidityContractBalance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "getUserData",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address payable",
              "name": "userAddress",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "investedAmount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "reserveAmount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "liquidityAmount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "totalTokenAmount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "currentTokenAmount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "investmenstStartingTime",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "investmenstEndingTime",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "usersDataExists",
              "type": "bool"
            }
          ],
          "internalType": "struct Investment.UserData",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "getInvestmentEndingTime",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "getUserMindpayTokenBalance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "getTotalMindpayTokenSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "getCurrentTime",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.14+commit.80d49f37\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"cancelInvestment\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getCurrentTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getInvestmentEndingTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getLiquidityContractBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getReserveContractBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTotalMindpayTokenSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getUserData\",\"outputs\":[{\"components\":[{\"internalType\":\"address payable\",\"name\":\"userAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"investedAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"liquidityAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalTokenAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"currentTokenAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"investmenstStartingTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"investmenstEndingTime\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"usersDataExists\",\"type\":\"bool\"}],\"internalType\":\"struct Investment.UserData\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getUserMindpayTokenBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"investAmount\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"liquidityContractAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"mindpayContractAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"reserveContractAddress\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stakeInvestment\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stakingContractAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalMindapayTokenAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/Investment.sol\":\"Investment\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"project:/contracts/Investment.sol\":{\"keccak256\":\"0x8b1a604a38caa1f28a6aeac1cd9b6c5093a43d289ad80b909d287bd0ff3fa650\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://755c125220846451d9a51f5f9e0441e74ae7600e89e697fbc7c06c36b1cb7e8e\",\"dweb:/ipfs/QmYaGyH8Acpetims9aHwQhn8yUQqBJpY9UzrUSz4Pfayqc\"]},\"project:/contracts/Liquidity.sol\":{\"keccak256\":\"0x84604dea15e5fd9729d0403ea504c83d44f2e1f6f6cf9aa5218f384f0c5f7a9a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3f4d26624d2521721e04a7084f1a465301ba6a6499ae48da19f5779d2213bdbd\",\"dweb:/ipfs/QmdswzPRX7H5hg77noUH42XGiRMnsquEDt9DGRBvbU57mp\"]},\"project:/contracts/Mindpay.sol\":{\"keccak256\":\"0x5e33f8e6ee27bc8fc05f6a09e3031af0cfe5ffd52b8e939f679d0b5b43ea2347\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d8beda9aa47de3c5a92024831aa2a7a15f8caccf7e47f273ea17e01b94b11ebe\",\"dweb:/ipfs/QmQnPUn5Nsn67qzFJmC3RQ89P2Xp8ZEoNDfdWXdFxf9Uxd\"]},\"project:/contracts/Reserve.sol\":{\"keccak256\":\"0xade1807929ce6851b6289ba52515c46ee09910834c7e88e58a4f276005828e4d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8d48b9a47c8e471841545b41f11e235c090b20028aa2e46fdfa67d1b1fd083ef\",\"dweb:/ipfs/Qmf32Z12VXKxat1wb7the4X76QzKPfJoM7hQ4kRuQuKdqb\"]},\"project:/contracts/Staking.sol\":{\"keccak256\":\"0x7a8ae58e14671fa9963431b81fea7d9e3ed48562eb21d69f7371c4187f5e04d6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f86ce68586b0cfd86a5bbea46f3202aea7ed5a015f57ac7e6cbcc8fe61a59321\",\"dweb:/ipfs/Qma9WZd7nVCdvdyepHRcF2mcY9iJi34w5LjqgoCLZgubXf\"]},\"project:/node_modules/@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0x0e9621f60b2faabe65549f7ed0f24e8853a45c1b7990d47e8160e523683f3935\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://287a2f8d5814dd0f05f22b740f18ca8321acc21c9bd03a6cb2203ea626e2f3f2\",\"dweb:/ipfs/QmZRQv9iuwU817VuqkA2WweiaibKii69x9QxYBBEfbNEud\"]},\"project:/node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xe0c8b625a79bac0fe80f17cfb521e072805cc9cef1c96a5caf45b264e74812fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://12fd1efc9ad061ef675bd50fb0c8e3c6f2952a09f8df0e3c688b8d81b8918838\",\"dweb:/ipfs/QmawN6PjTwy91pU7ANjCSgbsLc8TDA6hwu9GsFFaNSuhb5\"]},\"project:/node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"project:/node_modules/@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"project:/node_modules/@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x2ccf9d2313a313d41a791505f2b5abfdc62191b5d4334f7f7a82691c088a1c87\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b3a57d0854b2fdce6ebff933a48dca2445643d1eccfc27f00292e937f26c6a58\",\"dweb:/ipfs/QmW45rZooS9TqR4YXUbjRbtf2Bpb5ouSarBvfW1LdGprvV\"]},\"project:/node_modules/@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"project:/node_modules/@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x0f633a0223d9a1dcccfcf38a64c9de0874dfcbfac0c6941ccf074d63a2ce0e1e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://864a40efcffdf408044c332a5aa38ec5618ed7b4eecb8f65faf45671bd6cdc65\",\"dweb:/ipfs/QmQJquTMtc6fgm5JQzGdsGpA2fqBe3MHWEdt2qzaLySMdN\"]}},\"version\":1}",
  "bytecode": "",
  "deployedBytecode": "0x6080604052600436106100e85760003560e01c80634b3f56e91161008a5780639c84bd63116100595780639c84bd631461027d578063cba1fcea146102a8578063cf8b16bc146102d3578063d37392b9146102fe576100e8565b80634b3f56e9146101e55780636b7bedca1461021057806394f8e9541461023b5780639b4b715414610252576100e8565b806322e8c87d116100c657806322e8c87d1461013957806329cb924d146101645780633535f48b1461018f5780633ef08267146101ba576100e8565b8063029457bc146100ed5780630311904c146101185780630ab1e60314610122575b600080fd5b3480156100f957600080fd5b50610102610329565b60405161010f91906122ae565b60405180910390f35b61012061032f565b005b34801561012e57600080fd5b50610137610f39565b005b34801561014557600080fd5b5061014e6116d0565b60405161015b91906123eb565b60405180910390f35b34801561017057600080fd5b50610179611875565b60405161018691906122ae565b60405180910390f35b34801561019b57600080fd5b506101a461187d565b6040516101b19190612428565b60405180910390f35b3480156101c657600080fd5b506101cf6118a3565b6040516101dc91906122ae565b60405180910390f35b3480156101f157600080fd5b506101fa611950565b6040516102079190612428565b60405180910390f35b34801561021c57600080fd5b50610225611976565b60405161023291906122ae565b60405180910390f35b34801561024757600080fd5b506102506119b7565b005b34801561025e57600080fd5b50610267612072565b60405161027491906122ae565b60405180910390f35b34801561028957600080fd5b5061029261207c565b60405161029f9190612452565b60405180910390f35b3480156102b457600080fd5b506102bd6120a2565b6040516102ca9190612428565b60405180910390f35b3480156102df57600080fd5b506102e86120c8565b6040516102f591906122ae565b60405180910390f35b34801561030a57600080fd5b50610313612109565b60405161032091906122ae565b60405180910390f35b60055481565b600260005403610374576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161036b906124ca565b60405180910390fd5b6002600081905550610385336121b6565b1580156103bd57503373ffffffffffffffffffffffffffffffffffffffff163273ffffffffffffffffffffffffffffffffffffffff16145b6103fc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103f39061255c565b60405180910390fd5b6000341161043f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610436906125c8565b60405180910390fd5b6000349050600061045b6103e8836121d990919063ffffffff16565b90506000670de0b6b3a76400008311801561047d5750674563918244f4000083105b156104c2576104bb6104ac606461049e600a866121d990919063ffffffff16565b6121ef90919063ffffffff16565b8261220590919063ffffffff16565b905061050f565b674563918244f4000083111561050e5761050b6104fc60646104ee6014866121d990919063ffffffff16565b6121ef90919063ffffffff16565b8261220590919063ffffffff16565b90505b5b6000610524828461220590919063ffffffff16565b9050600061054f6064610541605a886121d990919063ffffffff16565b6121ef90919063ffffffff16565b9050600061057a606461056c600a896121d990919063ffffffff16565b6121ef90919063ffffffff16565b9050600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060080160009054906101000a900460ff1615610b02576000600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206006015414801561066557506000600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060070154145b806106fe575042600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600601541080156106fd575042600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060070154105b5b61073d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610734906126a6565b60405180910390fd5b6000600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206001015490506000600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206002015490506000600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206003015490506000600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206004015490506000600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206005015490506108b38b8661220590919063ffffffff16565b600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206001018190555061090c878561220590919063ffffffff16565b600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020181905550610965868461220590919063ffffffff16565b600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600301819055506109be888361220590919063ffffffff16565b600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060040181905550610a17888261220590919063ffffffff16565b600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206005018190555042600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206006018190555061038442610ab291906126f5565b600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600701819055505050505050610c59565b6040518061012001604052803373ffffffffffffffffffffffffffffffffffffffff16815260200187815260200183815260200182815260200184815260200184815260200142815260200161038442610b5c91906126f5565b815260200160011515815250600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506020820151816001015560408201518160020155606082015181600301556080820151816004015560a0820151816005015560c0820151816006015560e082015181600701556101008201518160080160006101000a81548160ff0219169083151502179055509050505b610c6e8360055461220590919063ffffffff16565b600581905550600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc839081150290604051600060405180830381858888f19350505050158015610cdc573d6000803e3d6000fd5b50600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f19350505050158015610d45573d6000803e3d6000fd5b50600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166379c6506833856040518363ffffffff1660e01b8152600401610da392919061274b565b600060405180830381600087803b158015610dbd57600080fd5b505af1158015610dd1573d6000803e3d6000fd5b50505050600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166320d7ee9b33856040518363ffffffff1660e01b8152600401610e3292919061274b565b600060405180830381600087803b158015610e4c57600080fd5b505af1158015610e60573d6000803e3d6000fd5b50505050600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd33600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16866040518463ffffffff1660e01b8152600401610ee5939291906127d3565b6020604051808303816000875af1158015610f04573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f28919061283b565b505050505050506001600081905550565b600260005403610f7e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f75906124ca565b60405180910390fd5b6002600081905550610f8f336121b6565b158015610fc757503373ffffffffffffffffffffffffffffffffffffffff163273ffffffffffffffffffffffffffffffffffffffff16145b611006576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ffd9061255c565b60405180910390fd5b60011515600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060080160009054906101000a900460ff1615151461109c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611093906128b4565b60405180910390fd5b6000600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206001015411611121576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161111890612946565b60405180910390fd5b6000600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060060154141580156111b757506000600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206007015410155b6111f6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016111ed90612a24565b60405180910390fd5b6000600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206002015490506000600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206003015490506000600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206005015490506000600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101819055506000600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206002018190555061136e838361220590919063ffffffff16565b600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600301819055506000600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600501819055506000600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600601819055506000600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060070181905550600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166364d08bc1600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16856040518363ffffffff1660e01b815260040161150b92919061274b565b600060405180830381600087803b15801561152557600080fd5b505af1158015611539573d6000803e3d6000fd5b50505050600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663c30d1b2f600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16836040518363ffffffff1660e01b81526004016115bc929190612a44565b600060405180830381600087803b1580156115d657600080fd5b505af11580156115ea573d6000803e3d6000fd5b50505050600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663fc27c2cb600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16846040518463ffffffff1660e01b815260040161169193929190612a6d565b600060405180830381600087803b1580156116ab57600080fd5b505af11580156116bf573d6000803e3d6000fd5b505050505050506001600081905550565b6116d8612231565b60011515600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060080160009054906101000a900460ff1615151461176e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161176590612af0565b60405180910390fd5b600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020604051806101200160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600182015481526020016002820154815260200160038201548152602001600482015481526020016005820154815260200160068201548152602001600782015481526020016008820160009054906101000a900460ff161515151581525050905090565b600042905090565b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600060011515600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060080160009054906101000a900460ff1615151461190757600061194b565b600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600701545b905090565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1631905090565b6002600054036119fc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016119f3906124ca565b60405180910390fd5b6002600081905550611a0d336121b6565b158015611a4557503373ffffffffffffffffffffffffffffffffffffffff163273ffffffffffffffffffffffffffffffffffffffff16145b611a84576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611a7b9061255c565b60405180910390fd5b60011515600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060080160009054906101000a900460ff16151514611b1a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611b11906128b4565b60405180910390fd5b6000600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206001015411611b9f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611b9690612946565b60405180910390fd5b6000600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206006015414158015611c3557506000600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206007015410155b611c74576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611c6b90612a24565b60405180910390fd5b6000600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206002015490506000600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206004015490506000600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206005015490506000600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101819055506000600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020181905550611dec818361221b90919063ffffffff16565b600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600401819055506000600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600501819055506000600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600601819055506000600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060070181905550611f1f8160055461221b90919063ffffffff16565b600581905550600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16636387439533856040518363ffffffff1660e01b8152600401611f8292919061274b565b600060405180830381600087803b158015611f9c57600080fd5b505af1158015611fb0573d6000803e3d6000fd5b50505050600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663d1df306c600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16836040518363ffffffff1660e01b8152600401612033929190612a44565b600060405180830381600087803b15801561204d57600080fd5b505af1158015612061573d6000803e3d6000fd5b505050505050506001600081905550565b6000600554905090565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1631905090565b600060011515600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060080160009054906101000a900460ff1615151461216d5760006121b1565b600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600401545b905090565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b600081836121e79190612b10565b905092915050565b600081836121fd9190612b99565b905092915050565b6000818361221391906126f5565b905092915050565b600081836122299190612bca565b905092915050565b604051806101200160405280600073ffffffffffffffffffffffffffffffffffffffff168152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081526020016000151581525090565b6000819050919050565b6122a881612295565b82525050565b60006020820190506122c3600083018461229f565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006122f4826122c9565b9050919050565b612304816122e9565b82525050565b61231381612295565b82525050565b60008115159050919050565b61232e81612319565b82525050565b6101208201600082015161234b60008501826122fb565b50602082015161235e602085018261230a565b506040820151612371604085018261230a565b506060820151612384606085018261230a565b506080820151612397608085018261230a565b5060a08201516123aa60a085018261230a565b5060c08201516123bd60c085018261230a565b5060e08201516123d060e085018261230a565b506101008201516123e5610100850182612325565b50505050565b6000610120820190506124016000830184612334565b92915050565b6000612412826122c9565b9050919050565b61242281612407565b82525050565b600060208201905061243d6000830184612419565b92915050565b61244c816122e9565b82525050565b60006020820190506124676000830184612443565b92915050565b600082825260208201905092915050565b7f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00600082015250565b60006124b4601f8361246d565b91506124bf8261247e565b602082019050919050565b600060208201905081810360008301526124e3816124a7565b9050919050565b7f41747461636b2066726f6d20616e20756e6b6e6f776e2065787465726e616c2060008201527f636f6e7472616374000000000000000000000000000000000000000000000000602082015250565b600061254660288361246d565b9150612551826124ea565b604082019050919050565b6000602082019050818103600083015261257581612539565b9050919050565b7f416d6f756e74206d7573742062652061626f7665203000000000000000000000600082015250565b60006125b260168361246d565b91506125bd8261257c565b602082019050919050565b600060208201905081810360008301526125e1816125a5565b9050919050565b7f596f757220696e766573746d656e7420616d6f756e7420616e6420746865207460008201527f6f6b656e7320617265207374696c6c206c6f636b656420696e2074686520636f60208201527f6e74726163742e20506c656173652074727920616674657220736f6d6574696d60408201527f6500000000000000000000000000000000000000000000000000000000000000606082015250565b600061269060618361246d565b915061269b826125e8565b608082019050919050565b600060208201905081810360008301526126bf81612683565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061270082612295565b915061270b83612295565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156127405761273f6126c6565b5b828201905092915050565b60006040820190506127606000830185612419565b61276d602083018461229f565b9392505050565b6000819050919050565b600061279961279461278f846122c9565b612774565b6122c9565b9050919050565b60006127ab8261277e565b9050919050565b60006127bd826127a0565b9050919050565b6127cd816127b2565b82525050565b60006060820190506127e86000830186612419565b6127f560208301856127c4565b612802604083018461229f565b949350505050565b600080fd5b61281881612319565b811461282357600080fd5b50565b6000815190506128358161280f565b92915050565b6000602082840312156128515761285061280a565b5b600061285f84828501612826565b91505092915050565b7f54686973207573657220686176656e277420696e7665737465642e0000000000600082015250565b600061289e601b8361246d565b91506128a982612868565b602082019050919050565b600060208201905081810360008301526128cd81612891565b9050919050565b7f54686973207573657220616c72656164792063616e63656c6c65642f7374616b60008201527f65642074686520696e766573746d656e742e0000000000000000000000000000602082015250565b600061293060328361246d565b915061293b826128d4565b604082019050919050565b6000602082019050818103600083015261295f81612923565b9050919050565b7f596f757220696e766573746d656e7420616d6f756e7420616e6420746865207460008201527f6f6b656e73206172652063757272656e746c79206c6f636b656420696e20746860208201527f6520636f6e74726163742e20506c656173652074727920616674657220736f6d60408201527f6574696d65000000000000000000000000000000000000000000000000000000606082015250565b6000612a0e60658361246d565b9150612a1982612966565b608082019050919050565b60006020820190508181036000830152612a3d81612a01565b9050919050565b6000604082019050612a5960008301856127c4565b612a66602083018461229f565b9392505050565b6000606082019050612a8260008301866127c4565b612a8f6020830185612419565b612a9c604083018461229f565b949350505050565b7f55736572206461746120646f6573206e6f74206578697374732e000000000000600082015250565b6000612ada601a8361246d565b9150612ae582612aa4565b602082019050919050565b60006020820190508181036000830152612b0981612acd565b9050919050565b6000612b1b82612295565b9150612b2683612295565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615612b5f57612b5e6126c6565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000612ba482612295565b9150612baf83612295565b925082612bbf57612bbe612b6a565b5b828204905092915050565b6000612bd582612295565b9150612be083612295565b925082821015612bf357612bf26126c6565b5b82820390509291505056fea264697066735822122081ad2ca0c56473de48c6ba23be54e1cbca634f3a373a07d57f95822d9b310f5764736f6c634300080e0033",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:17359:319",
        "statements": [
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "52:32:319",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "62:16:319",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "73:5:319"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "62:7:319"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "34:5:319",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "44:7:319",
                "type": ""
              }
            ],
            "src": "7:77:319"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "155:53:319",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "172:3:319"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "195:5:319"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "177:17:319"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "177:24:319"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "165:6:319"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "165:37:319"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "165:37:319"
                }
              ]
            },
            "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "143:5:319",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "150:3:319",
                "type": ""
              }
            ],
            "src": "90:118:319"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "312:124:319",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "322:26:319",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "334:9:319"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "345:2:319",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "330:3:319"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "330:18:319"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "322:4:319"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "402:6:319"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "415:9:319"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "426:1:319",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "411:3:319"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "411:17:319"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "358:43:319"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "358:71:319"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "358:71:319"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "284:9:319",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "296:6:319",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "307:4:319",
                "type": ""
              }
            ],
            "src": "214:222:319"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "487:81:319",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "497:65:319",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "512:5:319"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "519:42:319",
                        "type": "",
                        "value": "0xffffffffffffffffffffffffffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "508:3:319"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "508:54:319"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "497:7:319"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint160",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "469:5:319",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "479:7:319",
                "type": ""
              }
            ],
            "src": "442:126:319"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "627:51:319",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "637:35:319",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "666:5:319"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "648:17:319"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "648:24:319"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "637:7:319"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_address_payable",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "609:5:319",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "619:7:319",
                "type": ""
              }
            ],
            "src": "574:104:319"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "755:61:319",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "772:3:319"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "803:5:319"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_address_payable",
                          "nodeType": "YulIdentifier",
                          "src": "777:25:319"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "777:32:319"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "765:6:319"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "765:45:319"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "765:45:319"
                }
              ]
            },
            "name": "abi_encode_t_address_payable_to_t_address_payable",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "743:5:319",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "750:3:319",
                "type": ""
              }
            ],
            "src": "684:132:319"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "877:53:319",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "894:3:319"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "917:5:319"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "899:17:319"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "899:24:319"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "887:6:319"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "887:37:319"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "887:37:319"
                }
              ]
            },
            "name": "abi_encode_t_uint256_to_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "865:5:319",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "872:3:319",
                "type": ""
              }
            ],
            "src": "822:108:319"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "978:48:319",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "988:32:319",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "1013:5:319"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "1006:6:319"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1006:13:319"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "999:6:319"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "999:21:319"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "988:7:319"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_bool",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "960:5:319",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "970:7:319",
                "type": ""
              }
            ],
            "src": "936:90:319"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1081:50:319",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "1098:3:319"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "1118:5:319"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_bool",
                          "nodeType": "YulIdentifier",
                          "src": "1103:14:319"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1103:21:319"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1091:6:319"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1091:34:319"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1091:34:319"
                }
              ]
            },
            "name": "abi_encode_t_bool_to_t_bool",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1069:5:319",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "1076:3:319",
                "type": ""
              }
            ],
            "src": "1032:99:319"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1315:1735:319",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1325:28:319",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "1341:3:319"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1346:6:319",
                        "type": "",
                        "value": "0x0120"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1337:3:319"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1337:16:319"
                  },
                  "variables": [
                    {
                      "name": "tail",
                      "nodeType": "YulTypedName",
                      "src": "1329:4:319",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "1363:187:319",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1405:43:319",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "1435:5:319"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1442:4:319",
                                "type": "",
                                "value": "0x00"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1431:3:319"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1431:16:319"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "1425:5:319"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1425:23:319"
                      },
                      "variables": [
                        {
                          "name": "memberValue0",
                          "nodeType": "YulTypedName",
                          "src": "1409:12:319",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "memberValue0",
                            "nodeType": "YulIdentifier",
                            "src": "1511:12:319"
                          },
                          {
                            "arguments": [
                              {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "1529:3:319"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1534:4:319",
                                "type": "",
                                "value": "0x00"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1525:3:319"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1525:14:319"
                          }
                        ],
                        "functionName": {
                          "name": "abi_encode_t_address_payable_to_t_address_payable",
                          "nodeType": "YulIdentifier",
                          "src": "1461:49:319"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1461:79:319"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "1461:79:319"
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "1560:174:319",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1605:43:319",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "1635:5:319"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1642:4:319",
                                "type": "",
                                "value": "0x20"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1631:3:319"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1631:16:319"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "1625:5:319"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1625:23:319"
                      },
                      "variables": [
                        {
                          "name": "memberValue0",
                          "nodeType": "YulTypedName",
                          "src": "1609:12:319",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "memberValue0",
                            "nodeType": "YulIdentifier",
                            "src": "1695:12:319"
                          },
                          {
                            "arguments": [
                              {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "1713:3:319"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1718:4:319",
                                "type": "",
                                "value": "0x20"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1709:3:319"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1709:14:319"
                          }
                        ],
                        "functionName": {
                          "name": "abi_encode_t_uint256_to_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "1661:33:319"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1661:63:319"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "1661:63:319"
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "1744:173:319",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1788:43:319",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "1818:5:319"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1825:4:319",
                                "type": "",
                                "value": "0x40"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1814:3:319"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1814:16:319"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "1808:5:319"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1808:23:319"
                      },
                      "variables": [
                        {
                          "name": "memberValue0",
                          "nodeType": "YulTypedName",
                          "src": "1792:12:319",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "memberValue0",
                            "nodeType": "YulIdentifier",
                            "src": "1878:12:319"
                          },
                          {
                            "arguments": [
                              {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "1896:3:319"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1901:4:319",
                                "type": "",
                                "value": "0x40"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1892:3:319"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1892:14:319"
                          }
                        ],
                        "functionName": {
                          "name": "abi_encode_t_uint256_to_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "1844:33:319"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1844:63:319"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "1844:63:319"
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "1927:175:319",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1973:43:319",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "2003:5:319"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "2010:4:319",
                                "type": "",
                                "value": "0x60"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1999:3:319"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1999:16:319"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "1993:5:319"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1993:23:319"
                      },
                      "variables": [
                        {
                          "name": "memberValue0",
                          "nodeType": "YulTypedName",
                          "src": "1977:12:319",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "memberValue0",
                            "nodeType": "YulIdentifier",
                            "src": "2063:12:319"
                          },
                          {
                            "arguments": [
                              {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "2081:3:319"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "2086:4:319",
                                "type": "",
                                "value": "0x60"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2077:3:319"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2077:14:319"
                          }
                        ],
                        "functionName": {
                          "name": "abi_encode_t_uint256_to_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "2029:33:319"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2029:63:319"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "2029:63:319"
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "2112:176:319",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "2159:43:319",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "2189:5:319"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "2196:4:319",
                                "type": "",
                                "value": "0x80"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2185:3:319"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2185:16:319"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "2179:5:319"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2179:23:319"
                      },
                      "variables": [
                        {
                          "name": "memberValue0",
                          "nodeType": "YulTypedName",
                          "src": "2163:12:319",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "memberValue0",
                            "nodeType": "YulIdentifier",
                            "src": "2249:12:319"
                          },
                          {
                            "arguments": [
                              {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "2267:3:319"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "2272:4:319",
                                "type": "",
                                "value": "0x80"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2263:3:319"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2263:14:319"
                          }
                        ],
                        "functionName": {
                          "name": "abi_encode_t_uint256_to_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "2215:33:319"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2215:63:319"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "2215:63:319"
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "2298:178:319",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "2347:43:319",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "2377:5:319"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "2384:4:319",
                                "type": "",
                                "value": "0xa0"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2373:3:319"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2373:16:319"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "2367:5:319"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2367:23:319"
                      },
                      "variables": [
                        {
                          "name": "memberValue0",
                          "nodeType": "YulTypedName",
                          "src": "2351:12:319",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "memberValue0",
                            "nodeType": "YulIdentifier",
                            "src": "2437:12:319"
                          },
                          {
                            "arguments": [
                              {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "2455:3:319"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "2460:4:319",
                                "type": "",
                                "value": "0xa0"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2451:3:319"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2451:14:319"
                          }
                        ],
                        "functionName": {
                          "name": "abi_encode_t_uint256_to_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "2403:33:319"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2403:63:319"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "2403:63:319"
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "2486:183:319",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "2540:43:319",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "2570:5:319"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "2577:4:319",
                                "type": "",
                                "value": "0xc0"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2566:3:319"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2566:16:319"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "2560:5:319"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2560:23:319"
                      },
                      "variables": [
                        {
                          "name": "memberValue0",
                          "nodeType": "YulTypedName",
                          "src": "2544:12:319",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "memberValue0",
                            "nodeType": "YulIdentifier",
                            "src": "2630:12:319"
                          },
                          {
                            "arguments": [
                              {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "2648:3:319"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "2653:4:319",
                                "type": "",
                                "value": "0xc0"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2644:3:319"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2644:14:319"
                          }
                        ],
                        "functionName": {
                          "name": "abi_encode_t_uint256_to_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "2596:33:319"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2596:63:319"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "2596:63:319"
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "2679:181:319",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "2731:43:319",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "2761:5:319"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "2768:4:319",
                                "type": "",
                                "value": "0xe0"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2757:3:319"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2757:16:319"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "2751:5:319"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2751:23:319"
                      },
                      "variables": [
                        {
                          "name": "memberValue0",
                          "nodeType": "YulTypedName",
                          "src": "2735:12:319",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "memberValue0",
                            "nodeType": "YulIdentifier",
                            "src": "2821:12:319"
                          },
                          {
                            "arguments": [
                              {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "2839:3:319"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "2844:4:319",
                                "type": "",
                                "value": "0xe0"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2835:3:319"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2835:14:319"
                          }
                        ],
                        "functionName": {
                          "name": "abi_encode_t_uint256_to_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "2787:33:319"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2787:63:319"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "2787:63:319"
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "2870:173:319",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "2916:45:319",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "2946:5:319"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "2953:6:319",
                                "type": "",
                                "value": "0x0100"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2942:3:319"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2942:18:319"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "2936:5:319"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2936:25:319"
                      },
                      "variables": [
                        {
                          "name": "memberValue0",
                          "nodeType": "YulTypedName",
                          "src": "2920:12:319",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "memberValue0",
                            "nodeType": "YulIdentifier",
                            "src": "3002:12:319"
                          },
                          {
                            "arguments": [
                              {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "3020:3:319"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "3025:6:319",
                                "type": "",
                                "value": "0x0100"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "3016:3:319"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3016:16:319"
                          }
                        ],
                        "functionName": {
                          "name": "abi_encode_t_bool_to_t_bool",
                          "nodeType": "YulIdentifier",
                          "src": "2974:27:319"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2974:59:319"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "2974:59:319"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_struct$_UserData_$43_memory_ptr_to_t_struct$_UserData_$43_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1302:5:319",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "1309:3:319",
                "type": ""
              }
            ],
            "src": "1201:1849:319"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3202:173:319",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3212:27:319",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3224:9:319"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3235:3:319",
                        "type": "",
                        "value": "288"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3220:3:319"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3220:19:319"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3212:4:319"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "3341:6:319"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3354:9:319"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3365:1:319",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3350:3:319"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3350:17:319"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_struct$_UserData_$43_memory_ptr_to_t_struct$_UserData_$43_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "3249:91:319"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3249:119:319"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3249:119:319"
                }
              ]
            },
            "name": "abi_encode_tuple_t_struct$_UserData_$43_memory_ptr__to_t_struct$_UserData_$43_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3174:9:319",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3186:6:319",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3197:4:319",
                "type": ""
              }
            ],
            "src": "3056:319:319"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3426:51:319",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3436:35:319",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "3465:5:319"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "3447:17:319"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3447:24:319"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "3436:7:319"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "3408:5:319",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "3418:7:319",
                "type": ""
              }
            ],
            "src": "3381:96:319"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3548:53:319",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3565:3:319"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "3588:5:319"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "3570:17:319"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3570:24:319"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3558:6:319"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3558:37:319"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3558:37:319"
                }
              ]
            },
            "name": "abi_encode_t_address_to_t_address_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "3536:5:319",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "3543:3:319",
                "type": ""
              }
            ],
            "src": "3483:118:319"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3705:124:319",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3715:26:319",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3727:9:319"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3738:2:319",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3723:3:319"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3723:18:319"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3715:4:319"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "3795:6:319"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3808:9:319"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3819:1:319",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3804:3:319"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3804:17:319"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "3751:43:319"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3751:71:319"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3751:71:319"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3677:9:319",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3689:6:319",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3700:4:319",
                "type": ""
              }
            ],
            "src": "3607:222:319"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3916:61:319",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3933:3:319"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "3964:5:319"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_address_payable",
                          "nodeType": "YulIdentifier",
                          "src": "3938:25:319"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3938:32:319"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3926:6:319"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3926:45:319"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3926:45:319"
                }
              ]
            },
            "name": "abi_encode_t_address_payable_to_t_address_payable_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "3904:5:319",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "3911:3:319",
                "type": ""
              }
            ],
            "src": "3835:142:319"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4097:140:319",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4107:26:319",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4119:9:319"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4130:2:319",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4115:3:319"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4115:18:319"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4107:4:319"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "4203:6:319"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4216:9:319"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4227:1:319",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4212:3:319"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4212:17:319"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_payable_to_t_address_payable_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "4143:59:319"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4143:87:319"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4143:87:319"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_payable__to_t_address_payable__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4069:9:319",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "4081:6:319",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4092:4:319",
                "type": ""
              }
            ],
            "src": "3983:254:319"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4339:73:319",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "4356:3:319"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "4361:6:319"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4349:6:319"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4349:19:319"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4349:19:319"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4377:29:319",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "4396:3:319"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4401:4:319",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4392:3:319"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4392:14:319"
                  },
                  "variableNames": [
                    {
                      "name": "updated_pos",
                      "nodeType": "YulIdentifier",
                      "src": "4377:11:319"
                    }
                  ]
                }
              ]
            },
            "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "4311:3:319",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "4316:6:319",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "updated_pos",
                "nodeType": "YulTypedName",
                "src": "4327:11:319",
                "type": ""
              }
            ],
            "src": "4243:169:319"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4524:75:319",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "4546:6:319"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4554:1:319",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4542:3:319"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4542:14:319"
                      },
                      {
                        "hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "4558:33:319",
                        "type": "",
                        "value": "ReentrancyGuard: reentrant call"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4535:6:319"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4535:57:319"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4535:57:319"
                }
              ]
            },
            "name": "store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "4516:6:319",
                "type": ""
              }
            ],
            "src": "4418:181:319"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4751:220:319",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4761:74:319",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "4827:3:319"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4832:2:319",
                        "type": "",
                        "value": "31"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "4768:58:319"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4768:67:319"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "4761:3:319"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "4933:3:319"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
                      "nodeType": "YulIdentifier",
                      "src": "4844:88:319"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4844:93:319"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4844:93:319"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4946:19:319",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "4957:3:319"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4962:2:319",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4953:3:319"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4953:12:319"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "4946:3:319"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "4739:3:319",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "4747:3:319",
                "type": ""
              }
            ],
            "src": "4605:366:319"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5148:248:319",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5158:26:319",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5170:9:319"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5181:2:319",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5166:3:319"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5166:18:319"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5158:4:319"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5205:9:319"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5216:1:319",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5201:3:319"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5201:17:319"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "5224:4:319"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5230:9:319"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "5220:3:319"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5220:20:319"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5194:6:319"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5194:47:319"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5194:47:319"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5250:139:319",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "5384:4:319"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "5258:124:319"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5258:131:319"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5250:4:319"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5128:9:319",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5143:4:319",
                "type": ""
              }
            ],
            "src": "4977:419:319"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5508:121:319",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "5530:6:319"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5538:1:319",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5526:3:319"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5526:14:319"
                      },
                      {
                        "hexValue": "41747461636b2066726f6d20616e20756e6b6e6f776e2065787465726e616c20",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "5542:34:319",
                        "type": "",
                        "value": "Attack from an unknown external "
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5519:6:319"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5519:58:319"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5519:58:319"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "5598:6:319"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5606:2:319",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5594:3:319"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5594:15:319"
                      },
                      {
                        "hexValue": "636f6e7472616374",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "5611:10:319",
                        "type": "",
                        "value": "contract"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5587:6:319"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5587:35:319"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5587:35:319"
                }
              ]
            },
            "name": "store_literal_in_memory_d874c83e1f7022554f997860cd025b259d0aa10f56f1b971482ef750c11169b4",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "5500:6:319",
                "type": ""
              }
            ],
            "src": "5402:227:319"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5781:220:319",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5791:74:319",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "5857:3:319"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5862:2:319",
                        "type": "",
                        "value": "40"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "5798:58:319"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5798:67:319"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "5791:3:319"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "5963:3:319"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_d874c83e1f7022554f997860cd025b259d0aa10f56f1b971482ef750c11169b4",
                      "nodeType": "YulIdentifier",
                      "src": "5874:88:319"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5874:93:319"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5874:93:319"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5976:19:319",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "5987:3:319"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5992:2:319",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5983:3:319"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5983:12:319"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "5976:3:319"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_d874c83e1f7022554f997860cd025b259d0aa10f56f1b971482ef750c11169b4_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "5769:3:319",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "5777:3:319",
                "type": ""
              }
            ],
            "src": "5635:366:319"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6178:248:319",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6188:26:319",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6200:9:319"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6211:2:319",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6196:3:319"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6196:18:319"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6188:4:319"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6235:9:319"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6246:1:319",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6231:3:319"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6231:17:319"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "6254:4:319"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6260:9:319"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "6250:3:319"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6250:20:319"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6224:6:319"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6224:47:319"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6224:47:319"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6280:139:319",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "6414:4:319"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_d874c83e1f7022554f997860cd025b259d0aa10f56f1b971482ef750c11169b4_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "6288:124:319"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6288:131:319"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6280:4:319"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_d874c83e1f7022554f997860cd025b259d0aa10f56f1b971482ef750c11169b4__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6158:9:319",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "6173:4:319",
                "type": ""
              }
            ],
            "src": "6007:419:319"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6538:66:319",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "6560:6:319"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6568:1:319",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6556:3:319"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6556:14:319"
                      },
                      {
                        "hexValue": "416d6f756e74206d7573742062652061626f76652030",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "6572:24:319",
                        "type": "",
                        "value": "Amount must be above 0"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6549:6:319"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6549:48:319"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6549:48:319"
                }
              ]
            },
            "name": "store_literal_in_memory_0c0f4d1af98fc33c4205e021e0139d31ed4d95ab50bb31bd83d2cc54c100b343",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "6530:6:319",
                "type": ""
              }
            ],
            "src": "6432:172:319"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6756:220:319",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6766:74:319",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "6832:3:319"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6837:2:319",
                        "type": "",
                        "value": "22"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "6773:58:319"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6773:67:319"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "6766:3:319"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "6938:3:319"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_0c0f4d1af98fc33c4205e021e0139d31ed4d95ab50bb31bd83d2cc54c100b343",
                      "nodeType": "YulIdentifier",
                      "src": "6849:88:319"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6849:93:319"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6849:93:319"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6951:19:319",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "6962:3:319"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6967:2:319",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6958:3:319"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6958:12:319"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "6951:3:319"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_0c0f4d1af98fc33c4205e021e0139d31ed4d95ab50bb31bd83d2cc54c100b343_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "6744:3:319",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "6752:3:319",
                "type": ""
              }
            ],
            "src": "6610:366:319"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7153:248:319",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "7163:26:319",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7175:9:319"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7186:2:319",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7171:3:319"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7171:18:319"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "7163:4:319"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7210:9:319"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7221:1:319",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7206:3:319"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7206:17:319"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "7229:4:319"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7235:9:319"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "7225:3:319"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7225:20:319"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7199:6:319"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7199:47:319"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7199:47:319"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7255:139:319",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "7389:4:319"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_0c0f4d1af98fc33c4205e021e0139d31ed4d95ab50bb31bd83d2cc54c100b343_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "7263:124:319"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7263:131:319"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "7255:4:319"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_0c0f4d1af98fc33c4205e021e0139d31ed4d95ab50bb31bd83d2cc54c100b343__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "7133:9:319",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "7148:4:319",
                "type": ""
              }
            ],
            "src": "6982:419:319"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7513:252:319",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "7535:6:319"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7543:1:319",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7531:3:319"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7531:14:319"
                      },
                      {
                        "hexValue": "596f757220696e766573746d656e7420616d6f756e7420616e64207468652074",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "7547:34:319",
                        "type": "",
                        "value": "Your investment amount and the t"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7524:6:319"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7524:58:319"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7524:58:319"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "7603:6:319"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7611:2:319",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7599:3:319"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7599:15:319"
                      },
                      {
                        "hexValue": "6f6b656e7320617265207374696c6c206c6f636b656420696e2074686520636f",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "7616:34:319",
                        "type": "",
                        "value": "okens are still locked in the co"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7592:6:319"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7592:59:319"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7592:59:319"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "7672:6:319"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7680:2:319",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7668:3:319"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7668:15:319"
                      },
                      {
                        "hexValue": "6e74726163742e20506c656173652074727920616674657220736f6d6574696d",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "7685:34:319",
                        "type": "",
                        "value": "ntract. Please try after sometim"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7661:6:319"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7661:59:319"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7661:59:319"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "7741:6:319"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7749:2:319",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7737:3:319"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7737:15:319"
                      },
                      {
                        "hexValue": "65",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "7754:3:319",
                        "type": "",
                        "value": "e"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7730:6:319"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7730:28:319"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7730:28:319"
                }
              ]
            },
            "name": "store_literal_in_memory_aec42c1ce9dddda4486122c20f9aafe2878af3cd4001dcbfa06022838e326b85",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "7505:6:319",
                "type": ""
              }
            ],
            "src": "7407:358:319"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7917:221:319",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "7927:74:319",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "7993:3:319"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7998:2:319",
                        "type": "",
                        "value": "97"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "7934:58:319"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7934:67:319"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "7927:3:319"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "8099:3:319"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_aec42c1ce9dddda4486122c20f9aafe2878af3cd4001dcbfa06022838e326b85",
                      "nodeType": "YulIdentifier",
                      "src": "8010:88:319"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8010:93:319"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8010:93:319"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8112:20:319",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "8123:3:319"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8128:3:319",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "8119:3:319"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8119:13:319"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "8112:3:319"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_aec42c1ce9dddda4486122c20f9aafe2878af3cd4001dcbfa06022838e326b85_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "7905:3:319",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "7913:3:319",
                "type": ""
              }
            ],
            "src": "7771:367:319"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8315:248:319",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "8325:26:319",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8337:9:319"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8348:2:319",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "8333:3:319"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8333:18:319"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "8325:4:319"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8372:9:319"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8383:1:319",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8368:3:319"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8368:17:319"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "8391:4:319"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8397:9:319"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "8387:3:319"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8387:20:319"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8361:6:319"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8361:47:319"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8361:47:319"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8417:139:319",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "8551:4:319"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_aec42c1ce9dddda4486122c20f9aafe2878af3cd4001dcbfa06022838e326b85_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "8425:124:319"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8425:131:319"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "8417:4:319"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_aec42c1ce9dddda4486122c20f9aafe2878af3cd4001dcbfa06022838e326b85__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "8295:9:319",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "8310:4:319",
                "type": ""
              }
            ],
            "src": "8144:419:319"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8597:152:319",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8614:1:319",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8617:77:319",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8607:6:319"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8607:88:319"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8607:88:319"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8711:1:319",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8714:4:319",
                        "type": "",
                        "value": "0x11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8704:6:319"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8704:15:319"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8704:15:319"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8735:1:319",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8738:4:319",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "8728:6:319"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8728:15:319"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8728:15:319"
                }
              ]
            },
            "name": "panic_error_0x11",
            "nodeType": "YulFunctionDefinition",
            "src": "8569:180:319"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8799:261:319",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "8809:25:319",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "8832:1:319"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "8814:17:319"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8814:20:319"
                  },
                  "variableNames": [
                    {
                      "name": "x",
                      "nodeType": "YulIdentifier",
                      "src": "8809:1:319"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8843:25:319",
                  "value": {
                    "arguments": [
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "8866:1:319"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "8848:17:319"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8848:20:319"
                  },
                  "variableNames": [
                    {
                      "name": "y",
                      "nodeType": "YulIdentifier",
                      "src": "8843:1:319"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "9006:22:319",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "9008:16:319"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "9008:18:319"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "9008:18:319"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "8927:1:319"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8934:66:319",
                            "type": "",
                            "value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
                          },
                          {
                            "name": "y",
                            "nodeType": "YulIdentifier",
                            "src": "9002:1:319"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "8930:3:319"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8930:74:319"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "8924:2:319"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8924:81:319"
                  },
                  "nodeType": "YulIf",
                  "src": "8921:107:319"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "9038:16:319",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "9049:1:319"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "9052:1:319"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "9045:3:319"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9045:9:319"
                  },
                  "variableNames": [
                    {
                      "name": "sum",
                      "nodeType": "YulIdentifier",
                      "src": "9038:3:319"
                    }
                  ]
                }
              ]
            },
            "name": "checked_add_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "8786:1:319",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "8789:1:319",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "sum",
                "nodeType": "YulTypedName",
                "src": "8795:3:319",
                "type": ""
              }
            ],
            "src": "8755:305:319"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9192:206:319",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "9202:26:319",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "9214:9:319"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9225:2:319",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "9210:3:319"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9210:18:319"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "9202:4:319"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "9282:6:319"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9295:9:319"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9306:1:319",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9291:3:319"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9291:17:319"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "9238:43:319"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9238:71:319"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9238:71:319"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "9363:6:319"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9376:9:319"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9387:2:319",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9372:3:319"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9372:18:319"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "9319:43:319"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9319:72:319"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9319:72:319"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "9156:9:319",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "9168:6:319",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "9176:6:319",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "9187:4:319",
                "type": ""
              }
            ],
            "src": "9066:332:319"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9436:28:319",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "9446:12:319",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "9453:5:319"
                  },
                  "variableNames": [
                    {
                      "name": "ret",
                      "nodeType": "YulIdentifier",
                      "src": "9446:3:319"
                    }
                  ]
                }
              ]
            },
            "name": "identity",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "9422:5:319",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "ret",
                "nodeType": "YulTypedName",
                "src": "9432:3:319",
                "type": ""
              }
            ],
            "src": "9404:60:319"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9530:82:319",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "9540:66:319",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "9598:5:319"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_uint160",
                              "nodeType": "YulIdentifier",
                              "src": "9580:17:319"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "9580:24:319"
                          }
                        ],
                        "functionName": {
                          "name": "identity",
                          "nodeType": "YulIdentifier",
                          "src": "9571:8:319"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9571:34:319"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "9553:17:319"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9553:53:319"
                  },
                  "variableNames": [
                    {
                      "name": "converted",
                      "nodeType": "YulIdentifier",
                      "src": "9540:9:319"
                    }
                  ]
                }
              ]
            },
            "name": "convert_t_uint160_to_t_uint160",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "9510:5:319",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "converted",
                "nodeType": "YulTypedName",
                "src": "9520:9:319",
                "type": ""
              }
            ],
            "src": "9470:142:319"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9678:66:319",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "9688:50:319",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "9732:5:319"
                      }
                    ],
                    "functionName": {
                      "name": "convert_t_uint160_to_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "9701:30:319"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9701:37:319"
                  },
                  "variableNames": [
                    {
                      "name": "converted",
                      "nodeType": "YulIdentifier",
                      "src": "9688:9:319"
                    }
                  ]
                }
              ]
            },
            "name": "convert_t_uint160_to_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "9658:5:319",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "converted",
                "nodeType": "YulTypedName",
                "src": "9668:9:319",
                "type": ""
              }
            ],
            "src": "9618:126:319"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9818:66:319",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "9828:50:319",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "9872:5:319"
                      }
                    ],
                    "functionName": {
                      "name": "convert_t_uint160_to_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "9841:30:319"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9841:37:319"
                  },
                  "variableNames": [
                    {
                      "name": "converted",
                      "nodeType": "YulIdentifier",
                      "src": "9828:9:319"
                    }
                  ]
                }
              ]
            },
            "name": "convert_t_address_payable_to_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "9798:5:319",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "converted",
                "nodeType": "YulTypedName",
                "src": "9808:9:319",
                "type": ""
              }
            ],
            "src": "9750:134:319"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9963:74:319",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "9980:3:319"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "10024:5:319"
                          }
                        ],
                        "functionName": {
                          "name": "convert_t_address_payable_to_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "9985:38:319"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9985:45:319"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9973:6:319"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9973:58:319"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9973:58:319"
                }
              ]
            },
            "name": "abi_encode_t_address_payable_to_t_address_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "9951:5:319",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "9958:3:319",
                "type": ""
              }
            ],
            "src": "9890:147:319"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10205:296:319",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "10215:26:319",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "10227:9:319"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10238:2:319",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "10223:3:319"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10223:18:319"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "10215:4:319"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "10295:6:319"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10308:9:319"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10319:1:319",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10304:3:319"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10304:17:319"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "10251:43:319"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10251:71:319"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10251:71:319"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "10384:6:319"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10397:9:319"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10408:2:319",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10393:3:319"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10393:18:319"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_payable_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "10332:51:319"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10332:80:319"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10332:80:319"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "10466:6:319"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10479:9:319"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10490:2:319",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10475:3:319"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10475:18:319"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "10422:43:319"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10422:72:319"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10422:72:319"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_address_payable_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "10161:9:319",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "10173:6:319",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "10181:6:319",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "10189:6:319",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "10200:4:319",
                "type": ""
              }
            ],
            "src": "10043:458:319"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10547:35:319",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "10557:19:319",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10573:2:319",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "10567:5:319"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10567:9:319"
                  },
                  "variableNames": [
                    {
                      "name": "memPtr",
                      "nodeType": "YulIdentifier",
                      "src": "10557:6:319"
                    }
                  ]
                }
              ]
            },
            "name": "allocate_unbounded",
            "nodeType": "YulFunctionDefinition",
            "returnVariables": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "10540:6:319",
                "type": ""
              }
            ],
            "src": "10507:75:319"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10677:28:319",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10694:1:319",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10697:1:319",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "10687:6:319"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10687:12:319"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10687:12:319"
                }
              ]
            },
            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
            "nodeType": "YulFunctionDefinition",
            "src": "10588:117:319"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10800:28:319",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10817:1:319",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10820:1:319",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "10810:6:319"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10810:12:319"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10810:12:319"
                }
              ]
            },
            "name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
            "nodeType": "YulFunctionDefinition",
            "src": "10711:117:319"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10874:76:319",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "10928:16:319",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "10937:1:319",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "10940:1:319",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "10930:6:319"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "10930:12:319"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "10930:12:319"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "10897:5:319"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "10919:5:319"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_bool",
                              "nodeType": "YulIdentifier",
                              "src": "10904:14:319"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "10904:21:319"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "10894:2:319"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10894:32:319"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "10887:6:319"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10887:40:319"
                  },
                  "nodeType": "YulIf",
                  "src": "10884:60:319"
                }
              ]
            },
            "name": "validator_revert_t_bool",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "10867:5:319",
                "type": ""
              }
            ],
            "src": "10834:116:319"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11016:77:319",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "11026:22:319",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "11041:6:319"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "11035:5:319"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11035:13:319"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "11026:5:319"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "11081:5:319"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_bool",
                      "nodeType": "YulIdentifier",
                      "src": "11057:23:319"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11057:30:319"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11057:30:319"
                }
              ]
            },
            "name": "abi_decode_t_bool_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "10994:6:319",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "11002:3:319",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "11010:5:319",
                "type": ""
              }
            ],
            "src": "10956:137:319"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11173:271:319",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "11219:83:319",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "11221:77:319"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "11221:79:319"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "11221:79:319"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "11194:7:319"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11203:9:319"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "11190:3:319"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11190:23:319"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11215:2:319",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "11186:3:319"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11186:32:319"
                  },
                  "nodeType": "YulIf",
                  "src": "11183:119:319"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "11312:125:319",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "11327:15:319",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11341:1:319",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "11331:6:319",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "11356:71:319",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "11399:9:319"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "11410:6:319"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "11395:3:319"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "11395:22:319"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "11419:7:319"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_bool_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "11366:28:319"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11366:61:319"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "11356:6:319"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bool_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "11143:9:319",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "11154:7:319",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "11166:6:319",
                "type": ""
              }
            ],
            "src": "11099:345:319"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11556:71:319",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "11578:6:319"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11586:1:319",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11574:3:319"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11574:14:319"
                      },
                      {
                        "hexValue": "54686973207573657220686176656e277420696e7665737465642e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "11590:29:319",
                        "type": "",
                        "value": "This user haven't invested."
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11567:6:319"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11567:53:319"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11567:53:319"
                }
              ]
            },
            "name": "store_literal_in_memory_0c5c1e09cc10c1cfe803bee63ef8ca773d05af7b92cad77f46d245f61810f451",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "11548:6:319",
                "type": ""
              }
            ],
            "src": "11450:177:319"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11779:220:319",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "11789:74:319",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "11855:3:319"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11860:2:319",
                        "type": "",
                        "value": "27"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "11796:58:319"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11796:67:319"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "11789:3:319"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "11961:3:319"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_0c5c1e09cc10c1cfe803bee63ef8ca773d05af7b92cad77f46d245f61810f451",
                      "nodeType": "YulIdentifier",
                      "src": "11872:88:319"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11872:93:319"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11872:93:319"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "11974:19:319",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "11985:3:319"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11990:2:319",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "11981:3:319"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11981:12:319"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "11974:3:319"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_0c5c1e09cc10c1cfe803bee63ef8ca773d05af7b92cad77f46d245f61810f451_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "11767:3:319",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "11775:3:319",
                "type": ""
              }
            ],
            "src": "11633:366:319"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "12176:248:319",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "12186:26:319",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "12198:9:319"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12209:2:319",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "12194:3:319"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12194:18:319"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "12186:4:319"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12233:9:319"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12244:1:319",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12229:3:319"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12229:17:319"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "12252:4:319"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12258:9:319"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "12248:3:319"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12248:20:319"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12222:6:319"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12222:47:319"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12222:47:319"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "12278:139:319",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "12412:4:319"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_0c5c1e09cc10c1cfe803bee63ef8ca773d05af7b92cad77f46d245f61810f451_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "12286:124:319"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12286:131:319"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "12278:4:319"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_0c5c1e09cc10c1cfe803bee63ef8ca773d05af7b92cad77f46d245f61810f451__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "12156:9:319",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "12171:4:319",
                "type": ""
              }
            ],
            "src": "12005:419:319"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "12536:131:319",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "12558:6:319"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12566:1:319",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12554:3:319"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12554:14:319"
                      },
                      {
                        "hexValue": "54686973207573657220616c72656164792063616e63656c6c65642f7374616b",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "12570:34:319",
                        "type": "",
                        "value": "This user already cancelled/stak"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12547:6:319"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12547:58:319"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12547:58:319"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "12626:6:319"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12634:2:319",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12622:3:319"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12622:15:319"
                      },
                      {
                        "hexValue": "65642074686520696e766573746d656e742e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "12639:20:319",
                        "type": "",
                        "value": "ed the investment."
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12615:6:319"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12615:45:319"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12615:45:319"
                }
              ]
            },
            "name": "store_literal_in_memory_b73296ac4dcc1eeb2e3709cf83c39c8ff249a0111b1de95ed340534f05b4e17d",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "12528:6:319",
                "type": ""
              }
            ],
            "src": "12430:237:319"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "12819:220:319",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "12829:74:319",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "12895:3:319"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12900:2:319",
                        "type": "",
                        "value": "50"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "12836:58:319"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12836:67:319"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "12829:3:319"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "13001:3:319"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_b73296ac4dcc1eeb2e3709cf83c39c8ff249a0111b1de95ed340534f05b4e17d",
                      "nodeType": "YulIdentifier",
                      "src": "12912:88:319"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12912:93:319"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12912:93:319"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "13014:19:319",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "13025:3:319"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13030:2:319",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "13021:3:319"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13021:12:319"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "13014:3:319"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_b73296ac4dcc1eeb2e3709cf83c39c8ff249a0111b1de95ed340534f05b4e17d_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "12807:3:319",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "12815:3:319",
                "type": ""
              }
            ],
            "src": "12673:366:319"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "13216:248:319",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "13226:26:319",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "13238:9:319"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13249:2:319",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "13234:3:319"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13234:18:319"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "13226:4:319"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "13273:9:319"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "13284:1:319",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "13269:3:319"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13269:17:319"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "13292:4:319"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "13298:9:319"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "13288:3:319"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13288:20:319"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13262:6:319"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13262:47:319"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13262:47:319"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "13318:139:319",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "13452:4:319"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_b73296ac4dcc1eeb2e3709cf83c39c8ff249a0111b1de95ed340534f05b4e17d_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "13326:124:319"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13326:131:319"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "13318:4:319"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_b73296ac4dcc1eeb2e3709cf83c39c8ff249a0111b1de95ed340534f05b4e17d__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "13196:9:319",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "13211:4:319",
                "type": ""
              }
            ],
            "src": "13045:419:319"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "13576:256:319",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "13598:6:319"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "13606:1:319",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "13594:3:319"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13594:14:319"
                      },
                      {
                        "hexValue": "596f757220696e766573746d656e7420616d6f756e7420616e64207468652074",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "13610:34:319",
                        "type": "",
                        "value": "Your investment amount and the t"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13587:6:319"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13587:58:319"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13587:58:319"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "13666:6:319"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "13674:2:319",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "13662:3:319"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13662:15:319"
                      },
                      {
                        "hexValue": "6f6b656e73206172652063757272656e746c79206c6f636b656420696e207468",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "13679:34:319",
                        "type": "",
                        "value": "okens are currently locked in th"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13655:6:319"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13655:59:319"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13655:59:319"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "13735:6:319"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "13743:2:319",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "13731:3:319"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13731:15:319"
                      },
                      {
                        "hexValue": "6520636f6e74726163742e20506c656173652074727920616674657220736f6d",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "13748:34:319",
                        "type": "",
                        "value": "e contract. Please try after som"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13724:6:319"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13724:59:319"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13724:59:319"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "13804:6:319"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "13812:2:319",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "13800:3:319"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13800:15:319"
                      },
                      {
                        "hexValue": "6574696d65",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "13817:7:319",
                        "type": "",
                        "value": "etime"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13793:6:319"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13793:32:319"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13793:32:319"
                }
              ]
            },
            "name": "store_literal_in_memory_2ef9b708a2c2cd0ef9f899d250f7e371adeca2d47e811e7abdd480f46f4cfcb8",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "13568:6:319",
                "type": ""
              }
            ],
            "src": "13470:362:319"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "13984:222:319",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "13994:75:319",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "14060:3:319"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14065:3:319",
                        "type": "",
                        "value": "101"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "14001:58:319"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14001:68:319"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "13994:3:319"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "14167:3:319"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_2ef9b708a2c2cd0ef9f899d250f7e371adeca2d47e811e7abdd480f46f4cfcb8",
                      "nodeType": "YulIdentifier",
                      "src": "14078:88:319"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14078:93:319"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14078:93:319"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "14180:20:319",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "14191:3:319"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14196:3:319",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "14187:3:319"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14187:13:319"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "14180:3:319"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_2ef9b708a2c2cd0ef9f899d250f7e371adeca2d47e811e7abdd480f46f4cfcb8_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "13972:3:319",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "13980:3:319",
                "type": ""
              }
            ],
            "src": "13838:368:319"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "14383:248:319",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "14393:26:319",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "14405:9:319"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14416:2:319",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "14401:3:319"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14401:18:319"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "14393:4:319"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "14440:9:319"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "14451:1:319",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "14436:3:319"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14436:17:319"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "14459:4:319"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "14465:9:319"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "14455:3:319"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14455:20:319"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "14429:6:319"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14429:47:319"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14429:47:319"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "14485:139:319",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "14619:4:319"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_2ef9b708a2c2cd0ef9f899d250f7e371adeca2d47e811e7abdd480f46f4cfcb8_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "14493:124:319"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14493:131:319"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "14485:4:319"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_2ef9b708a2c2cd0ef9f899d250f7e371adeca2d47e811e7abdd480f46f4cfcb8__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "14363:9:319",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "14378:4:319",
                "type": ""
              }
            ],
            "src": "14212:419:319"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "14771:214:319",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "14781:26:319",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "14793:9:319"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14804:2:319",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "14789:3:319"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14789:18:319"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "14781:4:319"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "14869:6:319"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "14882:9:319"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "14893:1:319",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "14878:3:319"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14878:17:319"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_payable_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "14817:51:319"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14817:79:319"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14817:79:319"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "14950:6:319"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "14963:9:319"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "14974:2:319",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "14959:3:319"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14959:18:319"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "14906:43:319"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14906:72:319"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14906:72:319"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_payable_t_uint256__to_t_address_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "14735:9:319",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "14747:6:319",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "14755:6:319",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "14766:4:319",
                "type": ""
              }
            ],
            "src": "14637:348:319"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "15153:296:319",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "15163:26:319",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "15175:9:319"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "15186:2:319",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "15171:3:319"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15171:18:319"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "15163:4:319"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "15251:6:319"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "15264:9:319"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "15275:1:319",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "15260:3:319"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "15260:17:319"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_payable_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "15199:51:319"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15199:79:319"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "15199:79:319"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "15332:6:319"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "15345:9:319"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "15356:2:319",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "15341:3:319"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "15341:18:319"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "15288:43:319"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15288:72:319"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "15288:72:319"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "15414:6:319"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "15427:9:319"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "15438:2:319",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "15423:3:319"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "15423:18:319"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "15370:43:319"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15370:72:319"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "15370:72:319"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_payable_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "15109:9:319",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "15121:6:319",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "15129:6:319",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "15137:6:319",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "15148:4:319",
                "type": ""
              }
            ],
            "src": "14991:458:319"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "15561:70:319",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "15583:6:319"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "15591:1:319",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "15579:3:319"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "15579:14:319"
                      },
                      {
                        "hexValue": "55736572206461746120646f6573206e6f74206578697374732e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "15595:28:319",
                        "type": "",
                        "value": "User data does not exists."
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "15572:6:319"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15572:52:319"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "15572:52:319"
                }
              ]
            },
            "name": "store_literal_in_memory_3dc89d953ca4d9a94dd2421ecdaa12dc57f5664043730dcee788296245e6c0a2",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "15553:6:319",
                "type": ""
              }
            ],
            "src": "15455:176:319"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "15783:220:319",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "15793:74:319",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "15859:3:319"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "15864:2:319",
                        "type": "",
                        "value": "26"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "15800:58:319"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15800:67:319"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "15793:3:319"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "15965:3:319"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_3dc89d953ca4d9a94dd2421ecdaa12dc57f5664043730dcee788296245e6c0a2",
                      "nodeType": "YulIdentifier",
                      "src": "15876:88:319"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15876:93:319"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "15876:93:319"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "15978:19:319",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "15989:3:319"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "15994:2:319",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "15985:3:319"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15985:12:319"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "15978:3:319"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_3dc89d953ca4d9a94dd2421ecdaa12dc57f5664043730dcee788296245e6c0a2_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "15771:3:319",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "15779:3:319",
                "type": ""
              }
            ],
            "src": "15637:366:319"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "16180:248:319",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "16190:26:319",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "16202:9:319"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "16213:2:319",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "16198:3:319"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16198:18:319"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "16190:4:319"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "16237:9:319"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "16248:1:319",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "16233:3:319"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "16233:17:319"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "16256:4:319"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "16262:9:319"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "16252:3:319"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "16252:20:319"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "16226:6:319"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16226:47:319"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "16226:47:319"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "16282:139:319",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "16416:4:319"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_3dc89d953ca4d9a94dd2421ecdaa12dc57f5664043730dcee788296245e6c0a2_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "16290:124:319"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16290:131:319"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "16282:4:319"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_3dc89d953ca4d9a94dd2421ecdaa12dc57f5664043730dcee788296245e6c0a2__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "16160:9:319",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "16175:4:319",
                "type": ""
              }
            ],
            "src": "16009:419:319"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "16482:300:319",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "16492:25:319",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "16515:1:319"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "16497:17:319"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16497:20:319"
                  },
                  "variableNames": [
                    {
                      "name": "x",
                      "nodeType": "YulIdentifier",
                      "src": "16492:1:319"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "16526:25:319",
                  "value": {
                    "arguments": [
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "16549:1:319"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "16531:17:319"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16531:20:319"
                  },
                  "variableNames": [
                    {
                      "name": "y",
                      "nodeType": "YulIdentifier",
                      "src": "16526:1:319"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "16724:22:319",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "16726:16:319"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "16726:18:319"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "16726:18:319"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "x",
                                "nodeType": "YulIdentifier",
                                "src": "16636:1:319"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "16629:6:319"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "16629:9:319"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "16622:6:319"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "16622:17:319"
                      },
                      {
                        "arguments": [
                          {
                            "name": "y",
                            "nodeType": "YulIdentifier",
                            "src": "16644:1:319"
                          },
                          {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "16651:66:319",
                                "type": "",
                                "value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
                              },
                              {
                                "name": "x",
                                "nodeType": "YulIdentifier",
                                "src": "16719:1:319"
                              }
                            ],
                            "functionName": {
                              "name": "div",
                              "nodeType": "YulIdentifier",
                              "src": "16647:3:319"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "16647:74:319"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "16641:2:319"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "16641:81:319"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "16618:3:319"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16618:105:319"
                  },
                  "nodeType": "YulIf",
                  "src": "16615:131:319"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "16756:20:319",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "16771:1:319"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "16774:1:319"
                      }
                    ],
                    "functionName": {
                      "name": "mul",
                      "nodeType": "YulIdentifier",
                      "src": "16767:3:319"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16767:9:319"
                  },
                  "variableNames": [
                    {
                      "name": "product",
                      "nodeType": "YulIdentifier",
                      "src": "16756:7:319"
                    }
                  ]
                }
              ]
            },
            "name": "checked_mul_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "16465:1:319",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "16468:1:319",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "product",
                "nodeType": "YulTypedName",
                "src": "16474:7:319",
                "type": ""
              }
            ],
            "src": "16434:348:319"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "16816:152:319",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "16833:1:319",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "16836:77:319",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "16826:6:319"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16826:88:319"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "16826:88:319"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "16930:1:319",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "16933:4:319",
                        "type": "",
                        "value": "0x12"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "16923:6:319"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16923:15:319"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "16923:15:319"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "16954:1:319",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "16957:4:319",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "16947:6:319"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16947:15:319"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "16947:15:319"
                }
              ]
            },
            "name": "panic_error_0x12",
            "nodeType": "YulFunctionDefinition",
            "src": "16788:180:319"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "17016:143:319",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "17026:25:319",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "17049:1:319"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "17031:17:319"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17031:20:319"
                  },
                  "variableNames": [
                    {
                      "name": "x",
                      "nodeType": "YulIdentifier",
                      "src": "17026:1:319"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "17060:25:319",
                  "value": {
                    "arguments": [
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "17083:1:319"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "17065:17:319"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17065:20:319"
                  },
                  "variableNames": [
                    {
                      "name": "y",
                      "nodeType": "YulIdentifier",
                      "src": "17060:1:319"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "17107:22:319",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x12",
                            "nodeType": "YulIdentifier",
                            "src": "17109:16:319"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "17109:18:319"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "17109:18:319"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "17104:1:319"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "17097:6:319"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17097:9:319"
                  },
                  "nodeType": "YulIf",
                  "src": "17094:35:319"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "17139:14:319",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "17148:1:319"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "17151:1:319"
                      }
                    ],
                    "functionName": {
                      "name": "div",
                      "nodeType": "YulIdentifier",
                      "src": "17144:3:319"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17144:9:319"
                  },
                  "variableNames": [
                    {
                      "name": "r",
                      "nodeType": "YulIdentifier",
                      "src": "17139:1:319"
                    }
                  ]
                }
              ]
            },
            "name": "checked_div_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "17005:1:319",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "17008:1:319",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "r",
                "nodeType": "YulTypedName",
                "src": "17014:1:319",
                "type": ""
              }
            ],
            "src": "16974:185:319"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "17210:146:319",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "17220:25:319",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "17243:1:319"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "17225:17:319"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17225:20:319"
                  },
                  "variableNames": [
                    {
                      "name": "x",
                      "nodeType": "YulIdentifier",
                      "src": "17220:1:319"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "17254:25:319",
                  "value": {
                    "arguments": [
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "17277:1:319"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "17259:17:319"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17259:20:319"
                  },
                  "variableNames": [
                    {
                      "name": "y",
                      "nodeType": "YulIdentifier",
                      "src": "17254:1:319"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "17301:22:319",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "17303:16:319"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "17303:18:319"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "17303:18:319"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "17295:1:319"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "17298:1:319"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "17292:2:319"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17292:8:319"
                  },
                  "nodeType": "YulIf",
                  "src": "17289:34:319"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "17333:17:319",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "17345:1:319"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "17348:1:319"
                      }
                    ],
                    "functionName": {
                      "name": "sub",
                      "nodeType": "YulIdentifier",
                      "src": "17341:3:319"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17341:9:319"
                  },
                  "variableNames": [
                    {
                      "name": "diff",
                      "nodeType": "YulIdentifier",
                      "src": "17333:4:319"
                    }
                  ]
                }
              ]
            },
            "name": "checked_sub_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "17196:1:319",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "17199:1:319",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "diff",
                "nodeType": "YulTypedName",
                "src": "17205:4:319",
                "type": ""
              }
            ],
            "src": "17165:191:319"
          }
        ]
      },
      "contents": "{\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address_payable(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_payable_to_t_address_payable(value, pos) {\n        mstore(pos, cleanup_t_address_payable(value))\n    }\n\n    function abi_encode_t_uint256_to_t_uint256(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    // struct Investment.UserData -> struct Investment.UserData\n    function abi_encode_t_struct$_UserData_$43_memory_ptr_to_t_struct$_UserData_$43_memory_ptr_fromStack(value, pos)  {\n        let tail := add(pos, 0x0120)\n\n        {\n            // userAddress\n\n            let memberValue0 := mload(add(value, 0x00))\n            abi_encode_t_address_payable_to_t_address_payable(memberValue0, add(pos, 0x00))\n        }\n\n        {\n            // investedAmount\n\n            let memberValue0 := mload(add(value, 0x20))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x20))\n        }\n\n        {\n            // reserveAmount\n\n            let memberValue0 := mload(add(value, 0x40))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x40))\n        }\n\n        {\n            // liquidityAmount\n\n            let memberValue0 := mload(add(value, 0x60))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x60))\n        }\n\n        {\n            // totalTokenAmount\n\n            let memberValue0 := mload(add(value, 0x80))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x80))\n        }\n\n        {\n            // currentTokenAmount\n\n            let memberValue0 := mload(add(value, 0xa0))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0xa0))\n        }\n\n        {\n            // investmenstStartingTime\n\n            let memberValue0 := mload(add(value, 0xc0))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0xc0))\n        }\n\n        {\n            // investmenstEndingTime\n\n            let memberValue0 := mload(add(value, 0xe0))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0xe0))\n        }\n\n        {\n            // usersDataExists\n\n            let memberValue0 := mload(add(value, 0x0100))\n            abi_encode_t_bool_to_t_bool(memberValue0, add(pos, 0x0100))\n        }\n\n    }\n\n    function abi_encode_tuple_t_struct$_UserData_$43_memory_ptr__to_t_struct$_UserData_$43_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 288)\n\n        abi_encode_t_struct$_UserData_$43_memory_ptr_to_t_struct$_UserData_$43_memory_ptr_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_address_payable_to_t_address_payable_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address_payable(value))\n    }\n\n    function abi_encode_tuple_t_address_payable__to_t_address_payable__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_payable_to_t_address_payable_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619(memPtr) {\n\n        mstore(add(memPtr, 0), \"ReentrancyGuard: reentrant call\")\n\n    }\n\n    function abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 31)\n        store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_d874c83e1f7022554f997860cd025b259d0aa10f56f1b971482ef750c11169b4(memPtr) {\n\n        mstore(add(memPtr, 0), \"Attack from an unknown external \")\n\n        mstore(add(memPtr, 32), \"contract\")\n\n    }\n\n    function abi_encode_t_stringliteral_d874c83e1f7022554f997860cd025b259d0aa10f56f1b971482ef750c11169b4_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 40)\n        store_literal_in_memory_d874c83e1f7022554f997860cd025b259d0aa10f56f1b971482ef750c11169b4(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_d874c83e1f7022554f997860cd025b259d0aa10f56f1b971482ef750c11169b4__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_d874c83e1f7022554f997860cd025b259d0aa10f56f1b971482ef750c11169b4_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_0c0f4d1af98fc33c4205e021e0139d31ed4d95ab50bb31bd83d2cc54c100b343(memPtr) {\n\n        mstore(add(memPtr, 0), \"Amount must be above 0\")\n\n    }\n\n    function abi_encode_t_stringliteral_0c0f4d1af98fc33c4205e021e0139d31ed4d95ab50bb31bd83d2cc54c100b343_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 22)\n        store_literal_in_memory_0c0f4d1af98fc33c4205e021e0139d31ed4d95ab50bb31bd83d2cc54c100b343(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_0c0f4d1af98fc33c4205e021e0139d31ed4d95ab50bb31bd83d2cc54c100b343__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_0c0f4d1af98fc33c4205e021e0139d31ed4d95ab50bb31bd83d2cc54c100b343_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_aec42c1ce9dddda4486122c20f9aafe2878af3cd4001dcbfa06022838e326b85(memPtr) {\n\n        mstore(add(memPtr, 0), \"Your investment amount and the t\")\n\n        mstore(add(memPtr, 32), \"okens are still locked in the co\")\n\n        mstore(add(memPtr, 64), \"ntract. Please try after sometim\")\n\n        mstore(add(memPtr, 96), \"e\")\n\n    }\n\n    function abi_encode_t_stringliteral_aec42c1ce9dddda4486122c20f9aafe2878af3cd4001dcbfa06022838e326b85_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 97)\n        store_literal_in_memory_aec42c1ce9dddda4486122c20f9aafe2878af3cd4001dcbfa06022838e326b85(pos)\n        end := add(pos, 128)\n    }\n\n    function abi_encode_tuple_t_stringliteral_aec42c1ce9dddda4486122c20f9aafe2878af3cd4001dcbfa06022838e326b85__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_aec42c1ce9dddda4486122c20f9aafe2878af3cd4001dcbfa06022838e326b85_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x > (maxValue - y)\n        if gt(x, sub(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, y)) { panic_error_0x11() }\n\n        sum := add(x, y)\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(identity(cleanup_t_uint160(value)))\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_address_payable_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_address_payable_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_address_payable_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address_t_address_payable_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_payable_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function store_literal_in_memory_0c5c1e09cc10c1cfe803bee63ef8ca773d05af7b92cad77f46d245f61810f451(memPtr) {\n\n        mstore(add(memPtr, 0), \"This user haven't invested.\")\n\n    }\n\n    function abi_encode_t_stringliteral_0c5c1e09cc10c1cfe803bee63ef8ca773d05af7b92cad77f46d245f61810f451_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 27)\n        store_literal_in_memory_0c5c1e09cc10c1cfe803bee63ef8ca773d05af7b92cad77f46d245f61810f451(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_0c5c1e09cc10c1cfe803bee63ef8ca773d05af7b92cad77f46d245f61810f451__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_0c5c1e09cc10c1cfe803bee63ef8ca773d05af7b92cad77f46d245f61810f451_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_b73296ac4dcc1eeb2e3709cf83c39c8ff249a0111b1de95ed340534f05b4e17d(memPtr) {\n\n        mstore(add(memPtr, 0), \"This user already cancelled/stak\")\n\n        mstore(add(memPtr, 32), \"ed the investment.\")\n\n    }\n\n    function abi_encode_t_stringliteral_b73296ac4dcc1eeb2e3709cf83c39c8ff249a0111b1de95ed340534f05b4e17d_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 50)\n        store_literal_in_memory_b73296ac4dcc1eeb2e3709cf83c39c8ff249a0111b1de95ed340534f05b4e17d(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_b73296ac4dcc1eeb2e3709cf83c39c8ff249a0111b1de95ed340534f05b4e17d__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_b73296ac4dcc1eeb2e3709cf83c39c8ff249a0111b1de95ed340534f05b4e17d_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_2ef9b708a2c2cd0ef9f899d250f7e371adeca2d47e811e7abdd480f46f4cfcb8(memPtr) {\n\n        mstore(add(memPtr, 0), \"Your investment amount and the t\")\n\n        mstore(add(memPtr, 32), \"okens are currently locked in th\")\n\n        mstore(add(memPtr, 64), \"e contract. Please try after som\")\n\n        mstore(add(memPtr, 96), \"etime\")\n\n    }\n\n    function abi_encode_t_stringliteral_2ef9b708a2c2cd0ef9f899d250f7e371adeca2d47e811e7abdd480f46f4cfcb8_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 101)\n        store_literal_in_memory_2ef9b708a2c2cd0ef9f899d250f7e371adeca2d47e811e7abdd480f46f4cfcb8(pos)\n        end := add(pos, 128)\n    }\n\n    function abi_encode_tuple_t_stringliteral_2ef9b708a2c2cd0ef9f899d250f7e371adeca2d47e811e7abdd480f46f4cfcb8__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_2ef9b708a2c2cd0ef9f899d250f7e371adeca2d47e811e7abdd480f46f4cfcb8_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_payable_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_payable_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_address_payable_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_payable_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function store_literal_in_memory_3dc89d953ca4d9a94dd2421ecdaa12dc57f5664043730dcee788296245e6c0a2(memPtr) {\n\n        mstore(add(memPtr, 0), \"User data does not exists.\")\n\n    }\n\n    function abi_encode_t_stringliteral_3dc89d953ca4d9a94dd2421ecdaa12dc57f5664043730dcee788296245e6c0a2_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 26)\n        store_literal_in_memory_3dc89d953ca4d9a94dd2421ecdaa12dc57f5664043730dcee788296245e6c0a2(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_3dc89d953ca4d9a94dd2421ecdaa12dc57f5664043730dcee788296245e6c0a2__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_3dc89d953ca4d9a94dd2421ecdaa12dc57f5664043730dcee788296245e6c0a2_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x != 0 and y > (maxValue / x)\n        if and(iszero(iszero(x)), gt(y, div(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, x))) { panic_error_0x11() }\n\n        product := mul(x, y)\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        if lt(x, y) { panic_error_0x11() }\n\n        diff := sub(x, y)\n    }\n\n}\n",
      "id": 319,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "451:9820:0:-:0;;;1396:514;;;;;;;;;;1701:1:312;1806:7;:22;;;;1420:23:0;1446:13;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;1420:39;;1502:15;1469:22;;:49;;;;;;;;;;;;;;;;;;1529:27;1559:15;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;1529:45;;1619:17;1584:24;;:53;;;;;;;;;;;;;;;;;;1648:23;1674:13;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;1648:39;;1738:15;1697:22;;:58;;;;;;;;;;;;;;;;;;1766:23;1792:13;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;1766:39;;1848:15;1815:22;;:49;;;;;;;;;;;;;;;;;;1902:1;1875:24;:28;;;;1410:500;;;;451:9820;;;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;",
  "deployedSourceMap": "451:9820:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;709:36;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1916:3879;;;:::i;:::-;;7422:1709;;;;;;;;;;;;;:::i;:::-;;9405:233;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;10178:91;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;665:37;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;9644:203;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;526:37;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;9137:126;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5801:1615;;;;;;;;;;;;;:::i;:::-;;10060:112;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;614:45;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;569:39;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;9269:130;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;9853:201;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;709:36;;;;:::o;1916:3879::-;1744:1:312;2325:7;;:19;2317:63;;;;;;;;;;;;:::i;:::-;;;;;;;;;1744:1;2455:7;:18;;;;1203:30:0::1;1222:10;1203:18;:30::i;:::-;1202:31;1184:122;;;;;1282:10;1269:23;;:9;:23;;;1184:122;1163:209;;;;;;;;;;;;:::i;:::-;;;;;;;;;2014:1:::2;2002:9;:13;1994:48;;;;;;;;;;;;:::i;:::-;;;;;;;;;2053:19;2075:9;2053:31;;2094:16;2113:24;2132:4;2113:14;:18;;:24;;;;:::i;:::-;2094:43;;2147:21;2204:7;2187:14;:24;:52;;;;;2232:7;2215:14;:24;2187:52;2183:282;;;2274:50;2295:28;2319:3;2295:19;2311:2;2295:11;:15;;:19;;;;:::i;:::-;:23;;:28;;;;:::i;:::-;2274:16;:20;;:50;;;;:::i;:::-;2255:69;;2183:282;;;2362:7;2345:14;:24;2341:124;;;2404:50;2425:28;2449:3;2425:19;2441:2;2425:11;:15;;:19;;;;:::i;:::-;:23;;:28;;;;:::i;:::-;2404:16;:20;;:50;;;;:::i;:::-;2385:69;;2341:124;2183:282;2475:21;2499:33;2515:16;2499:11;:15;;:33;;;;:::i;:::-;2475:57;;2542:26;2571:31;2598:3;2571:22;2590:2;2571:14;:18;;:22;;;;:::i;:::-;:26;;:31;;;;:::i;:::-;2542:60;;2612:28;2643:31;2670:3;2643:22;2662:2;2643:14;:18;;:22;;;;:::i;:::-;:26;;:31;;;;:::i;:::-;2612:62;;2689:9;:21;2699:10;2689:21;;;;;;;;;;;;;;;:37;;;;;;;;;;;;2685:2479;;;2864:1;2815:9;:21;2825:10;2815:21;;;;;;;;;;;;;;;:45;;;:50;2789:198;;;;;2964:1;2917:9;:21;2927:10;2917:21;;;;;;;;;;;;;;;:43;;;:48;2789:198;2767:506;;;;3105:15;3057:9;:21;3067:10;3057:21;;;;;;;;;;;;;;;:45;;;:63;3031:224;;;;;3218:15;3172:9;:21;3182:10;3172:21;;;;;;;;;;;;;;;:43;;;:61;3031:224;2767:506;2742:662;;;;;;;;;;;;:::i;:::-;;;;;;;;;3419:23;3445:9;:21;3455:10;3445:21;;;;;;;;;;;;;;;:36;;;3419:62;;3495:23;3521:9;:21;3531:10;3521:21;;;;;;;;;;;;;;;:35;;;3495:61;;3570:24;3597:9;:21;3607:10;3597:21;;;;;;;;;;;;;;;:37;;;3570:64;;3648:20;3671:9;:21;3681:10;3671:21;;;;;;;;;;;;;;;:38;;;3648:61;;3723:27;3753:9;:21;3763:10;3753:21;;;;;;;;;;;;;;;:40;;;3723:70;;3847:68;3887:14;3847:18;:22;;:68;;;;:::i;:::-;3808:9;:21;3818:10;3808:21;;;;;;;;;;;;;;;:36;;:107;;;;3967:75;4007:21;3967:18;:22;;:75;;;;:::i;:::-;3929:9;:21;3939:10;3929:21;;;;;;;;;;;;;;;:35;;:113;;;;4096:78;4137:23;4096:19;:23;;:78;;;;:::i;:::-;4056:9;:21;4066:10;4056:21;;;;;;;;;;;;;;;:37;;:118;;;;4229:67;4266:16;4229:15;:19;;:67;;;;:::i;:::-;4188:9;:21;4198:10;4188:21;;;;;;;;;;;;;;;:38;;:108;;;;4353:74;4397:16;4353:22;:26;;:74;;;;:::i;:::-;4310:9;:21;4320:10;4310:21;;;;;;;;;;;;;;;:40;;:117;;;;4489:15;4441:9;:21;4451:10;4441:21;;;;;;;;;;;;;;;:45;;:63;;;;4582:10;4564:15;:28;;;;:::i;:::-;4518:9;:21;4528:10;4518:21;;;;;;;;;;;;;;;:43;;:74;;;;2728:1875;;;;;2685:2479;;;4647:506;;;;;;;;4695:10;4647:506;;;;;;4740:14;4647:506;;;;4787:21;4647:506;;;;4843:23;4647:506;;;;4902:16;4647:506;;;;4956:16;4647:506;;;;5015:15;4647:506;;;;5089:10;5071:15;:28;;;;:::i;:::-;4647:506;;;;5134:4;4647:506;;;;::::0;4623:9:::2;:21;4633:10;4623:21;;;;;;;;;;;;;;;:530;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2685:2479;5201:46;5230:16;5201:24;;:28;;:46;;;;:::i;:::-;5174:24;:73;;;;5266:22;;;;;;;;;;;5258:40;;:63;5299:21;5258:63;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;5340:24;;;;;;;;;;;5332:42;;:67;5375:23;5332:67;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;5418:22;;;;;;;;;;;5410:41;;;5465:10;5489:16;5410:105;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;::::0;::::2;;;;;;;;;5534:22;;;;;;;;;;;5526:44;;;5584:10;5608:16;5526:108;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;::::0;::::2;;;;;;;;;5652:22;;;;;;;;;;;5645:43;;;5702:10;5726:22;;;;;;;;;;;5762:16;5645:143;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1984:3811;;;;;;1701:1:312::0;2628:7;:22;;;;1916:3879:0:o;7422:1709::-;1744:1:312;2325:7;;:19;2317:63;;;;;;;;;;;;:::i;:::-;;;;;;;;;1744:1;2455:7;:18;;;;1203:30:0::1;1222:10;1203:18;:30::i;:::-;1202:31;1184:122;;;;;1282:10;1269:23;;:9;:23;;;1184:122;1163:209;;;;;;;;;;;;:::i;:::-;;;;;;;;;7557:4:::2;7516:45;;:9;:21;7526:10;7516:21;;;;;;;;;;;;;;;:37;;;;;;;;;;;;:45;;;7495:119;;;;;;;;;;;;:::i;:::-;;;;;;;;;7685:1;7646:9;:21;7656:10;7646:21;;;;;;;;;;;;;;;:36;;;:40;7625:137;;;;;;;;;;;;:::i;:::-;;;;;;;;;7861:1;7812:9;:21;7822:10;7812:21;;;;;;;;;;;;;;;:45;;;:50;;7794:166;;;;;7945:1;7898:9;:21;7908:10;7898:21;;;;;;;;;;;;;;;:43;;;:48;;7794:166;7773:314;;;;;;;;;;;;:::i;:::-;;;;;;;;;8106:18;8127:9;:21;8137:10;8127:21;;;;;;;;;;;;;;;:35;;;8106:56;;8172:20;8195:9;:21;8205:10;8195:21;;;;;;;;;;;;;;;:37;;;8172:60;;8242:23;8268:9;:21;8278:10;8268:21;;;;;;;;;;;;;;;:40;;;8242:66;;8358:1;8319:9;:21;8329:10;8319:21;;;;;;;;;;;;;;;:36;;:40;;;;8407:1;8369:9;:21;8379:10;8369:21;;;;;;;;;;;;;;;:35;;:39;;;;8458:34;8478:13;8458:15;:19;;:34;;;;:::i;:::-;8418:9;:21;8428:10;8418:21;;;;;;;;;;;;;;;:37;;:74;;;;8545:1;8502:9;:21;8512:10;8502:21;;;;;;;;;;;;;;;:40;;:44;;;;8604:1;8556:9;:21;8566:10;8556:21;;;;;;;;;;;;;;;:45;;:49;;;;8661:1;8615:9;:21;8625:10;8615:21;;;;;;;;;;;;;;;:43;;:47;;;;8681:22;;;;;;;;;;;8673:51;;;8738:24;;;;;;;;;;;8776:13;8673:126;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;::::0;::::2;;;;;;;;;8818:22;;;;;;;;;;;8810:54;;;8878:22;;;;;;;;;;;8914:18;8810:132;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;::::0;::::2;;;;;;;;;8961:22;;;;;;;;;;;8953:57;;;9024:22;;;;;;;;;;;9060;;;;;;;;;;;9096:18;8953:171;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;::::0;::::2;;;;;;;;;7485:1646;;;1701:1:312::0;2628:7;:22;;;;7422:1709:0:o;9405:233::-;9448:15;;:::i;:::-;9537:4;9496:45;;:9;:21;9506:10;9496:21;;;;;;;;;;;;;;;:37;;;;;;;;;;;;:45;;;9475:118;;;;;;;;;;;;:::i;:::-;;;;;;;;;9610:9;:21;9620:10;9610:21;;;;;;;;;;;;;;;9603:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9405:233;:::o;10178:91::-;10224:4;10247:15;10240:22;;10178:91;:::o;665:37::-;;;;;;;;;;;;;:::o;9644:203::-;9699:4;9763;9722:45;;:9;:21;9732:10;9722:21;;;;;;;;;;;;;;;:37;;;;;;;;;;;;:45;;;:118;;9839:1;9722:118;;;9782:9;:21;9792:10;9782:21;;;;;;;;;;;;;;;:43;;;9722:118;9715:125;;9644:203;:::o;526:37::-;;;;;;;;;;;;;:::o;9137:126::-;9194:4;9225:22;;;;;;;;;;;9217:39;;;9210:46;;9137:126;:::o;5801:1615::-;1744:1:312;2325:7;;:19;2317:63;;;;;;;;;;;;:::i;:::-;;;;;;;;;1744:1;2455:7;:18;;;;1203:30:0::1;1222:10;1203:18;:30::i;:::-;1202:31;1184:122;;;;;1282:10;1269:23;;:9;:23;;;1184:122;1163:209;;;;;;;;;;;;:::i;:::-;;;;;;;;;5937:4:::2;5896:45;;:9;:21;5906:10;5896:21;;;;;;;;;;;;;;;:37;;;;;;;;;;;;:45;;;5875:119;;;;;;;;;;;;:::i;:::-;;;;;;;;;6065:1;6026:9;:21;6036:10;6026:21;;;;;;;;;;;;;;;:36;;;:40;6005:137;;;;;;;;;;;;:::i;:::-;;;;;;;;;6241:1;6192:9;:21;6202:10;6192:21;;;;;;;;;;;;;;;:45;;;:50;;6174:166;;;;;6325:1;6278:9;:21;6288:10;6278:21;;;;;;;;;;;;;;;:43;;;:48;;6174:166;6153:314;;;;;;;;;;;;:::i;:::-;;;;;;;;;6486:18;6507:9;:21;6517:10;6507:21;;;;;;;;;;;;;;;:35;;;6486:56;;6552:21;6576:9;:21;6586:10;6576:21;;;;;;;;;;;;;;;:38;;;6552:62;;6624:23;6650:9;:21;6660:10;6650:21;;;;;;;;;;;;;;;:40;;;6624:66;;6740:1;6701:9;:21;6711:10;6701:21;;;;;;;;;;;;;;;:36;;:40;;;;6789:1;6751:9;:21;6761:10;6751:21;;;;;;;;;;;;;;;:35;;:39;;;;6841:62;6875:18;6841:16;:20;;:62;;;;:::i;:::-;6800:9;:21;6810:10;6800:21;;;;;;;;;;;;;;;:38;;:103;;;;6956:1;6913:9;:21;6923:10;6913:21;;;;;;;;;;;;;;;:40;;:44;;;;7015:1;6967:9;:21;6977:10;6967:21;;;;;;;;;;;;;;;:45;;:49;;;;7072:1;7026:9;:21;7036:10;7026:21;;;;;;;;;;;;;;;:43;;:47;;;;7111:48;7140:18;7111:24;;:28;;:48;;;;:::i;:::-;7084:24;:75;;;;7178:22;;;;;;;;;;;7170:48;;;7232:10;7256:13;7170:109;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;::::0;::::2;;;;;;;;;7298:22;;;;;;;;;;;7290:41;;;7345:22;;;;;;;;;;;7381:18;7290:119;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;::::0;::::2;;;;;;;;;5865:1551;;;1701:1:312::0;2628:7;:22;;;;5801:1615:0:o;10060:112::-;10118:4;10141:24;;10134:31;;10060:112;:::o;614:45::-;;;;;;;;;;;;;:::o;569:39::-;;;;;;;;;;;;;:::o;9269:130::-;9328:4;9359:24;;;;;;;;;;;9351:41;;;9344:48;;9269:130;:::o;9853:201::-;9911:4;9975;9934:45;;:9;:21;9944:10;9934:21;;;;;;;;;;;;;;;:37;;;;;;;;;;;;:45;;;:113;;10046:1;9934:113;;;9994:9;:21;10004:10;9994:21;;;;;;;;;;;;;;;:38;;;9934:113;9927:120;;9853:201;:::o;1175:320:316:-;1235:4;1487:1;1465:7;:19;;;:23;1458:30;;1175:320;;;:::o;3465:96:318:-;3523:7;3553:1;3549;:5;;;;:::i;:::-;3542:12;;3465:96;;;;:::o;3850:::-;3908:7;3938:1;3934;:5;;;;:::i;:::-;3927:12;;3850:96;;;;:::o;2755:::-;2813:7;2843:1;2839;:5;;;;:::i;:::-;2832:12;;2755:96;;;;:::o;3122:::-;3180:7;3210:1;3206;:5;;;;:::i;:::-;3199:12;;3122:96;;;;:::o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;7:77:319:-;44:7;73:5;62:16;;7:77;;;:::o;90:118::-;177:24;195:5;177:24;:::i;:::-;172:3;165:37;90:118;;:::o;214:222::-;307:4;345:2;334:9;330:18;322:26;;358:71;426:1;415:9;411:17;402:6;358:71;:::i;:::-;214:222;;;;:::o;442:126::-;479:7;519:42;512:5;508:54;497:65;;442:126;;;:::o;574:104::-;619:7;648:24;666:5;648:24;:::i;:::-;637:35;;574:104;;;:::o;684:132::-;777:32;803:5;777:32;:::i;:::-;772:3;765:45;684:132;;:::o;822:108::-;899:24;917:5;899:24;:::i;:::-;894:3;887:37;822:108;;:::o;936:90::-;970:7;1013:5;1006:13;999:21;988:32;;936:90;;;:::o;1032:99::-;1103:21;1118:5;1103:21;:::i;:::-;1098:3;1091:34;1032:99;;:::o;1201:1849::-;1346:6;1341:3;1337:16;1442:4;1435:5;1431:16;1425:23;1461:79;1534:4;1529:3;1525:14;1511:12;1461:79;:::i;:::-;1363:187;1642:4;1635:5;1631:16;1625:23;1661:63;1718:4;1713:3;1709:14;1695:12;1661:63;:::i;:::-;1560:174;1825:4;1818:5;1814:16;1808:23;1844:63;1901:4;1896:3;1892:14;1878:12;1844:63;:::i;:::-;1744:173;2010:4;2003:5;1999:16;1993:23;2029:63;2086:4;2081:3;2077:14;2063:12;2029:63;:::i;:::-;1927:175;2196:4;2189:5;2185:16;2179:23;2215:63;2272:4;2267:3;2263:14;2249:12;2215:63;:::i;:::-;2112:176;2384:4;2377:5;2373:16;2367:23;2403:63;2460:4;2455:3;2451:14;2437:12;2403:63;:::i;:::-;2298:178;2577:4;2570:5;2566:16;2560:23;2596:63;2653:4;2648:3;2644:14;2630:12;2596:63;:::i;:::-;2486:183;2768:4;2761:5;2757:16;2751:23;2787:63;2844:4;2839:3;2835:14;2821:12;2787:63;:::i;:::-;2679:181;2953:6;2946:5;2942:18;2936:25;2974:59;3025:6;3020:3;3016:16;3002:12;2974:59;:::i;:::-;2870:173;1315:1735;1201:1849;;:::o;3056:319::-;3197:4;3235:3;3224:9;3220:19;3212:27;;3249:119;3365:1;3354:9;3350:17;3341:6;3249:119;:::i;:::-;3056:319;;;;:::o;3381:96::-;3418:7;3447:24;3465:5;3447:24;:::i;:::-;3436:35;;3381:96;;;:::o;3483:118::-;3570:24;3588:5;3570:24;:::i;:::-;3565:3;3558:37;3483:118;;:::o;3607:222::-;3700:4;3738:2;3727:9;3723:18;3715:26;;3751:71;3819:1;3808:9;3804:17;3795:6;3751:71;:::i;:::-;3607:222;;;;:::o;3835:142::-;3938:32;3964:5;3938:32;:::i;:::-;3933:3;3926:45;3835:142;;:::o;3983:254::-;4092:4;4130:2;4119:9;4115:18;4107:26;;4143:87;4227:1;4216:9;4212:17;4203:6;4143:87;:::i;:::-;3983:254;;;;:::o;4243:169::-;4327:11;4361:6;4356:3;4349:19;4401:4;4396:3;4392:14;4377:29;;4243:169;;;;:::o;4418:181::-;4558:33;4554:1;4546:6;4542:14;4535:57;4418:181;:::o;4605:366::-;4747:3;4768:67;4832:2;4827:3;4768:67;:::i;:::-;4761:74;;4844:93;4933:3;4844:93;:::i;:::-;4962:2;4957:3;4953:12;4946:19;;4605:366;;;:::o;4977:419::-;5143:4;5181:2;5170:9;5166:18;5158:26;;5230:9;5224:4;5220:20;5216:1;5205:9;5201:17;5194:47;5258:131;5384:4;5258:131;:::i;:::-;5250:139;;4977:419;;;:::o;5402:227::-;5542:34;5538:1;5530:6;5526:14;5519:58;5611:10;5606:2;5598:6;5594:15;5587:35;5402:227;:::o;5635:366::-;5777:3;5798:67;5862:2;5857:3;5798:67;:::i;:::-;5791:74;;5874:93;5963:3;5874:93;:::i;:::-;5992:2;5987:3;5983:12;5976:19;;5635:366;;;:::o;6007:419::-;6173:4;6211:2;6200:9;6196:18;6188:26;;6260:9;6254:4;6250:20;6246:1;6235:9;6231:17;6224:47;6288:131;6414:4;6288:131;:::i;:::-;6280:139;;6007:419;;;:::o;6432:172::-;6572:24;6568:1;6560:6;6556:14;6549:48;6432:172;:::o;6610:366::-;6752:3;6773:67;6837:2;6832:3;6773:67;:::i;:::-;6766:74;;6849:93;6938:3;6849:93;:::i;:::-;6967:2;6962:3;6958:12;6951:19;;6610:366;;;:::o;6982:419::-;7148:4;7186:2;7175:9;7171:18;7163:26;;7235:9;7229:4;7225:20;7221:1;7210:9;7206:17;7199:47;7263:131;7389:4;7263:131;:::i;:::-;7255:139;;6982:419;;;:::o;7407:358::-;7547:34;7543:1;7535:6;7531:14;7524:58;7616:34;7611:2;7603:6;7599:15;7592:59;7685:34;7680:2;7672:6;7668:15;7661:59;7754:3;7749:2;7741:6;7737:15;7730:28;7407:358;:::o;7771:367::-;7913:3;7934:67;7998:2;7993:3;7934:67;:::i;:::-;7927:74;;8010:93;8099:3;8010:93;:::i;:::-;8128:3;8123;8119:13;8112:20;;7771:367;;;:::o;8144:419::-;8310:4;8348:2;8337:9;8333:18;8325:26;;8397:9;8391:4;8387:20;8383:1;8372:9;8368:17;8361:47;8425:131;8551:4;8425:131;:::i;:::-;8417:139;;8144:419;;;:::o;8569:180::-;8617:77;8614:1;8607:88;8714:4;8711:1;8704:15;8738:4;8735:1;8728:15;8755:305;8795:3;8814:20;8832:1;8814:20;:::i;:::-;8809:25;;8848:20;8866:1;8848:20;:::i;:::-;8843:25;;9002:1;8934:66;8930:74;8927:1;8924:81;8921:107;;;9008:18;;:::i;:::-;8921:107;9052:1;9049;9045:9;9038:16;;8755:305;;;;:::o;9066:332::-;9187:4;9225:2;9214:9;9210:18;9202:26;;9238:71;9306:1;9295:9;9291:17;9282:6;9238:71;:::i;:::-;9319:72;9387:2;9376:9;9372:18;9363:6;9319:72;:::i;:::-;9066:332;;;;;:::o;9404:60::-;9432:3;9453:5;9446:12;;9404:60;;;:::o;9470:142::-;9520:9;9553:53;9571:34;9580:24;9598:5;9580:24;:::i;:::-;9571:34;:::i;:::-;9553:53;:::i;:::-;9540:66;;9470:142;;;:::o;9618:126::-;9668:9;9701:37;9732:5;9701:37;:::i;:::-;9688:50;;9618:126;;;:::o;9750:134::-;9808:9;9841:37;9872:5;9841:37;:::i;:::-;9828:50;;9750:134;;;:::o;9890:147::-;9985:45;10024:5;9985:45;:::i;:::-;9980:3;9973:58;9890:147;;:::o;10043:458::-;10200:4;10238:2;10227:9;10223:18;10215:26;;10251:71;10319:1;10308:9;10304:17;10295:6;10251:71;:::i;:::-;10332:80;10408:2;10397:9;10393:18;10384:6;10332:80;:::i;:::-;10422:72;10490:2;10479:9;10475:18;10466:6;10422:72;:::i;:::-;10043:458;;;;;;:::o;10588:117::-;10697:1;10694;10687:12;10834:116;10904:21;10919:5;10904:21;:::i;:::-;10897:5;10894:32;10884:60;;10940:1;10937;10930:12;10884:60;10834:116;:::o;10956:137::-;11010:5;11041:6;11035:13;11026:22;;11057:30;11081:5;11057:30;:::i;:::-;10956:137;;;;:::o;11099:345::-;11166:6;11215:2;11203:9;11194:7;11190:23;11186:32;11183:119;;;11221:79;;:::i;:::-;11183:119;11341:1;11366:61;11419:7;11410:6;11399:9;11395:22;11366:61;:::i;:::-;11356:71;;11312:125;11099:345;;;;:::o;11450:177::-;11590:29;11586:1;11578:6;11574:14;11567:53;11450:177;:::o;11633:366::-;11775:3;11796:67;11860:2;11855:3;11796:67;:::i;:::-;11789:74;;11872:93;11961:3;11872:93;:::i;:::-;11990:2;11985:3;11981:12;11974:19;;11633:366;;;:::o;12005:419::-;12171:4;12209:2;12198:9;12194:18;12186:26;;12258:9;12252:4;12248:20;12244:1;12233:9;12229:17;12222:47;12286:131;12412:4;12286:131;:::i;:::-;12278:139;;12005:419;;;:::o;12430:237::-;12570:34;12566:1;12558:6;12554:14;12547:58;12639:20;12634:2;12626:6;12622:15;12615:45;12430:237;:::o;12673:366::-;12815:3;12836:67;12900:2;12895:3;12836:67;:::i;:::-;12829:74;;12912:93;13001:3;12912:93;:::i;:::-;13030:2;13025:3;13021:12;13014:19;;12673:366;;;:::o;13045:419::-;13211:4;13249:2;13238:9;13234:18;13226:26;;13298:9;13292:4;13288:20;13284:1;13273:9;13269:17;13262:47;13326:131;13452:4;13326:131;:::i;:::-;13318:139;;13045:419;;;:::o;13470:362::-;13610:34;13606:1;13598:6;13594:14;13587:58;13679:34;13674:2;13666:6;13662:15;13655:59;13748:34;13743:2;13735:6;13731:15;13724:59;13817:7;13812:2;13804:6;13800:15;13793:32;13470:362;:::o;13838:368::-;13980:3;14001:68;14065:3;14060;14001:68;:::i;:::-;13994:75;;14078:93;14167:3;14078:93;:::i;:::-;14196:3;14191;14187:13;14180:20;;13838:368;;;:::o;14212:419::-;14378:4;14416:2;14405:9;14401:18;14393:26;;14465:9;14459:4;14455:20;14451:1;14440:9;14436:17;14429:47;14493:131;14619:4;14493:131;:::i;:::-;14485:139;;14212:419;;;:::o;14637:348::-;14766:4;14804:2;14793:9;14789:18;14781:26;;14817:79;14893:1;14882:9;14878:17;14869:6;14817:79;:::i;:::-;14906:72;14974:2;14963:9;14959:18;14950:6;14906:72;:::i;:::-;14637:348;;;;;:::o;14991:458::-;15148:4;15186:2;15175:9;15171:18;15163:26;;15199:79;15275:1;15264:9;15260:17;15251:6;15199:79;:::i;:::-;15288:72;15356:2;15345:9;15341:18;15332:6;15288:72;:::i;:::-;15370;15438:2;15427:9;15423:18;15414:6;15370:72;:::i;:::-;14991:458;;;;;;:::o;15455:176::-;15595:28;15591:1;15583:6;15579:14;15572:52;15455:176;:::o;15637:366::-;15779:3;15800:67;15864:2;15859:3;15800:67;:::i;:::-;15793:74;;15876:93;15965:3;15876:93;:::i;:::-;15994:2;15989:3;15985:12;15978:19;;15637:366;;;:::o;16009:419::-;16175:4;16213:2;16202:9;16198:18;16190:26;;16262:9;16256:4;16252:20;16248:1;16237:9;16233:17;16226:47;16290:131;16416:4;16290:131;:::i;:::-;16282:139;;16009:419;;;:::o;16434:348::-;16474:7;16497:20;16515:1;16497:20;:::i;:::-;16492:25;;16531:20;16549:1;16531:20;:::i;:::-;16526:25;;16719:1;16651:66;16647:74;16644:1;16641:81;16636:1;16629:9;16622:17;16618:105;16615:131;;;16726:18;;:::i;:::-;16615:131;16774:1;16771;16767:9;16756:20;;16434:348;;;;:::o;16788:180::-;16836:77;16833:1;16826:88;16933:4;16930:1;16923:15;16957:4;16954:1;16947:15;16974:185;17014:1;17031:20;17049:1;17031:20;:::i;:::-;17026:25;;17065:20;17083:1;17065:20;:::i;:::-;17060:25;;17104:1;17094:35;;17109:18;;:::i;:::-;17094:35;17151:1;17148;17144:9;17139:14;;16974:185;;;;:::o;17165:191::-;17205:4;17225:20;17243:1;17225:20;:::i;:::-;17220:25;;17259:20;17277:1;17259:20;:::i;:::-;17254:25;;17298:1;17295;17292:8;17289:34;;;17303:18;;:::i;:::-;17289:34;17348:1;17345;17341:9;17333:17;;17165:191;;;;:::o",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity >=0.8.9;\n\nimport \"../node_modules/@openzeppelin/contracts/utils/Address.sol\";\nimport \"../node_modules/@openzeppelin/contracts/utils/math/SafeMath.sol\";\nimport \"../node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\";\nimport \"../node_modules/@openzeppelin/contracts/security/ReentrancyGuard.sol\";\n\nimport \"./Mindpay.sol\";\nimport \"./Liquidity.sol\";\nimport \"./Reserve.sol\";\nimport \"./Staking.sol\";\n\ncontract Investment is ReentrancyGuard {\n    using SafeMath for uint;\n\n    address public mindpayContractAddress;\n    address public liquidityContractAddress;\n    address payable public reserveContractAddress;\n    address public stakingContractAddress;\n\n    uint public totalMindapayTokenAmount;\n\n    struct UserData {\n        address payable userAddress;\n        uint investedAmount;\n        uint reserveAmount;\n        uint liquidityAmount;\n        uint totalTokenAmount;\n        uint currentTokenAmount;\n        uint investmenstStartingTime;\n        uint investmenstEndingTime;\n        bool usersDataExists;\n    }\n\n    mapping(address => UserData) private usersData;\n\n    modifier onlyNonContract() {\n        require(\n            (\n                !Address.isContract(msg.sender)\n            ) && (\n                tx.origin == msg.sender\n            ),\n            \"Attack from an unknown external contract\"\n        );\n        _;\n    }\n\n    constructor() {\n        Mindpay mindpayContract = new Mindpay();\n        mindpayContractAddress = address(mindpayContract);\n\n        Liquidity liquidityContract = new Liquidity();\n        liquidityContractAddress = address(liquidityContract);\n\n        Reserve reserveContract = new Reserve();\n        reserveContractAddress = payable(address(reserveContract));\n\n        Staking stakingContract = new Staking();\n        stakingContractAddress = address(stakingContract);\n\n        totalMindapayTokenAmount = 0;\n    }\n\n    function investAmount() public payable nonReentrant onlyNonContract {\n        require(msg.value > 0, \"Amount must be above 0\");\n\n        uint investedAmount = msg.value;\n        uint tokenAmount = investedAmount.mul(1000);\n        uint bonusTokenAmount = 0;\n\n        if (investedAmount > 1 ether && investedAmount < 5 ether) {\n            bonusTokenAmount = bonusTokenAmount.add(tokenAmount.mul(10).div(100));\n        } else if (investedAmount > 5 ether) {\n            bonusTokenAmount = bonusTokenAmount.add(tokenAmount.mul(20).div(100));\n        }\n\n        uint totalTokenAmount = tokenAmount.add(bonusTokenAmount);\n        uint reserveContractAmount = investedAmount.mul(90).div(100);\n        uint liquidityContractAmount = investedAmount.mul(10).div(100);\n\n        if (usersData[msg.sender].usersDataExists) {\n            require(\n                (\n                    (\n                        usersData[msg.sender].investmenstStartingTime == 0\n                    ) && (\n                        usersData[msg.sender].investmenstEndingTime == 0\n                    )\n                ) || (\n                    (\n                        usersData[msg.sender].investmenstStartingTime < block.timestamp\n                    ) && (\n                        usersData[msg.sender].investmenstEndingTime < block.timestamp\n                    )\n                ),\n                \"Your investment amount and the tokens are still locked in the contract. Please try after sometime\"\n            );\n\n            uint userInvestedAmount = usersData[msg.sender].investedAmount;\n            uint userReservedAmount = usersData[msg.sender].reserveAmount;\n            uint userLiquidityAmount = usersData[msg.sender].liquidityAmount;\n            uint userTokenAmount = usersData[msg.sender].totalTokenAmount;\n            uint userCurrentTokenAmount = usersData[msg.sender].currentTokenAmount;\n\n            usersData[msg.sender].investedAmount = userInvestedAmount.add(\n                investedAmount\n            );\n            usersData[msg.sender].reserveAmount = userReservedAmount.add(\n                reserveContractAmount\n            );\n            usersData[msg.sender].liquidityAmount = userLiquidityAmount.add(\n                liquidityContractAmount\n            );\n            usersData[msg.sender].totalTokenAmount = userTokenAmount.add(\n                totalTokenAmount\n            );\n            usersData[msg.sender].currentTokenAmount = userCurrentTokenAmount.add(\n                totalTokenAmount\n            );\n            usersData[msg.sender].investmenstStartingTime = block.timestamp;\n            usersData[msg.sender].investmenstEndingTime = block.timestamp + 15 minutes;\n        } else {\n            usersData[msg.sender] = UserData({\n                userAddress: payable(msg.sender),\n                investedAmount: investedAmount,\n                reserveAmount: reserveContractAmount,\n                liquidityAmount: liquidityContractAmount,\n                totalTokenAmount: totalTokenAmount,\n                currentTokenAmount: totalTokenAmount,\n                investmenstStartingTime: block.timestamp,\n                investmenstEndingTime: block.timestamp + 15 minutes,\n                usersDataExists: true\n            });\n        }\n\n        totalMindapayTokenAmount = totalMindapayTokenAmount.add(totalTokenAmount);\n\n        payable(reserveContractAddress).transfer(reserveContractAmount);\n\n        payable(liquidityContractAddress).transfer(liquidityContractAmount);\n\n        Mindpay(mindpayContractAddress).mintToken(\n            msg.sender,\n            totalTokenAmount\n        );\n\n        Mindpay(mindpayContractAddress).approveOwner(\n            msg.sender,\n            totalTokenAmount\n        );\n\n        IERC20(mindpayContractAddress).transferFrom(\n            msg.sender,\n            reserveContractAddress,\n            totalTokenAmount\n        );\n    }\n\n    function cancelInvestment() public nonReentrant onlyNonContract {\n        require(\n            usersData[msg.sender].usersDataExists == true,\n            \"This user haven't invested.\"\n        );\n\n        require(\n            usersData[msg.sender].investedAmount > 0,\n            \"This user already cancelled/staked the investment.\"\n        );\n\n        require(\n            (\n                usersData[msg.sender].investmenstStartingTime != 0\n            ) && (\n                usersData[msg.sender].investmenstEndingTime >= 0\n            ),\n            \"Your investment amount and the tokens are currently locked in the contract. Please try after sometime\"\n        );\n        \n        uint reserveAmount = usersData[msg.sender].reserveAmount;\n        uint totalTokenAmount = usersData[msg.sender].totalTokenAmount;\n        uint currentTokenAmount = usersData[msg.sender].currentTokenAmount;\n\n        usersData[msg.sender].investedAmount = 0;\n        usersData[msg.sender].reserveAmount = 0;\n        usersData[msg.sender].totalTokenAmount = totalTokenAmount.sub(\n            currentTokenAmount\n        );\n        usersData[msg.sender].currentTokenAmount = 0;\n        usersData[msg.sender].investmenstStartingTime = 0;\n        usersData[msg.sender].investmenstEndingTime = 0;\n\n        totalMindapayTokenAmount = totalMindapayTokenAmount.sub(currentTokenAmount);\n\n        Reserve(reserveContractAddress).returnInvestment(\n            msg.sender,\n            reserveAmount\n        );\n\n        Mindpay(mindpayContractAddress).burnToken(\n            reserveContractAddress,\n            currentTokenAmount\n        );\n    }\n\n    function stakeInvestment() public nonReentrant onlyNonContract {\n        require(\n            usersData[msg.sender].usersDataExists == true,\n            \"This user haven't invested.\"\n        );\n\n        require(\n            usersData[msg.sender].investedAmount > 0,\n            \"This user already cancelled/staked the investment.\"\n        );\n\n        require(\n            (\n                usersData[msg.sender].investmenstStartingTime != 0\n            ) && (\n                usersData[msg.sender].investmenstEndingTime >= 0\n            ),\n            \"Your investment amount and the tokens are currently locked in the contract. Please try after sometime\"\n        );\n        \n        uint reserveAmount = usersData[msg.sender].reserveAmount;\n        uint liquidityAmount = usersData[msg.sender].liquidityAmount;\n        uint currentTokenAmount = usersData[msg.sender].currentTokenAmount;\n\n        usersData[msg.sender].investedAmount = 0;\n        usersData[msg.sender].reserveAmount = 0;\n        usersData[msg.sender].liquidityAmount = liquidityAmount.add(reserveAmount);\n        usersData[msg.sender].currentTokenAmount = 0;\n        usersData[msg.sender].investmenstStartingTime = 0;\n        usersData[msg.sender].investmenstEndingTime = 0;\n\n        Reserve(reserveContractAddress).transferToLiquidity(\n            liquidityContractAddress,\n            reserveAmount\n        );\n\n        Mindpay(mindpayContractAddress).approveReserveContract(\n            reserveContractAddress,\n            currentTokenAmount\n        );\n\n        Mindpay(mindpayContractAddress).transferToStakingContract(\n            reserveContractAddress,\n            stakingContractAddress,\n            currentTokenAmount\n        );\n    }\n\n    function getReserveContractBalance() public view returns(uint) {\n        return address(reserveContractAddress).balance;\n    }\n\n    function getLiquidityContractBalance() public view returns(uint) {\n        return address(liquidityContractAddress).balance;\n    }\n\n    function getUserData() public view returns(UserData memory) {\n        require(\n            usersData[msg.sender].usersDataExists == true,\n            \"User data does not exists.\"\n        );\n        return usersData[msg.sender];\n    }\n\n    function getInvestmentEndingTime() public view returns(uint) {\n        return usersData[msg.sender].usersDataExists == true ?\n            usersData[msg.sender].investmenstEndingTime:\n            0;\n    }\n\n    function getUserMindpayTokenBalance() public view returns(uint) {\n        return usersData[msg.sender].usersDataExists == true ?\n            usersData[msg.sender].totalTokenAmount:\n            0;\n    }\n\n    function getTotalMindpayTokenSupply() public view returns(uint) {\n        return totalMindapayTokenAmount;\n    }\n\n    function getCurrentTime() public view returns(uint) {\n        return block.timestamp;\n    }\n}",
  "sourcePath": "/home/mikhil/job_assignments/mindeft/contracts/Investment.sol",
  "ast": {
    "absolutePath": "project:/contracts/Investment.sol",
    "exportedSymbols": {
      "Address": [
        2773
      ],
      "Context": [
        2795
      ],
      "ERC20": [
        2375
      ],
      "IERC20": [
        2453
      ],
      "IERC20Metadata": [
        2478
      ],
      "Investment": [
        890
      ],
      "Liquidity": [
        913
      ],
      "Mindpay": [
        1039
      ],
      "ReentrancyGuard": [
        1789
      ],
      "Reserve": [
        1128
      ],
      "SafeMath": [
        3107
      ],
      "Staking": [
        1135
      ]
    },
    "id": 891,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          ">=",
          "0.8",
          ".9"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:24:0"
      },
      {
        "absolutePath": "project:/node_modules/@openzeppelin/contracts/utils/Address.sol",
        "file": "../node_modules/@openzeppelin/contracts/utils/Address.sol",
        "id": 2,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 891,
        "sourceUnit": 2774,
        "src": "58:67:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/node_modules/@openzeppelin/contracts/utils/math/SafeMath.sol",
        "file": "../node_modules/@openzeppelin/contracts/utils/math/SafeMath.sol",
        "id": 3,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 891,
        "sourceUnit": 3108,
        "src": "126:73:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol",
        "file": "../node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol",
        "id": 4,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 891,
        "sourceUnit": 2376,
        "src": "200:71:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/node_modules/@openzeppelin/contracts/security/ReentrancyGuard.sol",
        "file": "../node_modules/@openzeppelin/contracts/security/ReentrancyGuard.sol",
        "id": 5,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 891,
        "sourceUnit": 1790,
        "src": "272:78:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/Mindpay.sol",
        "file": "./Mindpay.sol",
        "id": 6,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 891,
        "sourceUnit": 1040,
        "src": "352:23:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/Liquidity.sol",
        "file": "./Liquidity.sol",
        "id": 7,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 891,
        "sourceUnit": 914,
        "src": "376:25:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/Reserve.sol",
        "file": "./Reserve.sol",
        "id": 8,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 891,
        "sourceUnit": 1129,
        "src": "402:23:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/Staking.sol",
        "file": "./Staking.sol",
        "id": 9,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 891,
        "sourceUnit": 1136,
        "src": "426:23:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 10,
              "name": "ReentrancyGuard",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1789,
              "src": "474:15:0"
            },
            "id": 11,
            "nodeType": "InheritanceSpecifier",
            "src": "474:15:0"
          }
        ],
        "canonicalName": "Investment",
        "contractDependencies": [
          913,
          1039,
          1128,
          1135
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 890,
        "linearizedBaseContracts": [
          890,
          1789
        ],
        "name": "Investment",
        "nameLocation": "460:10:0",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "global": false,
            "id": 14,
            "libraryName": {
              "id": 12,
              "name": "SafeMath",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 3107,
              "src": "502:8:0"
            },
            "nodeType": "UsingForDirective",
            "src": "496:24:0",
            "typeName": {
              "id": 13,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "515:4:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "constant": false,
            "functionSelector": "4b3f56e9",
            "id": 16,
            "mutability": "mutable",
            "name": "mindpayContractAddress",
            "nameLocation": "541:22:0",
            "nodeType": "VariableDeclaration",
            "scope": 890,
            "src": "526:37:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 15,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "526:7:0",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "cba1fcea",
            "id": 18,
            "mutability": "mutable",
            "name": "liquidityContractAddress",
            "nameLocation": "584:24:0",
            "nodeType": "VariableDeclaration",
            "scope": 890,
            "src": "569:39:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 17,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "569:7:0",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "9c84bd63",
            "id": 20,
            "mutability": "mutable",
            "name": "reserveContractAddress",
            "nameLocation": "637:22:0",
            "nodeType": "VariableDeclaration",
            "scope": 890,
            "src": "614:45:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address_payable",
              "typeString": "address payable"
            },
            "typeName": {
              "id": 19,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "614:15:0",
              "stateMutability": "payable",
              "typeDescriptions": {
                "typeIdentifier": "t_address_payable",
                "typeString": "address payable"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "3535f48b",
            "id": 22,
            "mutability": "mutable",
            "name": "stakingContractAddress",
            "nameLocation": "680:22:0",
            "nodeType": "VariableDeclaration",
            "scope": 890,
            "src": "665:37:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 21,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "665:7:0",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "029457bc",
            "id": 24,
            "mutability": "mutable",
            "name": "totalMindapayTokenAmount",
            "nameLocation": "721:24:0",
            "nodeType": "VariableDeclaration",
            "scope": 890,
            "src": "709:36:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 23,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "709:4:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "canonicalName": "Investment.UserData",
            "id": 43,
            "members": [
              {
                "constant": false,
                "id": 26,
                "mutability": "mutable",
                "name": "userAddress",
                "nameLocation": "794:11:0",
                "nodeType": "VariableDeclaration",
                "scope": 43,
                "src": "778:27:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address_payable",
                  "typeString": "address payable"
                },
                "typeName": {
                  "id": 25,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "778:15:0",
                  "stateMutability": "payable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 28,
                "mutability": "mutable",
                "name": "investedAmount",
                "nameLocation": "820:14:0",
                "nodeType": "VariableDeclaration",
                "scope": 43,
                "src": "815:19:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 27,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "815:4:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 30,
                "mutability": "mutable",
                "name": "reserveAmount",
                "nameLocation": "849:13:0",
                "nodeType": "VariableDeclaration",
                "scope": 43,
                "src": "844:18:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 29,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "844:4:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 32,
                "mutability": "mutable",
                "name": "liquidityAmount",
                "nameLocation": "877:15:0",
                "nodeType": "VariableDeclaration",
                "scope": 43,
                "src": "872:20:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 31,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "872:4:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 34,
                "mutability": "mutable",
                "name": "totalTokenAmount",
                "nameLocation": "907:16:0",
                "nodeType": "VariableDeclaration",
                "scope": 43,
                "src": "902:21:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 33,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "902:4:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 36,
                "mutability": "mutable",
                "name": "currentTokenAmount",
                "nameLocation": "938:18:0",
                "nodeType": "VariableDeclaration",
                "scope": 43,
                "src": "933:23:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 35,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "933:4:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 38,
                "mutability": "mutable",
                "name": "investmenstStartingTime",
                "nameLocation": "971:23:0",
                "nodeType": "VariableDeclaration",
                "scope": 43,
                "src": "966:28:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 37,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "966:4:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 40,
                "mutability": "mutable",
                "name": "investmenstEndingTime",
                "nameLocation": "1009:21:0",
                "nodeType": "VariableDeclaration",
                "scope": 43,
                "src": "1004:26:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 39,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "1004:4:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 42,
                "mutability": "mutable",
                "name": "usersDataExists",
                "nameLocation": "1045:15:0",
                "nodeType": "VariableDeclaration",
                "scope": 43,
                "src": "1040:20:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 41,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "1040:4:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "UserData",
            "nameLocation": "759:8:0",
            "nodeType": "StructDefinition",
            "scope": 890,
            "src": "752:315:0",
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 48,
            "mutability": "mutable",
            "name": "usersData",
            "nameLocation": "1110:9:0",
            "nodeType": "VariableDeclaration",
            "scope": 890,
            "src": "1073:46:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserData_$43_storage_$",
              "typeString": "mapping(address => struct Investment.UserData)"
            },
            "typeName": {
              "id": 47,
              "keyType": {
                "id": 44,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1081:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1073:28:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserData_$43_storage_$",
                "typeString": "mapping(address => struct Investment.UserData)"
              },
              "valueType": {
                "id": 46,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 45,
                  "name": "UserData",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 43,
                  "src": "1092:8:0"
                },
                "referencedDeclaration": 43,
                "src": "1092:8:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_UserData_$43_storage_ptr",
                  "typeString": "struct Investment.UserData"
                }
              }
            },
            "visibility": "private"
          },
          {
            "body": {
              "id": 69,
              "nodeType": "Block",
              "src": "1153:237:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 64,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "components": [
                            {
                              "id": 56,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "UnaryOperation",
                              "operator": "!",
                              "prefix": true,
                              "src": "1202:31:0",
                              "subExpression": {
                                "arguments": [
                                  {
                                    "expression": {
                                      "id": 53,
                                      "name": "msg",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 4294967281,
                                      "src": "1222:3:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_message",
                                        "typeString": "msg"
                                      }
                                    },
                                    "id": 54,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "sender",
                                    "nodeType": "MemberAccess",
                                    "src": "1222:10:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "expression": {
                                    "id": 51,
                                    "name": "Address",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2773,
                                    "src": "1203:7:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_contract$_Address_$2773_$",
                                      "typeString": "type(library Address)"
                                    }
                                  },
                                  "id": 52,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "isContract",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 2496,
                                  "src": "1203:18:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                                    "typeString": "function (address) view returns (bool)"
                                  }
                                },
                                "id": 55,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1203:30:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            }
                          ],
                          "id": 57,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "1184:63:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "components": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 62,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 58,
                                  "name": "tx",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967270,
                                  "src": "1269:2:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_transaction",
                                    "typeString": "tx"
                                  }
                                },
                                "id": 59,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "origin",
                                "nodeType": "MemberAccess",
                                "src": "1269:9:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "expression": {
                                  "id": 60,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967281,
                                  "src": "1282:3:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 61,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "1282:10:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "1269:23:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            }
                          ],
                          "id": 63,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "1251:55:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "1184:122:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "41747461636b2066726f6d20616e20756e6b6e6f776e2065787465726e616c20636f6e7472616374",
                        "id": 65,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1320:42:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d874c83e1f7022554f997860cd025b259d0aa10f56f1b971482ef750c11169b4",
                          "typeString": "literal_string \"Attack from an unknown external contract\""
                        },
                        "value": "Attack from an unknown external contract"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d874c83e1f7022554f997860cd025b259d0aa10f56f1b971482ef750c11169b4",
                          "typeString": "literal_string \"Attack from an unknown external contract\""
                        }
                      ],
                      "id": 50,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1163:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 66,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1163:209:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 67,
                  "nodeType": "ExpressionStatement",
                  "src": "1163:209:0"
                },
                {
                  "id": 68,
                  "nodeType": "PlaceholderStatement",
                  "src": "1382:1:0"
                }
              ]
            },
            "id": 70,
            "name": "onlyNonContract",
            "nameLocation": "1135:15:0",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 49,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1150:2:0"
            },
            "src": "1126:264:0",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 140,
              "nodeType": "Block",
              "src": "1410:500:0",
              "statements": [
                {
                  "assignments": [
                    75
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 75,
                      "mutability": "mutable",
                      "name": "mindpayContract",
                      "nameLocation": "1428:15:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 140,
                      "src": "1420:23:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Mindpay_$1039",
                        "typeString": "contract Mindpay"
                      },
                      "typeName": {
                        "id": 74,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 73,
                          "name": "Mindpay",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 1039,
                          "src": "1420:7:0"
                        },
                        "referencedDeclaration": 1039,
                        "src": "1420:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Mindpay_$1039",
                          "typeString": "contract Mindpay"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 80,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 78,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "1446:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_Mindpay_$1039_$",
                        "typeString": "function () returns (contract Mindpay)"
                      },
                      "typeName": {
                        "id": 77,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 76,
                          "name": "Mindpay",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 1039,
                          "src": "1450:7:0"
                        },
                        "referencedDeclaration": 1039,
                        "src": "1450:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Mindpay_$1039",
                          "typeString": "contract Mindpay"
                        }
                      }
                    },
                    "id": 79,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1446:13:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Mindpay_$1039",
                      "typeString": "contract Mindpay"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1420:39:0"
                },
                {
                  "expression": {
                    "id": 86,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 81,
                      "name": "mindpayContractAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 16,
                      "src": "1469:22:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 84,
                          "name": "mindpayContract",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 75,
                          "src": "1502:15:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Mindpay_$1039",
                            "typeString": "contract Mindpay"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_Mindpay_$1039",
                            "typeString": "contract Mindpay"
                          }
                        ],
                        "id": 83,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "1494:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 82,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1494:7:0",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 85,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1494:24:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1469:49:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 87,
                  "nodeType": "ExpressionStatement",
                  "src": "1469:49:0"
                },
                {
                  "assignments": [
                    90
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 90,
                      "mutability": "mutable",
                      "name": "liquidityContract",
                      "nameLocation": "1539:17:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 140,
                      "src": "1529:27:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Liquidity_$913",
                        "typeString": "contract Liquidity"
                      },
                      "typeName": {
                        "id": 89,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 88,
                          "name": "Liquidity",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 913,
                          "src": "1529:9:0"
                        },
                        "referencedDeclaration": 913,
                        "src": "1529:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Liquidity_$913",
                          "typeString": "contract Liquidity"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 95,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 93,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "1559:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_Liquidity_$913_$",
                        "typeString": "function () returns (contract Liquidity)"
                      },
                      "typeName": {
                        "id": 92,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 91,
                          "name": "Liquidity",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 913,
                          "src": "1563:9:0"
                        },
                        "referencedDeclaration": 913,
                        "src": "1563:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Liquidity_$913",
                          "typeString": "contract Liquidity"
                        }
                      }
                    },
                    "id": 94,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1559:15:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Liquidity_$913",
                      "typeString": "contract Liquidity"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1529:45:0"
                },
                {
                  "expression": {
                    "id": 101,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 96,
                      "name": "liquidityContractAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 18,
                      "src": "1584:24:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 99,
                          "name": "liquidityContract",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 90,
                          "src": "1619:17:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Liquidity_$913",
                            "typeString": "contract Liquidity"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_Liquidity_$913",
                            "typeString": "contract Liquidity"
                          }
                        ],
                        "id": 98,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "1611:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 97,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1611:7:0",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 100,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1611:26:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1584:53:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 102,
                  "nodeType": "ExpressionStatement",
                  "src": "1584:53:0"
                },
                {
                  "assignments": [
                    105
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 105,
                      "mutability": "mutable",
                      "name": "reserveContract",
                      "nameLocation": "1656:15:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 140,
                      "src": "1648:23:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Reserve_$1128",
                        "typeString": "contract Reserve"
                      },
                      "typeName": {
                        "id": 104,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 103,
                          "name": "Reserve",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 1128,
                          "src": "1648:7:0"
                        },
                        "referencedDeclaration": 1128,
                        "src": "1648:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Reserve_$1128",
                          "typeString": "contract Reserve"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 110,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 108,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "1674:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_Reserve_$1128_$",
                        "typeString": "function () returns (contract Reserve)"
                      },
                      "typeName": {
                        "id": 107,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 106,
                          "name": "Reserve",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 1128,
                          "src": "1678:7:0"
                        },
                        "referencedDeclaration": 1128,
                        "src": "1678:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Reserve_$1128",
                          "typeString": "contract Reserve"
                        }
                      }
                    },
                    "id": 109,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1674:13:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Reserve_$1128",
                      "typeString": "contract Reserve"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1648:39:0"
                },
                {
                  "expression": {
                    "id": 119,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 111,
                      "name": "reserveContractAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 20,
                      "src": "1697:22:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 116,
                              "name": "reserveContract",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 105,
                              "src": "1738:15:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Reserve_$1128",
                                "typeString": "contract Reserve"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_Reserve_$1128",
                                "typeString": "contract Reserve"
                              }
                            ],
                            "id": 115,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1730:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 114,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1730:7:0",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 117,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1730:24:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 113,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "1722:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_payable_$",
                          "typeString": "type(address payable)"
                        },
                        "typeName": {
                          "id": 112,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1722:8:0",
                          "stateMutability": "payable",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 118,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1722:33:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "1697:58:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "id": 120,
                  "nodeType": "ExpressionStatement",
                  "src": "1697:58:0"
                },
                {
                  "assignments": [
                    123
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 123,
                      "mutability": "mutable",
                      "name": "stakingContract",
                      "nameLocation": "1774:15:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 140,
                      "src": "1766:23:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Staking_$1135",
                        "typeString": "contract Staking"
                      },
                      "typeName": {
                        "id": 122,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 121,
                          "name": "Staking",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 1135,
                          "src": "1766:7:0"
                        },
                        "referencedDeclaration": 1135,
                        "src": "1766:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Staking_$1135",
                          "typeString": "contract Staking"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 128,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 126,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "1792:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_Staking_$1135_$",
                        "typeString": "function () returns (contract Staking)"
                      },
                      "typeName": {
                        "id": 125,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 124,
                          "name": "Staking",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 1135,
                          "src": "1796:7:0"
                        },
                        "referencedDeclaration": 1135,
                        "src": "1796:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Staking_$1135",
                          "typeString": "contract Staking"
                        }
                      }
                    },
                    "id": 127,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1792:13:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Staking_$1135",
                      "typeString": "contract Staking"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1766:39:0"
                },
                {
                  "expression": {
                    "id": 134,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 129,
                      "name": "stakingContractAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 22,
                      "src": "1815:22:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 132,
                          "name": "stakingContract",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 123,
                          "src": "1848:15:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Staking_$1135",
                            "typeString": "contract Staking"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_Staking_$1135",
                            "typeString": "contract Staking"
                          }
                        ],
                        "id": 131,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "1840:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 130,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1840:7:0",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 133,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1840:24:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1815:49:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 135,
                  "nodeType": "ExpressionStatement",
                  "src": "1815:49:0"
                },
                {
                  "expression": {
                    "id": 138,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 136,
                      "name": "totalMindapayTokenAmount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24,
                      "src": "1875:24:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "30",
                      "id": 137,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1902:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "1875:28:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 139,
                  "nodeType": "ExpressionStatement",
                  "src": "1875:28:0"
                }
              ]
            },
            "id": 141,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 71,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1407:2:0"
            },
            "returnParameters": {
              "id": 72,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1410:0:0"
            },
            "scope": 890,
            "src": "1396:514:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 481,
              "nodeType": "Block",
              "src": "1984:3811:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 152,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 149,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "2002:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 150,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "src": "2002:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 151,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2014:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "2002:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "416d6f756e74206d7573742062652061626f76652030",
                        "id": 153,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2017:24:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_0c0f4d1af98fc33c4205e021e0139d31ed4d95ab50bb31bd83d2cc54c100b343",
                          "typeString": "literal_string \"Amount must be above 0\""
                        },
                        "value": "Amount must be above 0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_0c0f4d1af98fc33c4205e021e0139d31ed4d95ab50bb31bd83d2cc54c100b343",
                          "typeString": "literal_string \"Amount must be above 0\""
                        }
                      ],
                      "id": 148,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1994:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 154,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1994:48:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 155,
                  "nodeType": "ExpressionStatement",
                  "src": "1994:48:0"
                },
                {
                  "assignments": [
                    157
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 157,
                      "mutability": "mutable",
                      "name": "investedAmount",
                      "nameLocation": "2058:14:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 481,
                      "src": "2053:19:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 156,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "2053:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 160,
                  "initialValue": {
                    "expression": {
                      "id": 158,
                      "name": "msg",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4294967281,
                      "src": "2075:3:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_message",
                        "typeString": "msg"
                      }
                    },
                    "id": 159,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "value",
                    "nodeType": "MemberAccess",
                    "src": "2075:9:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2053:31:0"
                },
                {
                  "assignments": [
                    162
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 162,
                      "mutability": "mutable",
                      "name": "tokenAmount",
                      "nameLocation": "2099:11:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 481,
                      "src": "2094:16:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 161,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "2094:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 167,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "31303030",
                        "id": 165,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2132:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000_by_1",
                          "typeString": "int_const 1000"
                        },
                        "value": "1000"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1000_by_1",
                          "typeString": "int_const 1000"
                        }
                      ],
                      "expression": {
                        "id": 163,
                        "name": "investedAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 157,
                        "src": "2113:14:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 164,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "mul",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3001,
                      "src": "2113:18:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 166,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2113:24:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2094:43:0"
                },
                {
                  "assignments": [
                    169
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 169,
                      "mutability": "mutable",
                      "name": "bonusTokenAmount",
                      "nameLocation": "2152:16:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 481,
                      "src": "2147:21:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 168,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "2147:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 171,
                  "initialValue": {
                    "hexValue": "30",
                    "id": 170,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "2171:1:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2147:25:0"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 178,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 174,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 172,
                        "name": "investedAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 157,
                        "src": "2187:14:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": ">",
                      "rightExpression": {
                        "hexValue": "31",
                        "id": 173,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2204:7:0",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      },
                      "src": "2187:24:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 177,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 175,
                        "name": "investedAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 157,
                        "src": "2215:14:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "<",
                      "rightExpression": {
                        "hexValue": "35",
                        "id": 176,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2232:7:0",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_5000000000000000000_by_1",
                          "typeString": "int_const 5000000000000000000"
                        },
                        "value": "5"
                      },
                      "src": "2215:24:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "2187:52:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 195,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 193,
                        "name": "investedAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 157,
                        "src": "2345:14:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": ">",
                      "rightExpression": {
                        "hexValue": "35",
                        "id": 194,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2362:7:0",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_5000000000000000000_by_1",
                          "typeString": "int_const 5000000000000000000"
                        },
                        "value": "5"
                      },
                      "src": "2345:24:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "id": 210,
                    "nodeType": "IfStatement",
                    "src": "2341:124:0",
                    "trueBody": {
                      "id": 209,
                      "nodeType": "Block",
                      "src": "2371:94:0",
                      "statements": [
                        {
                          "expression": {
                            "id": 207,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftHandSide": {
                              "id": 196,
                              "name": "bonusTokenAmount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 169,
                              "src": "2385:16:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "Assignment",
                            "operator": "=",
                            "rightHandSide": {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "hexValue": "313030",
                                      "id": 204,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "2449:3:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_100_by_1",
                                        "typeString": "int_const 100"
                                      },
                                      "value": "100"
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_rational_100_by_1",
                                        "typeString": "int_const 100"
                                      }
                                    ],
                                    "expression": {
                                      "arguments": [
                                        {
                                          "hexValue": "3230",
                                          "id": 201,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "kind": "number",
                                          "lValueRequested": false,
                                          "nodeType": "Literal",
                                          "src": "2441:2:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_rational_20_by_1",
                                            "typeString": "int_const 20"
                                          },
                                          "value": "20"
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_rational_20_by_1",
                                            "typeString": "int_const 20"
                                          }
                                        ],
                                        "expression": {
                                          "id": 199,
                                          "name": "tokenAmount",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 162,
                                          "src": "2425:11:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "id": 200,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "mul",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 3001,
                                        "src": "2425:15:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                                        }
                                      },
                                      "id": 202,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "2425:19:0",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "id": 203,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "div",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 3016,
                                    "src": "2425:23:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                      "typeString": "function (uint256,uint256) pure returns (uint256)"
                                    }
                                  },
                                  "id": 205,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "2425:28:0",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "id": 197,
                                  "name": "bonusTokenAmount",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 169,
                                  "src": "2404:16:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "id": 198,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "add",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 2971,
                                "src": "2404:20:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                  "typeString": "function (uint256,uint256) pure returns (uint256)"
                                }
                              },
                              "id": 206,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2404:50:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "2385:69:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 208,
                          "nodeType": "ExpressionStatement",
                          "src": "2385:69:0"
                        }
                      ]
                    }
                  },
                  "id": 211,
                  "nodeType": "IfStatement",
                  "src": "2183:282:0",
                  "trueBody": {
                    "id": 192,
                    "nodeType": "Block",
                    "src": "2241:94:0",
                    "statements": [
                      {
                        "expression": {
                          "id": 190,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 179,
                            "name": "bonusTokenAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 169,
                            "src": "2255:16:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "hexValue": "313030",
                                    "id": 187,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "2319:3:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_100_by_1",
                                      "typeString": "int_const 100"
                                    },
                                    "value": "100"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_100_by_1",
                                      "typeString": "int_const 100"
                                    }
                                  ],
                                  "expression": {
                                    "arguments": [
                                      {
                                        "hexValue": "3130",
                                        "id": 184,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "2311:2:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_10_by_1",
                                          "typeString": "int_const 10"
                                        },
                                        "value": "10"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_rational_10_by_1",
                                          "typeString": "int_const 10"
                                        }
                                      ],
                                      "expression": {
                                        "id": 182,
                                        "name": "tokenAmount",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 162,
                                        "src": "2295:11:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "id": 183,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "mul",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 3001,
                                      "src": "2295:15:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                                      }
                                    },
                                    "id": 185,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "2295:19:0",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "id": 186,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "div",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 3016,
                                  "src": "2295:23:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                    "typeString": "function (uint256,uint256) pure returns (uint256)"
                                  }
                                },
                                "id": 188,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2295:28:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "id": 180,
                                "name": "bonusTokenAmount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 169,
                                "src": "2274:16:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 181,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "add",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 2971,
                              "src": "2274:20:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                "typeString": "function (uint256,uint256) pure returns (uint256)"
                              }
                            },
                            "id": 189,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2274:50:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2255:69:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 191,
                        "nodeType": "ExpressionStatement",
                        "src": "2255:69:0"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    213
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 213,
                      "mutability": "mutable",
                      "name": "totalTokenAmount",
                      "nameLocation": "2480:16:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 481,
                      "src": "2475:21:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 212,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "2475:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 218,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 216,
                        "name": "bonusTokenAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 169,
                        "src": "2515:16:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 214,
                        "name": "tokenAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 162,
                        "src": "2499:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 215,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "add",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2971,
                      "src": "2499:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 217,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2499:33:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2475:57:0"
                },
                {
                  "assignments": [
                    220
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 220,
                      "mutability": "mutable",
                      "name": "reserveContractAmount",
                      "nameLocation": "2547:21:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 481,
                      "src": "2542:26:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 219,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "2542:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 228,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "313030",
                        "id": 226,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2598:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_100_by_1",
                          "typeString": "int_const 100"
                        },
                        "value": "100"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_100_by_1",
                          "typeString": "int_const 100"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "hexValue": "3930",
                            "id": 223,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2590:2:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_90_by_1",
                              "typeString": "int_const 90"
                            },
                            "value": "90"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_90_by_1",
                              "typeString": "int_const 90"
                            }
                          ],
                          "expression": {
                            "id": 221,
                            "name": "investedAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 157,
                            "src": "2571:14:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 222,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "mul",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 3001,
                          "src": "2571:18:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                            "typeString": "function (uint256,uint256) pure returns (uint256)"
                          }
                        },
                        "id": 224,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2571:22:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 225,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "div",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3016,
                      "src": "2571:26:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 227,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2571:31:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2542:60:0"
                },
                {
                  "assignments": [
                    230
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 230,
                      "mutability": "mutable",
                      "name": "liquidityContractAmount",
                      "nameLocation": "2617:23:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 481,
                      "src": "2612:28:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 229,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "2612:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 238,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "313030",
                        "id": 236,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2670:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_100_by_1",
                          "typeString": "int_const 100"
                        },
                        "value": "100"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_100_by_1",
                          "typeString": "int_const 100"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "hexValue": "3130",
                            "id": 233,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2662:2:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_10_by_1",
                              "typeString": "int_const 10"
                            },
                            "value": "10"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_10_by_1",
                              "typeString": "int_const 10"
                            }
                          ],
                          "expression": {
                            "id": 231,
                            "name": "investedAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 157,
                            "src": "2643:14:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 232,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "mul",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 3001,
                          "src": "2643:18:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                            "typeString": "function (uint256,uint256) pure returns (uint256)"
                          }
                        },
                        "id": 234,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2643:22:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 235,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "div",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3016,
                      "src": "2643:26:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 237,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2643:31:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2612:62:0"
                },
                {
                  "condition": {
                    "expression": {
                      "baseExpression": {
                        "id": 239,
                        "name": "usersData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 48,
                        "src": "2689:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserData_$43_storage_$",
                          "typeString": "mapping(address => struct Investment.UserData storage ref)"
                        }
                      },
                      "id": 242,
                      "indexExpression": {
                        "expression": {
                          "id": 240,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "2699:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 241,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2699:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "2689:21:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_UserData_$43_storage",
                        "typeString": "struct Investment.UserData storage ref"
                      }
                    },
                    "id": 243,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "usersDataExists",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 42,
                    "src": "2689:37:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 428,
                    "nodeType": "Block",
                    "src": "4609:555:0",
                    "statements": [
                      {
                        "expression": {
                          "id": 426,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 403,
                              "name": "usersData",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 48,
                              "src": "4623:9:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserData_$43_storage_$",
                                "typeString": "mapping(address => struct Investment.UserData storage ref)"
                              }
                            },
                            "id": 406,
                            "indexExpression": {
                              "expression": {
                                "id": 404,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "4633:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 405,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "4633:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "4623:21:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_UserData_$43_storage",
                              "typeString": "struct Investment.UserData storage ref"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "expression": {
                                      "id": 410,
                                      "name": "msg",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 4294967281,
                                      "src": "4695:3:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_message",
                                        "typeString": "msg"
                                      }
                                    },
                                    "id": 411,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "sender",
                                    "nodeType": "MemberAccess",
                                    "src": "4695:10:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 409,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "4687:8:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_payable_$",
                                    "typeString": "type(address payable)"
                                  },
                                  "typeName": {
                                    "id": 408,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "4687:8:0",
                                    "stateMutability": "payable",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 412,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "4687:19:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              },
                              {
                                "id": 413,
                                "name": "investedAmount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 157,
                                "src": "4740:14:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "id": 414,
                                "name": "reserveContractAmount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 220,
                                "src": "4787:21:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "id": 415,
                                "name": "liquidityContractAmount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 230,
                                "src": "4843:23:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "id": 416,
                                "name": "totalTokenAmount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 213,
                                "src": "4902:16:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "id": 417,
                                "name": "totalTokenAmount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 213,
                                "src": "4956:16:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "expression": {
                                  "id": 418,
                                  "name": "block",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967292,
                                  "src": "5015:5:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_block",
                                    "typeString": "block"
                                  }
                                },
                                "id": 419,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "timestamp",
                                "nodeType": "MemberAccess",
                                "src": "5015:15:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 423,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "expression": {
                                    "id": 420,
                                    "name": "block",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 4294967292,
                                    "src": "5071:5:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_block",
                                      "typeString": "block"
                                    }
                                  },
                                  "id": 421,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "timestamp",
                                  "nodeType": "MemberAccess",
                                  "src": "5071:15:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "+",
                                "rightExpression": {
                                  "hexValue": "3135",
                                  "id": 422,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "5089:10:0",
                                  "subdenomination": "minutes",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_900_by_1",
                                    "typeString": "int_const 900"
                                  },
                                  "value": "15"
                                },
                                "src": "5071:28:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "hexValue": "74727565",
                                "id": 424,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "bool",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "5134:4:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                "value": "true"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              ],
                              "id": 407,
                              "name": "UserData",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 43,
                              "src": "4647:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_struct$_UserData_$43_storage_ptr_$",
                                "typeString": "type(struct Investment.UserData storage pointer)"
                              }
                            },
                            "id": 425,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "structConstructorCall",
                            "lValueRequested": false,
                            "names": [
                              "userAddress",
                              "investedAmount",
                              "reserveAmount",
                              "liquidityAmount",
                              "totalTokenAmount",
                              "currentTokenAmount",
                              "investmenstStartingTime",
                              "investmenstEndingTime",
                              "usersDataExists"
                            ],
                            "nodeType": "FunctionCall",
                            "src": "4647:506:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_UserData_$43_memory_ptr",
                              "typeString": "struct Investment.UserData memory"
                            }
                          },
                          "src": "4623:530:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_UserData_$43_storage",
                            "typeString": "struct Investment.UserData storage ref"
                          }
                        },
                        "id": 427,
                        "nodeType": "ExpressionStatement",
                        "src": "4623:530:0"
                      }
                    ]
                  },
                  "id": 429,
                  "nodeType": "IfStatement",
                  "src": "2685:2479:0",
                  "trueBody": {
                    "id": 402,
                    "nodeType": "Block",
                    "src": "2728:1875:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "id": 283,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "components": [
                                  {
                                    "commonType": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    },
                                    "id": 261,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "components": [
                                        {
                                          "commonType": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          },
                                          "id": 251,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "leftExpression": {
                                            "expression": {
                                              "baseExpression": {
                                                "id": 245,
                                                "name": "usersData",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 48,
                                                "src": "2815:9:0",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserData_$43_storage_$",
                                                  "typeString": "mapping(address => struct Investment.UserData storage ref)"
                                                }
                                              },
                                              "id": 248,
                                              "indexExpression": {
                                                "expression": {
                                                  "id": 246,
                                                  "name": "msg",
                                                  "nodeType": "Identifier",
                                                  "overloadedDeclarations": [],
                                                  "referencedDeclaration": 4294967281,
                                                  "src": "2825:3:0",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_magic_message",
                                                    "typeString": "msg"
                                                  }
                                                },
                                                "id": 247,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "memberName": "sender",
                                                "nodeType": "MemberAccess",
                                                "src": "2825:10:0",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_address",
                                                  "typeString": "address"
                                                }
                                              },
                                              "isConstant": false,
                                              "isLValue": true,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "nodeType": "IndexAccess",
                                              "src": "2815:21:0",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_struct$_UserData_$43_storage",
                                                "typeString": "struct Investment.UserData storage ref"
                                              }
                                            },
                                            "id": 249,
                                            "isConstant": false,
                                            "isLValue": true,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberName": "investmenstStartingTime",
                                            "nodeType": "MemberAccess",
                                            "referencedDeclaration": 38,
                                            "src": "2815:45:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "nodeType": "BinaryOperation",
                                          "operator": "==",
                                          "rightExpression": {
                                            "hexValue": "30",
                                            "id": 250,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "kind": "number",
                                            "lValueRequested": false,
                                            "nodeType": "Literal",
                                            "src": "2864:1:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_rational_0_by_1",
                                              "typeString": "int_const 0"
                                            },
                                            "value": "0"
                                          },
                                          "src": "2815:50:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_bool",
                                            "typeString": "bool"
                                          }
                                        }
                                      ],
                                      "id": 252,
                                      "isConstant": false,
                                      "isInlineArray": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "TupleExpression",
                                      "src": "2789:98:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "&&",
                                    "rightExpression": {
                                      "components": [
                                        {
                                          "commonType": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          },
                                          "id": 259,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "leftExpression": {
                                            "expression": {
                                              "baseExpression": {
                                                "id": 253,
                                                "name": "usersData",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 48,
                                                "src": "2917:9:0",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserData_$43_storage_$",
                                                  "typeString": "mapping(address => struct Investment.UserData storage ref)"
                                                }
                                              },
                                              "id": 256,
                                              "indexExpression": {
                                                "expression": {
                                                  "id": 254,
                                                  "name": "msg",
                                                  "nodeType": "Identifier",
                                                  "overloadedDeclarations": [],
                                                  "referencedDeclaration": 4294967281,
                                                  "src": "2927:3:0",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_magic_message",
                                                    "typeString": "msg"
                                                  }
                                                },
                                                "id": 255,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "memberName": "sender",
                                                "nodeType": "MemberAccess",
                                                "src": "2927:10:0",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_address",
                                                  "typeString": "address"
                                                }
                                              },
                                              "isConstant": false,
                                              "isLValue": true,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "nodeType": "IndexAccess",
                                              "src": "2917:21:0",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_struct$_UserData_$43_storage",
                                                "typeString": "struct Investment.UserData storage ref"
                                              }
                                            },
                                            "id": 257,
                                            "isConstant": false,
                                            "isLValue": true,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberName": "investmenstEndingTime",
                                            "nodeType": "MemberAccess",
                                            "referencedDeclaration": 40,
                                            "src": "2917:43:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "nodeType": "BinaryOperation",
                                          "operator": "==",
                                          "rightExpression": {
                                            "hexValue": "30",
                                            "id": 258,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "kind": "number",
                                            "lValueRequested": false,
                                            "nodeType": "Literal",
                                            "src": "2964:1:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_rational_0_by_1",
                                              "typeString": "int_const 0"
                                            },
                                            "value": "0"
                                          },
                                          "src": "2917:48:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_bool",
                                            "typeString": "bool"
                                          }
                                        }
                                      ],
                                      "id": 260,
                                      "isConstant": false,
                                      "isInlineArray": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "TupleExpression",
                                      "src": "2891:96:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    },
                                    "src": "2789:198:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  }
                                ],
                                "id": 262,
                                "isConstant": false,
                                "isInlineArray": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "TupleExpression",
                                "src": "2767:238:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "||",
                              "rightExpression": {
                                "components": [
                                  {
                                    "commonType": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    },
                                    "id": 281,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "components": [
                                        {
                                          "commonType": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          },
                                          "id": 270,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "leftExpression": {
                                            "expression": {
                                              "baseExpression": {
                                                "id": 263,
                                                "name": "usersData",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 48,
                                                "src": "3057:9:0",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserData_$43_storage_$",
                                                  "typeString": "mapping(address => struct Investment.UserData storage ref)"
                                                }
                                              },
                                              "id": 266,
                                              "indexExpression": {
                                                "expression": {
                                                  "id": 264,
                                                  "name": "msg",
                                                  "nodeType": "Identifier",
                                                  "overloadedDeclarations": [],
                                                  "referencedDeclaration": 4294967281,
                                                  "src": "3067:3:0",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_magic_message",
                                                    "typeString": "msg"
                                                  }
                                                },
                                                "id": 265,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "memberName": "sender",
                                                "nodeType": "MemberAccess",
                                                "src": "3067:10:0",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_address",
                                                  "typeString": "address"
                                                }
                                              },
                                              "isConstant": false,
                                              "isLValue": true,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "nodeType": "IndexAccess",
                                              "src": "3057:21:0",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_struct$_UserData_$43_storage",
                                                "typeString": "struct Investment.UserData storage ref"
                                              }
                                            },
                                            "id": 267,
                                            "isConstant": false,
                                            "isLValue": true,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberName": "investmenstStartingTime",
                                            "nodeType": "MemberAccess",
                                            "referencedDeclaration": 38,
                                            "src": "3057:45:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "nodeType": "BinaryOperation",
                                          "operator": "<",
                                          "rightExpression": {
                                            "expression": {
                                              "id": 268,
                                              "name": "block",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 4294967292,
                                              "src": "3105:5:0",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_magic_block",
                                                "typeString": "block"
                                              }
                                            },
                                            "id": 269,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberName": "timestamp",
                                            "nodeType": "MemberAccess",
                                            "src": "3105:15:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "src": "3057:63:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_bool",
                                            "typeString": "bool"
                                          }
                                        }
                                      ],
                                      "id": 271,
                                      "isConstant": false,
                                      "isInlineArray": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "TupleExpression",
                                      "src": "3031:111:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "&&",
                                    "rightExpression": {
                                      "components": [
                                        {
                                          "commonType": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          },
                                          "id": 279,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "leftExpression": {
                                            "expression": {
                                              "baseExpression": {
                                                "id": 272,
                                                "name": "usersData",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 48,
                                                "src": "3172:9:0",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserData_$43_storage_$",
                                                  "typeString": "mapping(address => struct Investment.UserData storage ref)"
                                                }
                                              },
                                              "id": 275,
                                              "indexExpression": {
                                                "expression": {
                                                  "id": 273,
                                                  "name": "msg",
                                                  "nodeType": "Identifier",
                                                  "overloadedDeclarations": [],
                                                  "referencedDeclaration": 4294967281,
                                                  "src": "3182:3:0",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_magic_message",
                                                    "typeString": "msg"
                                                  }
                                                },
                                                "id": 274,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "memberName": "sender",
                                                "nodeType": "MemberAccess",
                                                "src": "3182:10:0",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_address",
                                                  "typeString": "address"
                                                }
                                              },
                                              "isConstant": false,
                                              "isLValue": true,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "nodeType": "IndexAccess",
                                              "src": "3172:21:0",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_struct$_UserData_$43_storage",
                                                "typeString": "struct Investment.UserData storage ref"
                                              }
                                            },
                                            "id": 276,
                                            "isConstant": false,
                                            "isLValue": true,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberName": "investmenstEndingTime",
                                            "nodeType": "MemberAccess",
                                            "referencedDeclaration": 40,
                                            "src": "3172:43:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "nodeType": "BinaryOperation",
                                          "operator": "<",
                                          "rightExpression": {
                                            "expression": {
                                              "id": 277,
                                              "name": "block",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 4294967292,
                                              "src": "3218:5:0",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_magic_block",
                                                "typeString": "block"
                                              }
                                            },
                                            "id": 278,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberName": "timestamp",
                                            "nodeType": "MemberAccess",
                                            "src": "3218:15:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "src": "3172:61:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_bool",
                                            "typeString": "bool"
                                          }
                                        }
                                      ],
                                      "id": 280,
                                      "isConstant": false,
                                      "isInlineArray": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "TupleExpression",
                                      "src": "3146:109:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    },
                                    "src": "3031:224:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  }
                                ],
                                "id": 282,
                                "isConstant": false,
                                "isInlineArray": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "TupleExpression",
                                "src": "3009:264:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "src": "2767:506:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "596f757220696e766573746d656e7420616d6f756e7420616e642074686520746f6b656e7320617265207374696c6c206c6f636b656420696e2074686520636f6e74726163742e20506c656173652074727920616674657220736f6d6574696d65",
                              "id": 284,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3291:99:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_aec42c1ce9dddda4486122c20f9aafe2878af3cd4001dcbfa06022838e326b85",
                                "typeString": "literal_string \"Your investment amount and the tokens are still locked in the contract. Please try after sometime\""
                              },
                              "value": "Your investment amount and the tokens are still locked in the contract. Please try after sometime"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_aec42c1ce9dddda4486122c20f9aafe2878af3cd4001dcbfa06022838e326b85",
                                "typeString": "literal_string \"Your investment amount and the tokens are still locked in the contract. Please try after sometime\""
                              }
                            ],
                            "id": 244,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              4294967278,
                              4294967278
                            ],
                            "referencedDeclaration": 4294967278,
                            "src": "2742:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 285,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2742:662:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 286,
                        "nodeType": "ExpressionStatement",
                        "src": "2742:662:0"
                      },
                      {
                        "assignments": [
                          288
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 288,
                            "mutability": "mutable",
                            "name": "userInvestedAmount",
                            "nameLocation": "3424:18:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 402,
                            "src": "3419:23:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 287,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "3419:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 294,
                        "initialValue": {
                          "expression": {
                            "baseExpression": {
                              "id": 289,
                              "name": "usersData",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 48,
                              "src": "3445:9:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserData_$43_storage_$",
                                "typeString": "mapping(address => struct Investment.UserData storage ref)"
                              }
                            },
                            "id": 292,
                            "indexExpression": {
                              "expression": {
                                "id": 290,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "3455:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 291,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "3455:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "3445:21:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_UserData_$43_storage",
                              "typeString": "struct Investment.UserData storage ref"
                            }
                          },
                          "id": 293,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "investedAmount",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 28,
                          "src": "3445:36:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "3419:62:0"
                      },
                      {
                        "assignments": [
                          296
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 296,
                            "mutability": "mutable",
                            "name": "userReservedAmount",
                            "nameLocation": "3500:18:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 402,
                            "src": "3495:23:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 295,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "3495:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 302,
                        "initialValue": {
                          "expression": {
                            "baseExpression": {
                              "id": 297,
                              "name": "usersData",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 48,
                              "src": "3521:9:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserData_$43_storage_$",
                                "typeString": "mapping(address => struct Investment.UserData storage ref)"
                              }
                            },
                            "id": 300,
                            "indexExpression": {
                              "expression": {
                                "id": 298,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "3531:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 299,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "3531:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "3521:21:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_UserData_$43_storage",
                              "typeString": "struct Investment.UserData storage ref"
                            }
                          },
                          "id": 301,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "reserveAmount",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 30,
                          "src": "3521:35:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "3495:61:0"
                      },
                      {
                        "assignments": [
                          304
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 304,
                            "mutability": "mutable",
                            "name": "userLiquidityAmount",
                            "nameLocation": "3575:19:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 402,
                            "src": "3570:24:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 303,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "3570:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 310,
                        "initialValue": {
                          "expression": {
                            "baseExpression": {
                              "id": 305,
                              "name": "usersData",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 48,
                              "src": "3597:9:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserData_$43_storage_$",
                                "typeString": "mapping(address => struct Investment.UserData storage ref)"
                              }
                            },
                            "id": 308,
                            "indexExpression": {
                              "expression": {
                                "id": 306,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "3607:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 307,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "3607:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "3597:21:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_UserData_$43_storage",
                              "typeString": "struct Investment.UserData storage ref"
                            }
                          },
                          "id": 309,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "liquidityAmount",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 32,
                          "src": "3597:37:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "3570:64:0"
                      },
                      {
                        "assignments": [
                          312
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 312,
                            "mutability": "mutable",
                            "name": "userTokenAmount",
                            "nameLocation": "3653:15:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 402,
                            "src": "3648:20:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 311,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "3648:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 318,
                        "initialValue": {
                          "expression": {
                            "baseExpression": {
                              "id": 313,
                              "name": "usersData",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 48,
                              "src": "3671:9:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserData_$43_storage_$",
                                "typeString": "mapping(address => struct Investment.UserData storage ref)"
                              }
                            },
                            "id": 316,
                            "indexExpression": {
                              "expression": {
                                "id": 314,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "3681:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 315,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "3681:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "3671:21:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_UserData_$43_storage",
                              "typeString": "struct Investment.UserData storage ref"
                            }
                          },
                          "id": 317,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "totalTokenAmount",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 34,
                          "src": "3671:38:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "3648:61:0"
                      },
                      {
                        "assignments": [
                          320
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 320,
                            "mutability": "mutable",
                            "name": "userCurrentTokenAmount",
                            "nameLocation": "3728:22:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 402,
                            "src": "3723:27:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 319,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "3723:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 326,
                        "initialValue": {
                          "expression": {
                            "baseExpression": {
                              "id": 321,
                              "name": "usersData",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 48,
                              "src": "3753:9:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserData_$43_storage_$",
                                "typeString": "mapping(address => struct Investment.UserData storage ref)"
                              }
                            },
                            "id": 324,
                            "indexExpression": {
                              "expression": {
                                "id": 322,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "3763:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 323,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "3763:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "3753:21:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_UserData_$43_storage",
                              "typeString": "struct Investment.UserData storage ref"
                            }
                          },
                          "id": 325,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "currentTokenAmount",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 36,
                          "src": "3753:40:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "3723:70:0"
                      },
                      {
                        "expression": {
                          "id": 336,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "baseExpression": {
                                "id": 327,
                                "name": "usersData",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 48,
                                "src": "3808:9:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserData_$43_storage_$",
                                  "typeString": "mapping(address => struct Investment.UserData storage ref)"
                                }
                              },
                              "id": 330,
                              "indexExpression": {
                                "expression": {
                                  "id": 328,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967281,
                                  "src": "3818:3:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 329,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "3818:10:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "3808:21:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_UserData_$43_storage",
                                "typeString": "struct Investment.UserData storage ref"
                              }
                            },
                            "id": 331,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "investedAmount",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 28,
                            "src": "3808:36:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 334,
                                "name": "investedAmount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 157,
                                "src": "3887:14:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "id": 332,
                                "name": "userInvestedAmount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 288,
                                "src": "3847:18:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 333,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "add",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 2971,
                              "src": "3847:22:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                "typeString": "function (uint256,uint256) pure returns (uint256)"
                              }
                            },
                            "id": 335,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3847:68:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "3808:107:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 337,
                        "nodeType": "ExpressionStatement",
                        "src": "3808:107:0"
                      },
                      {
                        "expression": {
                          "id": 347,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "baseExpression": {
                                "id": 338,
                                "name": "usersData",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 48,
                                "src": "3929:9:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserData_$43_storage_$",
                                  "typeString": "mapping(address => struct Investment.UserData storage ref)"
                                }
                              },
                              "id": 341,
                              "indexExpression": {
                                "expression": {
                                  "id": 339,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967281,
                                  "src": "3939:3:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 340,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "3939:10:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "3929:21:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_UserData_$43_storage",
                                "typeString": "struct Investment.UserData storage ref"
                              }
                            },
                            "id": 342,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "reserveAmount",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 30,
                            "src": "3929:35:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 345,
                                "name": "reserveContractAmount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 220,
                                "src": "4007:21:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "id": 343,
                                "name": "userReservedAmount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 296,
                                "src": "3967:18:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 344,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "add",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 2971,
                              "src": "3967:22:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                "typeString": "function (uint256,uint256) pure returns (uint256)"
                              }
                            },
                            "id": 346,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3967:75:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "3929:113:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 348,
                        "nodeType": "ExpressionStatement",
                        "src": "3929:113:0"
                      },
                      {
                        "expression": {
                          "id": 358,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "baseExpression": {
                                "id": 349,
                                "name": "usersData",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 48,
                                "src": "4056:9:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserData_$43_storage_$",
                                  "typeString": "mapping(address => struct Investment.UserData storage ref)"
                                }
                              },
                              "id": 352,
                              "indexExpression": {
                                "expression": {
                                  "id": 350,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967281,
                                  "src": "4066:3:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 351,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "4066:10:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "4056:21:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_UserData_$43_storage",
                                "typeString": "struct Investment.UserData storage ref"
                              }
                            },
                            "id": 353,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "liquidityAmount",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 32,
                            "src": "4056:37:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 356,
                                "name": "liquidityContractAmount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 230,
                                "src": "4137:23:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "id": 354,
                                "name": "userLiquidityAmount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 304,
                                "src": "4096:19:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 355,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "add",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 2971,
                              "src": "4096:23:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                "typeString": "function (uint256,uint256) pure returns (uint256)"
                              }
                            },
                            "id": 357,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4096:78:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "4056:118:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 359,
                        "nodeType": "ExpressionStatement",
                        "src": "4056:118:0"
                      },
                      {
                        "expression": {
                          "id": 369,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "baseExpression": {
                                "id": 360,
                                "name": "usersData",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 48,
                                "src": "4188:9:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserData_$43_storage_$",
                                  "typeString": "mapping(address => struct Investment.UserData storage ref)"
                                }
                              },
                              "id": 363,
                              "indexExpression": {
                                "expression": {
                                  "id": 361,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967281,
                                  "src": "4198:3:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 362,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "4198:10:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "4188:21:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_UserData_$43_storage",
                                "typeString": "struct Investment.UserData storage ref"
                              }
                            },
                            "id": 364,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "totalTokenAmount",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 34,
                            "src": "4188:38:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 367,
                                "name": "totalTokenAmount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 213,
                                "src": "4266:16:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "id": 365,
                                "name": "userTokenAmount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 312,
                                "src": "4229:15:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 366,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "add",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 2971,
                              "src": "4229:19:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                "typeString": "function (uint256,uint256) pure returns (uint256)"
                              }
                            },
                            "id": 368,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4229:67:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "4188:108:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 370,
                        "nodeType": "ExpressionStatement",
                        "src": "4188:108:0"
                      },
                      {
                        "expression": {
                          "id": 380,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "baseExpression": {
                                "id": 371,
                                "name": "usersData",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 48,
                                "src": "4310:9:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserData_$43_storage_$",
                                  "typeString": "mapping(address => struct Investment.UserData storage ref)"
                                }
                              },
                              "id": 374,
                              "indexExpression": {
                                "expression": {
                                  "id": 372,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967281,
                                  "src": "4320:3:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 373,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "4320:10:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "4310:21:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_UserData_$43_storage",
                                "typeString": "struct Investment.UserData storage ref"
                              }
                            },
                            "id": 375,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "currentTokenAmount",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 36,
                            "src": "4310:40:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 378,
                                "name": "totalTokenAmount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 213,
                                "src": "4397:16:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "id": 376,
                                "name": "userCurrentTokenAmount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 320,
                                "src": "4353:22:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 377,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "add",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 2971,
                              "src": "4353:26:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                "typeString": "function (uint256,uint256) pure returns (uint256)"
                              }
                            },
                            "id": 379,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4353:74:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "4310:117:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 381,
                        "nodeType": "ExpressionStatement",
                        "src": "4310:117:0"
                      },
                      {
                        "expression": {
                          "id": 389,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "baseExpression": {
                                "id": 382,
                                "name": "usersData",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 48,
                                "src": "4441:9:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserData_$43_storage_$",
                                  "typeString": "mapping(address => struct Investment.UserData storage ref)"
                                }
                              },
                              "id": 385,
                              "indexExpression": {
                                "expression": {
                                  "id": 383,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967281,
                                  "src": "4451:3:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 384,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "4451:10:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "4441:21:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_UserData_$43_storage",
                                "typeString": "struct Investment.UserData storage ref"
                              }
                            },
                            "id": 386,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "investmenstStartingTime",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 38,
                            "src": "4441:45:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "expression": {
                              "id": 387,
                              "name": "block",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967292,
                              "src": "4489:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_block",
                                "typeString": "block"
                              }
                            },
                            "id": 388,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "timestamp",
                            "nodeType": "MemberAccess",
                            "src": "4489:15:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "4441:63:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 390,
                        "nodeType": "ExpressionStatement",
                        "src": "4441:63:0"
                      },
                      {
                        "expression": {
                          "id": 400,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "baseExpression": {
                                "id": 391,
                                "name": "usersData",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 48,
                                "src": "4518:9:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserData_$43_storage_$",
                                  "typeString": "mapping(address => struct Investment.UserData storage ref)"
                                }
                              },
                              "id": 394,
                              "indexExpression": {
                                "expression": {
                                  "id": 392,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967281,
                                  "src": "4528:3:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 393,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "4528:10:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "4518:21:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_UserData_$43_storage",
                                "typeString": "struct Investment.UserData storage ref"
                              }
                            },
                            "id": 395,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "investmenstEndingTime",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 40,
                            "src": "4518:43:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 399,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "id": 396,
                                "name": "block",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967292,
                                "src": "4564:5:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_block",
                                  "typeString": "block"
                                }
                              },
                              "id": 397,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "timestamp",
                              "nodeType": "MemberAccess",
                              "src": "4564:15:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "+",
                            "rightExpression": {
                              "hexValue": "3135",
                              "id": 398,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4582:10:0",
                              "subdenomination": "minutes",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_900_by_1",
                                "typeString": "int_const 900"
                              },
                              "value": "15"
                            },
                            "src": "4564:28:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "4518:74:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 401,
                        "nodeType": "ExpressionStatement",
                        "src": "4518:74:0"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 435,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 430,
                      "name": "totalMindapayTokenAmount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24,
                      "src": "5174:24:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 433,
                          "name": "totalTokenAmount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 213,
                          "src": "5230:16:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "id": 431,
                          "name": "totalMindapayTokenAmount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 24,
                          "src": "5201:24:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 432,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "add",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 2971,
                        "src": "5201:28:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 434,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5201:46:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5174:73:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 436,
                  "nodeType": "ExpressionStatement",
                  "src": "5174:73:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 442,
                        "name": "reserveContractAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 220,
                        "src": "5299:21:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 439,
                            "name": "reserveContractAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 20,
                            "src": "5266:22:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          ],
                          "id": 438,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "5258:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_payable_$",
                            "typeString": "type(address payable)"
                          },
                          "typeName": {
                            "id": 437,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "5258:8:0",
                            "stateMutability": "payable",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 440,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5258:31:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 441,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "src": "5258:40:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 443,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5258:63:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 444,
                  "nodeType": "ExpressionStatement",
                  "src": "5258:63:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 450,
                        "name": "liquidityContractAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 230,
                        "src": "5375:23:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 447,
                            "name": "liquidityContractAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 18,
                            "src": "5340:24:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 446,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "5332:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_payable_$",
                            "typeString": "type(address payable)"
                          },
                          "typeName": {
                            "id": 445,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "5332:8:0",
                            "stateMutability": "payable",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 448,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5332:33:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 449,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "src": "5332:42:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 451,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5332:67:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 452,
                  "nodeType": "ExpressionStatement",
                  "src": "5332:67:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 457,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "5465:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 458,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "5465:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 459,
                        "name": "totalTokenAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 213,
                        "src": "5489:16:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 454,
                            "name": "mindpayContractAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 16,
                            "src": "5418:22:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 453,
                          "name": "Mindpay",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1039,
                          "src": "5410:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_Mindpay_$1039_$",
                            "typeString": "type(contract Mindpay)"
                          }
                        },
                        "id": 455,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5410:31:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Mindpay_$1039",
                          "typeString": "contract Mindpay"
                        }
                      },
                      "id": 456,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "mintToken",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 965,
                      "src": "5410:41:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 460,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5410:105:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 461,
                  "nodeType": "ExpressionStatement",
                  "src": "5410:105:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 466,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "5584:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 467,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "5584:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 468,
                        "name": "totalTokenAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 213,
                        "src": "5608:16:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 463,
                            "name": "mindpayContractAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 16,
                            "src": "5534:22:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 462,
                          "name": "Mindpay",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1039,
                          "src": "5526:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_Mindpay_$1039_$",
                            "typeString": "type(contract Mindpay)"
                          }
                        },
                        "id": 464,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5526:31:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Mindpay_$1039",
                          "typeString": "contract Mindpay"
                        }
                      },
                      "id": 465,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "approveOwner",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 983,
                      "src": "5526:44:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 469,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5526:108:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 470,
                  "nodeType": "ExpressionStatement",
                  "src": "5526:108:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 475,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "5702:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 476,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "5702:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 477,
                        "name": "reserveContractAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 20,
                        "src": "5726:22:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "id": 478,
                        "name": "totalTokenAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 213,
                        "src": "5762:16:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 472,
                            "name": "mindpayContractAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 16,
                            "src": "5652:22:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 471,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2453,
                          "src": "5645:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$2453_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 473,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5645:30:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$2453",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 474,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2452,
                      "src": "5645:43:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,address,uint256) external returns (bool)"
                      }
                    },
                    "id": 479,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5645:143:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 480,
                  "nodeType": "ExpressionStatement",
                  "src": "5645:143:0"
                }
              ]
            },
            "functionSelector": "0311904c",
            "id": 482,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 144,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 143,
                  "name": "nonReentrant",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1788,
                  "src": "1955:12:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "1955:12:0"
              },
              {
                "id": 146,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 145,
                  "name": "onlyNonContract",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 70,
                  "src": "1968:15:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "1968:15:0"
              }
            ],
            "name": "investAmount",
            "nameLocation": "1925:12:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 142,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1937:2:0"
            },
            "returnParameters": {
              "id": 147,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1984:0:0"
            },
            "scope": 890,
            "src": "1916:3879:0",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 631,
              "nodeType": "Block",
              "src": "5865:1551:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 496,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 490,
                              "name": "usersData",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 48,
                              "src": "5896:9:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserData_$43_storage_$",
                                "typeString": "mapping(address => struct Investment.UserData storage ref)"
                              }
                            },
                            "id": 493,
                            "indexExpression": {
                              "expression": {
                                "id": 491,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "5906:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 492,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "5906:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "5896:21:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_UserData_$43_storage",
                              "typeString": "struct Investment.UserData storage ref"
                            }
                          },
                          "id": 494,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "usersDataExists",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 42,
                          "src": "5896:37:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "74727565",
                          "id": 495,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5937:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "src": "5896:45:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "54686973207573657220686176656e277420696e7665737465642e",
                        "id": 497,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5955:29:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_0c5c1e09cc10c1cfe803bee63ef8ca773d05af7b92cad77f46d245f61810f451",
                          "typeString": "literal_string \"This user haven't invested.\""
                        },
                        "value": "This user haven't invested."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_0c5c1e09cc10c1cfe803bee63ef8ca773d05af7b92cad77f46d245f61810f451",
                          "typeString": "literal_string \"This user haven't invested.\""
                        }
                      ],
                      "id": 489,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "5875:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 498,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5875:119:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 499,
                  "nodeType": "ExpressionStatement",
                  "src": "5875:119:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 507,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 501,
                              "name": "usersData",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 48,
                              "src": "6026:9:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserData_$43_storage_$",
                                "typeString": "mapping(address => struct Investment.UserData storage ref)"
                              }
                            },
                            "id": 504,
                            "indexExpression": {
                              "expression": {
                                "id": 502,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "6036:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 503,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "6036:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "6026:21:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_UserData_$43_storage",
                              "typeString": "struct Investment.UserData storage ref"
                            }
                          },
                          "id": 505,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "investedAmount",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 28,
                          "src": "6026:36:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 506,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "6065:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "6026:40:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "54686973207573657220616c72656164792063616e63656c6c65642f7374616b65642074686520696e766573746d656e742e",
                        "id": 508,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6080:52:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b73296ac4dcc1eeb2e3709cf83c39c8ff249a0111b1de95ed340534f05b4e17d",
                          "typeString": "literal_string \"This user already cancelled/staked the investment.\""
                        },
                        "value": "This user already cancelled/staked the investment."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b73296ac4dcc1eeb2e3709cf83c39c8ff249a0111b1de95ed340534f05b4e17d",
                          "typeString": "literal_string \"This user already cancelled/staked the investment.\""
                        }
                      ],
                      "id": 500,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "6005:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 509,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6005:137:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 510,
                  "nodeType": "ExpressionStatement",
                  "src": "6005:137:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 528,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "components": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 518,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "baseExpression": {
                                    "id": 512,
                                    "name": "usersData",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 48,
                                    "src": "6192:9:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserData_$43_storage_$",
                                      "typeString": "mapping(address => struct Investment.UserData storage ref)"
                                    }
                                  },
                                  "id": 515,
                                  "indexExpression": {
                                    "expression": {
                                      "id": 513,
                                      "name": "msg",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 4294967281,
                                      "src": "6202:3:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_message",
                                        "typeString": "msg"
                                      }
                                    },
                                    "id": 514,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "sender",
                                    "nodeType": "MemberAccess",
                                    "src": "6202:10:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "6192:21:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_UserData_$43_storage",
                                    "typeString": "struct Investment.UserData storage ref"
                                  }
                                },
                                "id": 516,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "investmenstStartingTime",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 38,
                                "src": "6192:45:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "hexValue": "30",
                                "id": 517,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "6241:1:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "src": "6192:50:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            }
                          ],
                          "id": 519,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "6174:82:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "components": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 526,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "baseExpression": {
                                    "id": 520,
                                    "name": "usersData",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 48,
                                    "src": "6278:9:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserData_$43_storage_$",
                                      "typeString": "mapping(address => struct Investment.UserData storage ref)"
                                    }
                                  },
                                  "id": 523,
                                  "indexExpression": {
                                    "expression": {
                                      "id": 521,
                                      "name": "msg",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 4294967281,
                                      "src": "6288:3:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_message",
                                        "typeString": "msg"
                                      }
                                    },
                                    "id": 522,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "sender",
                                    "nodeType": "MemberAccess",
                                    "src": "6288:10:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "6278:21:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_UserData_$43_storage",
                                    "typeString": "struct Investment.UserData storage ref"
                                  }
                                },
                                "id": 524,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "investmenstEndingTime",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 40,
                                "src": "6278:43:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">=",
                              "rightExpression": {
                                "hexValue": "30",
                                "id": 525,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "6325:1:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "src": "6278:48:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            }
                          ],
                          "id": 527,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "6260:80:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "6174:166:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "596f757220696e766573746d656e7420616d6f756e7420616e642074686520746f6b656e73206172652063757272656e746c79206c6f636b656420696e2074686520636f6e74726163742e20506c656173652074727920616674657220736f6d6574696d65",
                        "id": 529,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6354:103:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_2ef9b708a2c2cd0ef9f899d250f7e371adeca2d47e811e7abdd480f46f4cfcb8",
                          "typeString": "literal_string \"Your investment amount and the tokens are currently locked in the contract. Please try after sometime\""
                        },
                        "value": "Your investment amount and the tokens are currently locked in the contract. Please try after sometime"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_2ef9b708a2c2cd0ef9f899d250f7e371adeca2d47e811e7abdd480f46f4cfcb8",
                          "typeString": "literal_string \"Your investment amount and the tokens are currently locked in the contract. Please try after sometime\""
                        }
                      ],
                      "id": 511,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "6153:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 530,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6153:314:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 531,
                  "nodeType": "ExpressionStatement",
                  "src": "6153:314:0"
                },
                {
                  "assignments": [
                    533
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 533,
                      "mutability": "mutable",
                      "name": "reserveAmount",
                      "nameLocation": "6491:13:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 631,
                      "src": "6486:18:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 532,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "6486:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 539,
                  "initialValue": {
                    "expression": {
                      "baseExpression": {
                        "id": 534,
                        "name": "usersData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 48,
                        "src": "6507:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserData_$43_storage_$",
                          "typeString": "mapping(address => struct Investment.UserData storage ref)"
                        }
                      },
                      "id": 537,
                      "indexExpression": {
                        "expression": {
                          "id": 535,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "6517:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 536,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "6517:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "6507:21:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_UserData_$43_storage",
                        "typeString": "struct Investment.UserData storage ref"
                      }
                    },
                    "id": 538,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "reserveAmount",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 30,
                    "src": "6507:35:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6486:56:0"
                },
                {
                  "assignments": [
                    541
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 541,
                      "mutability": "mutable",
                      "name": "totalTokenAmount",
                      "nameLocation": "6557:16:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 631,
                      "src": "6552:21:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 540,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "6552:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 547,
                  "initialValue": {
                    "expression": {
                      "baseExpression": {
                        "id": 542,
                        "name": "usersData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 48,
                        "src": "6576:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserData_$43_storage_$",
                          "typeString": "mapping(address => struct Investment.UserData storage ref)"
                        }
                      },
                      "id": 545,
                      "indexExpression": {
                        "expression": {
                          "id": 543,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "6586:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 544,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "6586:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "6576:21:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_UserData_$43_storage",
                        "typeString": "struct Investment.UserData storage ref"
                      }
                    },
                    "id": 546,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "totalTokenAmount",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 34,
                    "src": "6576:38:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6552:62:0"
                },
                {
                  "assignments": [
                    549
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 549,
                      "mutability": "mutable",
                      "name": "currentTokenAmount",
                      "nameLocation": "6629:18:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 631,
                      "src": "6624:23:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 548,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "6624:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 555,
                  "initialValue": {
                    "expression": {
                      "baseExpression": {
                        "id": 550,
                        "name": "usersData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 48,
                        "src": "6650:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserData_$43_storage_$",
                          "typeString": "mapping(address => struct Investment.UserData storage ref)"
                        }
                      },
                      "id": 553,
                      "indexExpression": {
                        "expression": {
                          "id": 551,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "6660:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 552,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "6660:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "6650:21:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_UserData_$43_storage",
                        "typeString": "struct Investment.UserData storage ref"
                      }
                    },
                    "id": 554,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "currentTokenAmount",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 36,
                    "src": "6650:40:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6624:66:0"
                },
                {
                  "expression": {
                    "id": 562,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 556,
                          "name": "usersData",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 48,
                          "src": "6701:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserData_$43_storage_$",
                            "typeString": "mapping(address => struct Investment.UserData storage ref)"
                          }
                        },
                        "id": 559,
                        "indexExpression": {
                          "expression": {
                            "id": 557,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "6711:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 558,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "6711:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "6701:21:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_UserData_$43_storage",
                          "typeString": "struct Investment.UserData storage ref"
                        }
                      },
                      "id": 560,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "investedAmount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 28,
                      "src": "6701:36:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "30",
                      "id": 561,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "6740:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "6701:40:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 563,
                  "nodeType": "ExpressionStatement",
                  "src": "6701:40:0"
                },
                {
                  "expression": {
                    "id": 570,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 564,
                          "name": "usersData",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 48,
                          "src": "6751:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserData_$43_storage_$",
                            "typeString": "mapping(address => struct Investment.UserData storage ref)"
                          }
                        },
                        "id": 567,
                        "indexExpression": {
                          "expression": {
                            "id": 565,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "6761:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 566,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "6761:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "6751:21:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_UserData_$43_storage",
                          "typeString": "struct Investment.UserData storage ref"
                        }
                      },
                      "id": 568,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "reserveAmount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 30,
                      "src": "6751:35:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "30",
                      "id": 569,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "6789:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "6751:39:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 571,
                  "nodeType": "ExpressionStatement",
                  "src": "6751:39:0"
                },
                {
                  "expression": {
                    "id": 581,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 572,
                          "name": "usersData",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 48,
                          "src": "6800:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserData_$43_storage_$",
                            "typeString": "mapping(address => struct Investment.UserData storage ref)"
                          }
                        },
                        "id": 575,
                        "indexExpression": {
                          "expression": {
                            "id": 573,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "6810:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 574,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "6810:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "6800:21:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_UserData_$43_storage",
                          "typeString": "struct Investment.UserData storage ref"
                        }
                      },
                      "id": 576,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "totalTokenAmount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 34,
                      "src": "6800:38:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 579,
                          "name": "currentTokenAmount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 549,
                          "src": "6875:18:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "id": 577,
                          "name": "totalTokenAmount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 541,
                          "src": "6841:16:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 578,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sub",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 2986,
                        "src": "6841:20:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 580,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "6841:62:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6800:103:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 582,
                  "nodeType": "ExpressionStatement",
                  "src": "6800:103:0"
                },
                {
                  "expression": {
                    "id": 589,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 583,
                          "name": "usersData",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 48,
                          "src": "6913:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserData_$43_storage_$",
                            "typeString": "mapping(address => struct Investment.UserData storage ref)"
                          }
                        },
                        "id": 586,
                        "indexExpression": {
                          "expression": {
                            "id": 584,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "6923:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 585,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "6923:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "6913:21:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_UserData_$43_storage",
                          "typeString": "struct Investment.UserData storage ref"
                        }
                      },
                      "id": 587,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "currentTokenAmount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 36,
                      "src": "6913:40:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "30",
                      "id": 588,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "6956:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "6913:44:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 590,
                  "nodeType": "ExpressionStatement",
                  "src": "6913:44:0"
                },
                {
                  "expression": {
                    "id": 597,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 591,
                          "name": "usersData",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 48,
                          "src": "6967:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserData_$43_storage_$",
                            "typeString": "mapping(address => struct Investment.UserData storage ref)"
                          }
                        },
                        "id": 594,
                        "indexExpression": {
                          "expression": {
                            "id": 592,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "6977:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 593,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "6977:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "6967:21:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_UserData_$43_storage",
                          "typeString": "struct Investment.UserData storage ref"
                        }
                      },
                      "id": 595,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "investmenstStartingTime",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 38,
                      "src": "6967:45:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "30",
                      "id": 596,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "7015:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "6967:49:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 598,
                  "nodeType": "ExpressionStatement",
                  "src": "6967:49:0"
                },
                {
                  "expression": {
                    "id": 605,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 599,
                          "name": "usersData",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 48,
                          "src": "7026:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserData_$43_storage_$",
                            "typeString": "mapping(address => struct Investment.UserData storage ref)"
                          }
                        },
                        "id": 602,
                        "indexExpression": {
                          "expression": {
                            "id": 600,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "7036:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 601,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "7036:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "7026:21:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_UserData_$43_storage",
                          "typeString": "struct Investment.UserData storage ref"
                        }
                      },
                      "id": 603,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "investmenstEndingTime",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 40,
                      "src": "7026:43:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "30",
                      "id": 604,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "7072:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "7026:47:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 606,
                  "nodeType": "ExpressionStatement",
                  "src": "7026:47:0"
                },
                {
                  "expression": {
                    "id": 612,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 607,
                      "name": "totalMindapayTokenAmount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24,
                      "src": "7084:24:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 610,
                          "name": "currentTokenAmount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 549,
                          "src": "7140:18:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "id": 608,
                          "name": "totalMindapayTokenAmount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 24,
                          "src": "7111:24:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 609,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sub",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 2986,
                        "src": "7111:28:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 611,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "7111:48:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "7084:75:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 613,
                  "nodeType": "ExpressionStatement",
                  "src": "7084:75:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 618,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "7232:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 619,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "7232:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 620,
                        "name": "reserveAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 533,
                        "src": "7256:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 615,
                            "name": "reserveContractAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 20,
                            "src": "7178:22:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          ],
                          "id": 614,
                          "name": "Reserve",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1128,
                          "src": "7170:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_Reserve_$1128_$",
                            "typeString": "type(contract Reserve)"
                          }
                        },
                        "id": 616,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7170:31:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Reserve_$1128",
                          "typeString": "contract Reserve"
                        }
                      },
                      "id": 617,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "returnInvestment",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1095,
                      "src": "7170:48:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 621,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7170:109:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 622,
                  "nodeType": "ExpressionStatement",
                  "src": "7170:109:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 627,
                        "name": "reserveContractAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 20,
                        "src": "7345:22:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "id": 628,
                        "name": "currentTokenAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 549,
                        "src": "7381:18:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 624,
                            "name": "mindpayContractAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 16,
                            "src": "7298:22:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 623,
                          "name": "Mindpay",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1039,
                          "src": "7290:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_Mindpay_$1039_$",
                            "typeString": "type(contract Mindpay)"
                          }
                        },
                        "id": 625,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7290:31:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Mindpay_$1039",
                          "typeString": "contract Mindpay"
                        }
                      },
                      "id": 626,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "burnToken",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1038,
                      "src": "7290:41:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 629,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7290:119:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 630,
                  "nodeType": "ExpressionStatement",
                  "src": "7290:119:0"
                }
              ]
            },
            "functionSelector": "94f8e954",
            "id": 632,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 485,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 484,
                  "name": "nonReentrant",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1788,
                  "src": "5836:12:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "5836:12:0"
              },
              {
                "id": 487,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 486,
                  "name": "onlyNonContract",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 70,
                  "src": "5849:15:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "5849:15:0"
              }
            ],
            "name": "cancelInvestment",
            "nameLocation": "5810:16:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 483,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5826:2:0"
            },
            "returnParameters": {
              "id": 488,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5865:0:0"
            },
            "scope": 890,
            "src": "5801:1615:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 782,
              "nodeType": "Block",
              "src": "7485:1646:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 646,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 640,
                              "name": "usersData",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 48,
                              "src": "7516:9:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserData_$43_storage_$",
                                "typeString": "mapping(address => struct Investment.UserData storage ref)"
                              }
                            },
                            "id": 643,
                            "indexExpression": {
                              "expression": {
                                "id": 641,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "7526:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 642,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "7526:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "7516:21:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_UserData_$43_storage",
                              "typeString": "struct Investment.UserData storage ref"
                            }
                          },
                          "id": 644,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "usersDataExists",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 42,
                          "src": "7516:37:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "74727565",
                          "id": 645,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "7557:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "src": "7516:45:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "54686973207573657220686176656e277420696e7665737465642e",
                        "id": 647,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7575:29:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_0c5c1e09cc10c1cfe803bee63ef8ca773d05af7b92cad77f46d245f61810f451",
                          "typeString": "literal_string \"This user haven't invested.\""
                        },
                        "value": "This user haven't invested."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_0c5c1e09cc10c1cfe803bee63ef8ca773d05af7b92cad77f46d245f61810f451",
                          "typeString": "literal_string \"This user haven't invested.\""
                        }
                      ],
                      "id": 639,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "7495:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 648,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7495:119:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 649,
                  "nodeType": "ExpressionStatement",
                  "src": "7495:119:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 657,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 651,
                              "name": "usersData",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 48,
                              "src": "7646:9:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserData_$43_storage_$",
                                "typeString": "mapping(address => struct Investment.UserData storage ref)"
                              }
                            },
                            "id": 654,
                            "indexExpression": {
                              "expression": {
                                "id": 652,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "7656:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 653,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "7656:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "7646:21:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_UserData_$43_storage",
                              "typeString": "struct Investment.UserData storage ref"
                            }
                          },
                          "id": 655,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "investedAmount",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 28,
                          "src": "7646:36:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 656,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "7685:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "7646:40:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "54686973207573657220616c72656164792063616e63656c6c65642f7374616b65642074686520696e766573746d656e742e",
                        "id": 658,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7700:52:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b73296ac4dcc1eeb2e3709cf83c39c8ff249a0111b1de95ed340534f05b4e17d",
                          "typeString": "literal_string \"This user already cancelled/staked the investment.\""
                        },
                        "value": "This user already cancelled/staked the investment."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b73296ac4dcc1eeb2e3709cf83c39c8ff249a0111b1de95ed340534f05b4e17d",
                          "typeString": "literal_string \"This user already cancelled/staked the investment.\""
                        }
                      ],
                      "id": 650,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "7625:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 659,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7625:137:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 660,
                  "nodeType": "ExpressionStatement",
                  "src": "7625:137:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 678,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "components": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 668,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "baseExpression": {
                                    "id": 662,
                                    "name": "usersData",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 48,
                                    "src": "7812:9:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserData_$43_storage_$",
                                      "typeString": "mapping(address => struct Investment.UserData storage ref)"
                                    }
                                  },
                                  "id": 665,
                                  "indexExpression": {
                                    "expression": {
                                      "id": 663,
                                      "name": "msg",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 4294967281,
                                      "src": "7822:3:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_message",
                                        "typeString": "msg"
                                      }
                                    },
                                    "id": 664,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "sender",
                                    "nodeType": "MemberAccess",
                                    "src": "7822:10:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "7812:21:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_UserData_$43_storage",
                                    "typeString": "struct Investment.UserData storage ref"
                                  }
                                },
                                "id": 666,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "investmenstStartingTime",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 38,
                                "src": "7812:45:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "hexValue": "30",
                                "id": 667,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "7861:1:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "src": "7812:50:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            }
                          ],
                          "id": 669,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "7794:82:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "components": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 676,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "baseExpression": {
                                    "id": 670,
                                    "name": "usersData",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 48,
                                    "src": "7898:9:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserData_$43_storage_$",
                                      "typeString": "mapping(address => struct Investment.UserData storage ref)"
                                    }
                                  },
                                  "id": 673,
                                  "indexExpression": {
                                    "expression": {
                                      "id": 671,
                                      "name": "msg",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 4294967281,
                                      "src": "7908:3:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_message",
                                        "typeString": "msg"
                                      }
                                    },
                                    "id": 672,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "sender",
                                    "nodeType": "MemberAccess",
                                    "src": "7908:10:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "7898:21:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_UserData_$43_storage",
                                    "typeString": "struct Investment.UserData storage ref"
                                  }
                                },
                                "id": 674,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "investmenstEndingTime",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 40,
                                "src": "7898:43:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">=",
                              "rightExpression": {
                                "hexValue": "30",
                                "id": 675,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "7945:1:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "src": "7898:48:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            }
                          ],
                          "id": 677,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "7880:80:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "7794:166:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "596f757220696e766573746d656e7420616d6f756e7420616e642074686520746f6b656e73206172652063757272656e746c79206c6f636b656420696e2074686520636f6e74726163742e20506c656173652074727920616674657220736f6d6574696d65",
                        "id": 679,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7974:103:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_2ef9b708a2c2cd0ef9f899d250f7e371adeca2d47e811e7abdd480f46f4cfcb8",
                          "typeString": "literal_string \"Your investment amount and the tokens are currently locked in the contract. Please try after sometime\""
                        },
                        "value": "Your investment amount and the tokens are currently locked in the contract. Please try after sometime"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_2ef9b708a2c2cd0ef9f899d250f7e371adeca2d47e811e7abdd480f46f4cfcb8",
                          "typeString": "literal_string \"Your investment amount and the tokens are currently locked in the contract. Please try after sometime\""
                        }
                      ],
                      "id": 661,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "7773:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 680,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7773:314:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 681,
                  "nodeType": "ExpressionStatement",
                  "src": "7773:314:0"
                },
                {
                  "assignments": [
                    683
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 683,
                      "mutability": "mutable",
                      "name": "reserveAmount",
                      "nameLocation": "8111:13:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 782,
                      "src": "8106:18:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 682,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "8106:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 689,
                  "initialValue": {
                    "expression": {
                      "baseExpression": {
                        "id": 684,
                        "name": "usersData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 48,
                        "src": "8127:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserData_$43_storage_$",
                          "typeString": "mapping(address => struct Investment.UserData storage ref)"
                        }
                      },
                      "id": 687,
                      "indexExpression": {
                        "expression": {
                          "id": 685,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "8137:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 686,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "8137:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "8127:21:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_UserData_$43_storage",
                        "typeString": "struct Investment.UserData storage ref"
                      }
                    },
                    "id": 688,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "reserveAmount",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 30,
                    "src": "8127:35:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8106:56:0"
                },
                {
                  "assignments": [
                    691
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 691,
                      "mutability": "mutable",
                      "name": "liquidityAmount",
                      "nameLocation": "8177:15:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 782,
                      "src": "8172:20:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 690,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "8172:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 697,
                  "initialValue": {
                    "expression": {
                      "baseExpression": {
                        "id": 692,
                        "name": "usersData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 48,
                        "src": "8195:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserData_$43_storage_$",
                          "typeString": "mapping(address => struct Investment.UserData storage ref)"
                        }
                      },
                      "id": 695,
                      "indexExpression": {
                        "expression": {
                          "id": 693,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "8205:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 694,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "8205:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "8195:21:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_UserData_$43_storage",
                        "typeString": "struct Investment.UserData storage ref"
                      }
                    },
                    "id": 696,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "liquidityAmount",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 32,
                    "src": "8195:37:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8172:60:0"
                },
                {
                  "assignments": [
                    699
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 699,
                      "mutability": "mutable",
                      "name": "currentTokenAmount",
                      "nameLocation": "8247:18:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 782,
                      "src": "8242:23:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 698,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "8242:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 705,
                  "initialValue": {
                    "expression": {
                      "baseExpression": {
                        "id": 700,
                        "name": "usersData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 48,
                        "src": "8268:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserData_$43_storage_$",
                          "typeString": "mapping(address => struct Investment.UserData storage ref)"
                        }
                      },
                      "id": 703,
                      "indexExpression": {
                        "expression": {
                          "id": 701,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "8278:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 702,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "8278:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "8268:21:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_UserData_$43_storage",
                        "typeString": "struct Investment.UserData storage ref"
                      }
                    },
                    "id": 704,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "currentTokenAmount",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 36,
                    "src": "8268:40:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8242:66:0"
                },
                {
                  "expression": {
                    "id": 712,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 706,
                          "name": "usersData",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 48,
                          "src": "8319:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserData_$43_storage_$",
                            "typeString": "mapping(address => struct Investment.UserData storage ref)"
                          }
                        },
                        "id": 709,
                        "indexExpression": {
                          "expression": {
                            "id": 707,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "8329:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 708,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "8329:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "8319:21:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_UserData_$43_storage",
                          "typeString": "struct Investment.UserData storage ref"
                        }
                      },
                      "id": 710,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "investedAmount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 28,
                      "src": "8319:36:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "30",
                      "id": 711,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "8358:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "8319:40:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 713,
                  "nodeType": "ExpressionStatement",
                  "src": "8319:40:0"
                },
                {
                  "expression": {
                    "id": 720,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 714,
                          "name": "usersData",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 48,
                          "src": "8369:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserData_$43_storage_$",
                            "typeString": "mapping(address => struct Investment.UserData storage ref)"
                          }
                        },
                        "id": 717,
                        "indexExpression": {
                          "expression": {
                            "id": 715,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "8379:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 716,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "8379:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "8369:21:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_UserData_$43_storage",
                          "typeString": "struct Investment.UserData storage ref"
                        }
                      },
                      "id": 718,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "reserveAmount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 30,
                      "src": "8369:35:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "30",
                      "id": 719,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "8407:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "8369:39:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 721,
                  "nodeType": "ExpressionStatement",
                  "src": "8369:39:0"
                },
                {
                  "expression": {
                    "id": 731,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 722,
                          "name": "usersData",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 48,
                          "src": "8418:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserData_$43_storage_$",
                            "typeString": "mapping(address => struct Investment.UserData storage ref)"
                          }
                        },
                        "id": 725,
                        "indexExpression": {
                          "expression": {
                            "id": 723,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "8428:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 724,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "8428:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "8418:21:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_UserData_$43_storage",
                          "typeString": "struct Investment.UserData storage ref"
                        }
                      },
                      "id": 726,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "liquidityAmount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 32,
                      "src": "8418:37:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 729,
                          "name": "reserveAmount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 683,
                          "src": "8478:13:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "id": 727,
                          "name": "liquidityAmount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 691,
                          "src": "8458:15:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 728,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "add",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 2971,
                        "src": "8458:19:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 730,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "8458:34:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "8418:74:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 732,
                  "nodeType": "ExpressionStatement",
                  "src": "8418:74:0"
                },
                {
                  "expression": {
                    "id": 739,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 733,
                          "name": "usersData",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 48,
                          "src": "8502:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserData_$43_storage_$",
                            "typeString": "mapping(address => struct Investment.UserData storage ref)"
                          }
                        },
                        "id": 736,
                        "indexExpression": {
                          "expression": {
                            "id": 734,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "8512:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 735,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "8512:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "8502:21:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_UserData_$43_storage",
                          "typeString": "struct Investment.UserData storage ref"
                        }
                      },
                      "id": 737,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "currentTokenAmount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 36,
                      "src": "8502:40:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "30",
                      "id": 738,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "8545:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "8502:44:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 740,
                  "nodeType": "ExpressionStatement",
                  "src": "8502:44:0"
                },
                {
                  "expression": {
                    "id": 747,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 741,
                          "name": "usersData",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 48,
                          "src": "8556:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserData_$43_storage_$",
                            "typeString": "mapping(address => struct Investment.UserData storage ref)"
                          }
                        },
                        "id": 744,
                        "indexExpression": {
                          "expression": {
                            "id": 742,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "8566:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 743,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "8566:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "8556:21:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_UserData_$43_storage",
                          "typeString": "struct Investment.UserData storage ref"
                        }
                      },
                      "id": 745,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "investmenstStartingTime",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 38,
                      "src": "8556:45:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "30",
                      "id": 746,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "8604:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "8556:49:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 748,
                  "nodeType": "ExpressionStatement",
                  "src": "8556:49:0"
                },
                {
                  "expression": {
                    "id": 755,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 749,
                          "name": "usersData",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 48,
                          "src": "8615:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserData_$43_storage_$",
                            "typeString": "mapping(address => struct Investment.UserData storage ref)"
                          }
                        },
                        "id": 752,
                        "indexExpression": {
                          "expression": {
                            "id": 750,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "8625:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 751,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "8625:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "8615:21:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_UserData_$43_storage",
                          "typeString": "struct Investment.UserData storage ref"
                        }
                      },
                      "id": 753,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "investmenstEndingTime",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 40,
                      "src": "8615:43:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "30",
                      "id": 754,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "8661:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "8615:47:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 756,
                  "nodeType": "ExpressionStatement",
                  "src": "8615:47:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 761,
                        "name": "liquidityContractAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 18,
                        "src": "8738:24:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 762,
                        "name": "reserveAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 683,
                        "src": "8776:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 758,
                            "name": "reserveContractAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 20,
                            "src": "8681:22:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          ],
                          "id": 757,
                          "name": "Reserve",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1128,
                          "src": "8673:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_Reserve_$1128_$",
                            "typeString": "type(contract Reserve)"
                          }
                        },
                        "id": 759,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8673:31:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Reserve_$1128",
                          "typeString": "contract Reserve"
                        }
                      },
                      "id": 760,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferToLiquidity",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1115,
                      "src": "8673:51:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 763,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8673:126:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 764,
                  "nodeType": "ExpressionStatement",
                  "src": "8673:126:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 769,
                        "name": "reserveContractAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 20,
                        "src": "8878:22:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "id": 770,
                        "name": "currentTokenAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 699,
                        "src": "8914:18:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 766,
                            "name": "mindpayContractAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 16,
                            "src": "8818:22:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 765,
                          "name": "Mindpay",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1039,
                          "src": "8810:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_Mindpay_$1039_$",
                            "typeString": "type(contract Mindpay)"
                          }
                        },
                        "id": 767,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8810:31:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Mindpay_$1039",
                          "typeString": "contract Mindpay"
                        }
                      },
                      "id": 768,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "approveReserveContract",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1001,
                      "src": "8810:54:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 771,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8810:132:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 772,
                  "nodeType": "ExpressionStatement",
                  "src": "8810:132:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 777,
                        "name": "reserveContractAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 20,
                        "src": "9024:22:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "id": 778,
                        "name": "stakingContractAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 22,
                        "src": "9060:22:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 779,
                        "name": "currentTokenAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 699,
                        "src": "9096:18:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 774,
                            "name": "mindpayContractAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 16,
                            "src": "8961:22:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 773,
                          "name": "Mindpay",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1039,
                          "src": "8953:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_Mindpay_$1039_$",
                            "typeString": "type(contract Mindpay)"
                          }
                        },
                        "id": 775,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8953:31:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Mindpay_$1039",
                          "typeString": "contract Mindpay"
                        }
                      },
                      "id": 776,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferToStakingContract",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1021,
                      "src": "8953:57:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256) external"
                      }
                    },
                    "id": 780,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8953:171:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 781,
                  "nodeType": "ExpressionStatement",
                  "src": "8953:171:0"
                }
              ]
            },
            "functionSelector": "0ab1e603",
            "id": 783,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 635,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 634,
                  "name": "nonReentrant",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1788,
                  "src": "7456:12:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "7456:12:0"
              },
              {
                "id": 637,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 636,
                  "name": "onlyNonContract",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 70,
                  "src": "7469:15:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "7469:15:0"
              }
            ],
            "name": "stakeInvestment",
            "nameLocation": "7431:15:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 633,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7446:2:0"
            },
            "returnParameters": {
              "id": 638,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7485:0:0"
            },
            "scope": 890,
            "src": "7422:1709:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 794,
              "nodeType": "Block",
              "src": "9200:63:0",
              "statements": [
                {
                  "expression": {
                    "expression": {
                      "arguments": [
                        {
                          "id": 790,
                          "name": "reserveContractAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 20,
                          "src": "9225:22:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        ],
                        "id": 789,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "9217:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 788,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "9217:7:0",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 791,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "9217:31:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 792,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "balance",
                    "nodeType": "MemberAccess",
                    "src": "9217:39:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 787,
                  "id": 793,
                  "nodeType": "Return",
                  "src": "9210:46:0"
                }
              ]
            },
            "functionSelector": "6b7bedca",
            "id": 795,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getReserveContractBalance",
            "nameLocation": "9146:25:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 784,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9171:2:0"
            },
            "returnParameters": {
              "id": 787,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 786,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 795,
                  "src": "9194:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 785,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "9194:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9193:6:0"
            },
            "scope": 890,
            "src": "9137:126:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 806,
              "nodeType": "Block",
              "src": "9334:65:0",
              "statements": [
                {
                  "expression": {
                    "expression": {
                      "arguments": [
                        {
                          "id": 802,
                          "name": "liquidityContractAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 18,
                          "src": "9359:24:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 801,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "9351:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 800,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "9351:7:0",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 803,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "9351:33:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 804,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "balance",
                    "nodeType": "MemberAccess",
                    "src": "9351:41:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 799,
                  "id": 805,
                  "nodeType": "Return",
                  "src": "9344:48:0"
                }
              ]
            },
            "functionSelector": "cf8b16bc",
            "id": 807,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getLiquidityContractBalance",
            "nameLocation": "9278:27:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 796,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9305:2:0"
            },
            "returnParameters": {
              "id": 799,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 798,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 807,
                  "src": "9328:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 797,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "9328:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9327:6:0"
            },
            "scope": 890,
            "src": "9269:130:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 829,
              "nodeType": "Block",
              "src": "9465:173:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 820,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 814,
                              "name": "usersData",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 48,
                              "src": "9496:9:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserData_$43_storage_$",
                                "typeString": "mapping(address => struct Investment.UserData storage ref)"
                              }
                            },
                            "id": 817,
                            "indexExpression": {
                              "expression": {
                                "id": 815,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "9506:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 816,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "9506:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "9496:21:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_UserData_$43_storage",
                              "typeString": "struct Investment.UserData storage ref"
                            }
                          },
                          "id": 818,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "usersDataExists",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 42,
                          "src": "9496:37:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "74727565",
                          "id": 819,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "9537:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "src": "9496:45:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "55736572206461746120646f6573206e6f74206578697374732e",
                        "id": 821,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9555:28:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_3dc89d953ca4d9a94dd2421ecdaa12dc57f5664043730dcee788296245e6c0a2",
                          "typeString": "literal_string \"User data does not exists.\""
                        },
                        "value": "User data does not exists."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_3dc89d953ca4d9a94dd2421ecdaa12dc57f5664043730dcee788296245e6c0a2",
                          "typeString": "literal_string \"User data does not exists.\""
                        }
                      ],
                      "id": 813,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "9475:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 822,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9475:118:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 823,
                  "nodeType": "ExpressionStatement",
                  "src": "9475:118:0"
                },
                {
                  "expression": {
                    "baseExpression": {
                      "id": 824,
                      "name": "usersData",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 48,
                      "src": "9610:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserData_$43_storage_$",
                        "typeString": "mapping(address => struct Investment.UserData storage ref)"
                      }
                    },
                    "id": 827,
                    "indexExpression": {
                      "expression": {
                        "id": 825,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "9620:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 826,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "9620:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "9610:21:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_UserData_$43_storage",
                      "typeString": "struct Investment.UserData storage ref"
                    }
                  },
                  "functionReturnParameters": 812,
                  "id": 828,
                  "nodeType": "Return",
                  "src": "9603:28:0"
                }
              ]
            },
            "functionSelector": "22e8c87d",
            "id": 830,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getUserData",
            "nameLocation": "9414:11:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 808,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9425:2:0"
            },
            "returnParameters": {
              "id": 812,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 811,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 830,
                  "src": "9448:15:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_UserData_$43_memory_ptr",
                    "typeString": "struct Investment.UserData"
                  },
                  "typeName": {
                    "id": 810,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 809,
                      "name": "UserData",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 43,
                      "src": "9448:8:0"
                    },
                    "referencedDeclaration": 43,
                    "src": "9448:8:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_UserData_$43_storage_ptr",
                      "typeString": "struct Investment.UserData"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9447:17:0"
            },
            "scope": 890,
            "src": "9405:233:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 850,
              "nodeType": "Block",
              "src": "9705:142:0",
              "statements": [
                {
                  "expression": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "id": 841,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "baseExpression": {
                            "id": 835,
                            "name": "usersData",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 48,
                            "src": "9722:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserData_$43_storage_$",
                              "typeString": "mapping(address => struct Investment.UserData storage ref)"
                            }
                          },
                          "id": 838,
                          "indexExpression": {
                            "expression": {
                              "id": 836,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "9732:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 837,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "9732:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "9722:21:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_UserData_$43_storage",
                            "typeString": "struct Investment.UserData storage ref"
                          }
                        },
                        "id": 839,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "usersDataExists",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 42,
                        "src": "9722:37:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "hexValue": "74727565",
                        "id": 840,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9763:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      },
                      "src": "9722:45:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseExpression": {
                      "hexValue": "30",
                      "id": 847,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "9839:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "id": 848,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "Conditional",
                    "src": "9722:118:0",
                    "trueExpression": {
                      "expression": {
                        "baseExpression": {
                          "id": 842,
                          "name": "usersData",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 48,
                          "src": "9782:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserData_$43_storage_$",
                            "typeString": "mapping(address => struct Investment.UserData storage ref)"
                          }
                        },
                        "id": 845,
                        "indexExpression": {
                          "expression": {
                            "id": 843,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "9792:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 844,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "9792:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "9782:21:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_UserData_$43_storage",
                          "typeString": "struct Investment.UserData storage ref"
                        }
                      },
                      "id": 846,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "investmenstEndingTime",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 40,
                      "src": "9782:43:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 834,
                  "id": 849,
                  "nodeType": "Return",
                  "src": "9715:125:0"
                }
              ]
            },
            "functionSelector": "3ef08267",
            "id": 851,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getInvestmentEndingTime",
            "nameLocation": "9653:23:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 831,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9676:2:0"
            },
            "returnParameters": {
              "id": 834,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 833,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 851,
                  "src": "9699:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 832,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "9699:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9698:6:0"
            },
            "scope": 890,
            "src": "9644:203:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 871,
              "nodeType": "Block",
              "src": "9917:137:0",
              "statements": [
                {
                  "expression": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "id": 862,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "baseExpression": {
                            "id": 856,
                            "name": "usersData",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 48,
                            "src": "9934:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserData_$43_storage_$",
                              "typeString": "mapping(address => struct Investment.UserData storage ref)"
                            }
                          },
                          "id": 859,
                          "indexExpression": {
                            "expression": {
                              "id": 857,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "9944:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 858,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "9944:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "9934:21:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_UserData_$43_storage",
                            "typeString": "struct Investment.UserData storage ref"
                          }
                        },
                        "id": 860,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "usersDataExists",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 42,
                        "src": "9934:37:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "hexValue": "74727565",
                        "id": 861,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9975:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      },
                      "src": "9934:45:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseExpression": {
                      "hexValue": "30",
                      "id": 868,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "10046:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "id": 869,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "Conditional",
                    "src": "9934:113:0",
                    "trueExpression": {
                      "expression": {
                        "baseExpression": {
                          "id": 863,
                          "name": "usersData",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 48,
                          "src": "9994:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserData_$43_storage_$",
                            "typeString": "mapping(address => struct Investment.UserData storage ref)"
                          }
                        },
                        "id": 866,
                        "indexExpression": {
                          "expression": {
                            "id": 864,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "10004:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 865,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "10004:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "9994:21:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_UserData_$43_storage",
                          "typeString": "struct Investment.UserData storage ref"
                        }
                      },
                      "id": 867,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "totalTokenAmount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 34,
                      "src": "9994:38:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 855,
                  "id": 870,
                  "nodeType": "Return",
                  "src": "9927:120:0"
                }
              ]
            },
            "functionSelector": "d37392b9",
            "id": 872,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getUserMindpayTokenBalance",
            "nameLocation": "9862:26:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 852,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9888:2:0"
            },
            "returnParameters": {
              "id": 855,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 854,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 872,
                  "src": "9911:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 853,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "9911:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9910:6:0"
            },
            "scope": 890,
            "src": "9853:201:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 879,
              "nodeType": "Block",
              "src": "10124:48:0",
              "statements": [
                {
                  "expression": {
                    "id": 877,
                    "name": "totalMindapayTokenAmount",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 24,
                    "src": "10141:24:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 876,
                  "id": 878,
                  "nodeType": "Return",
                  "src": "10134:31:0"
                }
              ]
            },
            "functionSelector": "9b4b7154",
            "id": 880,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getTotalMindpayTokenSupply",
            "nameLocation": "10069:26:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 873,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10095:2:0"
            },
            "returnParameters": {
              "id": 876,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 875,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 880,
                  "src": "10118:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 874,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "10118:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10117:6:0"
            },
            "scope": 890,
            "src": "10060:112:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 888,
              "nodeType": "Block",
              "src": "10230:39:0",
              "statements": [
                {
                  "expression": {
                    "expression": {
                      "id": 885,
                      "name": "block",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4294967292,
                      "src": "10247:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_block",
                        "typeString": "block"
                      }
                    },
                    "id": 886,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "timestamp",
                    "nodeType": "MemberAccess",
                    "src": "10247:15:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 884,
                  "id": 887,
                  "nodeType": "Return",
                  "src": "10240:22:0"
                }
              ]
            },
            "functionSelector": "29cb924d",
            "id": 889,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getCurrentTime",
            "nameLocation": "10187:14:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 881,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10201:2:0"
            },
            "returnParameters": {
              "id": 884,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 883,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 889,
                  "src": "10224:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 882,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "10224:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10223:6:0"
            },
            "scope": 890,
            "src": "10178:91:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 891,
        "src": "451:9820:0",
        "usedErrors": []
      }
    ],
    "src": "32:10239:0"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.14+commit.80d49f37.Emscripten.clang"
  },
  "networks": {
    "3": {
      "events": {},
      "links": {},
      "address": "0xd9Aa883A7bc6787e901BeD77de123caa849f2E1d",
      "transactionHash": "0x3d8cf28ca2c1acba8c2b34bd7392ce5715ec2af0ce38ac31c10608f2fbd28926"
    }
  },
  "schemaVersion": "3.4.7",
  "updatedAt": "2022-05-20T04:58:50.368Z",
  "networkType": "ethereum",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}