{
	"compiler": {
		"version": "0.8.14+commit.80d49f37"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"inputs": [],
				"stateMutability": "nonpayable",
				"type": "constructor"
			},
			{
				"inputs": [],
				"name": "cancelInvestment",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "getCurrentTime",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "getInvestmentEndingTime",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "getLiquidityContractBalance",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "getReserveContractBalance",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "getTotalMindpayTokenSupply",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "getUserData",
				"outputs": [
					{
						"components": [
							{
								"internalType": "address payable",
								"name": "userAddress",
								"type": "address"
							},
							{
								"internalType": "uint256",
								"name": "investedAmount",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "reserveAmount",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "liquidityAmount",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "totalTokenAmount",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "currentTokenAmount",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "investmenstStartingTime",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "investmenstEndingTime",
								"type": "uint256"
							},
							{
								"internalType": "bool",
								"name": "usersDataExists",
								"type": "bool"
							}
						],
						"internalType": "struct Investment.UserData",
						"name": "",
						"type": "tuple"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "getUserMindpayTokenBalance",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "investAmount",
				"outputs": [],
				"stateMutability": "payable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "liquidityContractAddress",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "mindpayContractAddress",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "reserveContractAddress",
				"outputs": [
					{
						"internalType": "address payable",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "stakeInvestment",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "stakingContractAddress",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "totalMindapayTokenAmount",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			}
		],
		"devdoc": {
			"kind": "dev",
			"methods": {},
			"version": 1
		},
		"userdoc": {
			"kind": "user",
			"methods": {},
			"version": 1
		}
	},
	"settings": {
		"compilationTarget": {
			"contracts/Investment.sol": "Investment"
		},
		"evmVersion": "london",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": false,
			"runs": 200
		},
		"remappings": []
	},
	"sources": {
		"contracts/Investment.sol": {
			"keccak256": "0x8b1a604a38caa1f28a6aeac1cd9b6c5093a43d289ad80b909d287bd0ff3fa650",
			"license": "MIT",
			"urls": [
				"bzz-raw://755c125220846451d9a51f5f9e0441e74ae7600e89e697fbc7c06c36b1cb7e8e",
				"dweb:/ipfs/QmYaGyH8Acpetims9aHwQhn8yUQqBJpY9UzrUSz4Pfayqc"
			]
		},
		"contracts/Liquidity.sol": {
			"keccak256": "0x84604dea15e5fd9729d0403ea504c83d44f2e1f6f6cf9aa5218f384f0c5f7a9a",
			"license": "MIT",
			"urls": [
				"bzz-raw://3f4d26624d2521721e04a7084f1a465301ba6a6499ae48da19f5779d2213bdbd",
				"dweb:/ipfs/QmdswzPRX7H5hg77noUH42XGiRMnsquEDt9DGRBvbU57mp"
			]
		},
		"contracts/Mindpay.sol": {
			"keccak256": "0x5e33f8e6ee27bc8fc05f6a09e3031af0cfe5ffd52b8e939f679d0b5b43ea2347",
			"license": "MIT",
			"urls": [
				"bzz-raw://d8beda9aa47de3c5a92024831aa2a7a15f8caccf7e47f273ea17e01b94b11ebe",
				"dweb:/ipfs/QmQnPUn5Nsn67qzFJmC3RQ89P2Xp8ZEoNDfdWXdFxf9Uxd"
			]
		},
		"contracts/Reserve.sol": {
			"keccak256": "0xade1807929ce6851b6289ba52515c46ee09910834c7e88e58a4f276005828e4d",
			"license": "MIT",
			"urls": [
				"bzz-raw://8d48b9a47c8e471841545b41f11e235c090b20028aa2e46fdfa67d1b1fd083ef",
				"dweb:/ipfs/Qmf32Z12VXKxat1wb7the4X76QzKPfJoM7hQ4kRuQuKdqb"
			]
		},
		"contracts/Staking.sol": {
			"keccak256": "0x7a8ae58e14671fa9963431b81fea7d9e3ed48562eb21d69f7371c4187f5e04d6",
			"license": "MIT",
			"urls": [
				"bzz-raw://f86ce68586b0cfd86a5bbea46f3202aea7ed5a015f57ac7e6cbcc8fe61a59321",
				"dweb:/ipfs/Qma9WZd7nVCdvdyepHRcF2mcY9iJi34w5LjqgoCLZgubXf"
			]
		},
		"node_modules/@openzeppelin/contracts/security/ReentrancyGuard.sol": {
			"keccak256": "0x0e9621f60b2faabe65549f7ed0f24e8853a45c1b7990d47e8160e523683f3935",
			"license": "MIT",
			"urls": [
				"bzz-raw://287a2f8d5814dd0f05f22b740f18ca8321acc21c9bd03a6cb2203ea626e2f3f2",
				"dweb:/ipfs/QmZRQv9iuwU817VuqkA2WweiaibKii69x9QxYBBEfbNEud"
			]
		},
		"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol": {
			"keccak256": "0xe0c8b625a79bac0fe80f17cfb521e072805cc9cef1c96a5caf45b264e74812fa",
			"license": "MIT",
			"urls": [
				"bzz-raw://12fd1efc9ad061ef675bd50fb0c8e3c6f2952a09f8df0e3c688b8d81b8918838",
				"dweb:/ipfs/QmawN6PjTwy91pU7ANjCSgbsLc8TDA6hwu9GsFFaNSuhb5"
			]
		},
		"node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol": {
			"keccak256": "0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b",
			"license": "MIT",
			"urls": [
				"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34",
				"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr"
			]
		},
		"node_modules/@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
			"keccak256": "0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca",
			"license": "MIT",
			"urls": [
				"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd",
				"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8"
			]
		},
		"node_modules/@openzeppelin/contracts/utils/Address.sol": {
			"keccak256": "0x2ccf9d2313a313d41a791505f2b5abfdc62191b5d4334f7f7a82691c088a1c87",
			"license": "MIT",
			"urls": [
				"bzz-raw://b3a57d0854b2fdce6ebff933a48dca2445643d1eccfc27f00292e937f26c6a58",
				"dweb:/ipfs/QmW45rZooS9TqR4YXUbjRbtf2Bpb5ouSarBvfW1LdGprvV"
			]
		},
		"node_modules/@openzeppelin/contracts/utils/Context.sol": {
			"keccak256": "0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7",
			"license": "MIT",
			"urls": [
				"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92",
				"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3"
			]
		},
		"node_modules/@openzeppelin/contracts/utils/math/SafeMath.sol": {
			"keccak256": "0x0f633a0223d9a1dcccfcf38a64c9de0874dfcbfac0c6941ccf074d63a2ce0e1e",
			"license": "MIT",
			"urls": [
				"bzz-raw://864a40efcffdf408044c332a5aa38ec5618ed7b4eecb8f65faf45671bd6cdc65",
				"dweb:/ipfs/QmQJquTMtc6fgm5JQzGdsGpA2fqBe3MHWEdt2qzaLySMdN"
			]
		}
	},
	"version": 1
}